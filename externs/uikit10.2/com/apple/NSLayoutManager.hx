package com.apple;

import cpp.objc.NSString;
import cpp.objc.NSDictionary;
import haxe.Int64;

@:objc
@:native("NSLayoutManager")
@:include("UIKit/UIKit.h")
extern class NSLayoutManager
implements cpp.objc.Protocol<NSCoding>
{
  @:native("CGGlyphAtIndex") public function CGGlyphAtIndex(glyphIndex:Int):Int;
  @:native("CGGlyphAtIndex:isValidIndex") public function CGGlyphAtIndex_isValidIndex(glyphIndex:Int, isValidIndex:Bool):Int;
  @:native("addTextContainer") public function addTextContainer(container:NSTextContainer):Void;
  @:native("alloc") public static function alloc():NSLayoutManager;
  @:native("allowsNonContiguousLayout") public function allowsNonContiguousLayout():Bool;
  @:native("attachmentSizeForGlyphAtIndex") public function attachmentSizeForGlyphAtIndex(glyphIndex:Int):CGSize;
  @:native("autorelease") public function autorelease():NSLayoutManager;
  @:native("boundingRectForGlyphRange:inTextContainer") public function boundingRectForGlyphRange_inTextContainer(glyphRange:Dynamic /*_NSRange*/, container:NSTextContainer):CGRect;
  @:native("characterIndexForGlyphAtIndex") public function characterIndexForGlyphAtIndex(glyphIndex:Int):Int;
  @:native("characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints") public function characterIndexForPoint_inTextContainer_fractionOfDistanceBetweenInsertionPoints(point:CGPoint, container:NSTextContainer, partialFraction:Float):Int;
  @:native("characterRangeForGlyphRange:actualGlyphRange") public function characterRangeForGlyphRange_actualGlyphRange(glyphRange:Dynamic /*_NSRange*/, actualGlyphRange:Dynamic /*_NSRange*/):Dynamic /*_NSRange*/;
  @:native("delegate") public function delegate():NSLayoutManagerDelegate;
  @:native("drawBackgroundForGlyphRange:atPoint") public function drawBackgroundForGlyphRange_atPoint(glyphsToShow:Dynamic /*_NSRange*/, origin:CGPoint):Void;
  @:native("drawGlyphsForGlyphRange:atPoint") public function drawGlyphsForGlyphRange_atPoint(glyphsToShow:Dynamic /*_NSRange*/, origin:CGPoint):Void;
  @:native("drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin") public function drawStrikethroughForGlyphRange_strikethroughType_baselineOffset_lineFragmentRect_lineFragmentGlyphRange_containerOrigin(glyphRange:Dynamic /*_NSRange*/, strikethroughVal:NSUnderlineStyle, baselineOffset:Float, lineRect:CGRect, lineGlyphRange:Dynamic /*_NSRange*/, containerOrigin:CGPoint):Void;
  @:native("drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin") public function drawUnderlineForGlyphRange_underlineType_baselineOffset_lineFragmentRect_lineFragmentGlyphRange_containerOrigin(glyphRange:Dynamic /*_NSRange*/, underlineVal:NSUnderlineStyle, baselineOffset:Float, lineRect:CGRect, lineGlyphRange:Dynamic /*_NSRange*/, containerOrigin:CGPoint):Void;
  @:native("drawsOutsideLineFragmentForGlyphAtIndex") public function drawsOutsideLineFragmentForGlyphAtIndex(glyphIndex:Int):Bool;
  /* Implicit from NSCoding */ @:native("encodeWithCoder") public function encodeWithCoder(aCoder:NSCoder):Void;
  @:native("ensureGlyphsForCharacterRange") public function ensureGlyphsForCharacterRange(charRange:Dynamic /*_NSRange*/):Void;
  @:native("ensureGlyphsForGlyphRange") public function ensureGlyphsForGlyphRange(glyphRange:Dynamic /*_NSRange*/):Void;
  @:native("ensureLayoutForBoundingRect:inTextContainer") public function ensureLayoutForBoundingRect_inTextContainer(bounds:CGRect, container:NSTextContainer):Void;
  @:native("ensureLayoutForCharacterRange") public function ensureLayoutForCharacterRange(charRange:Dynamic /*_NSRange*/):Void;
  @:native("ensureLayoutForGlyphRange") public function ensureLayoutForGlyphRange(glyphRange:Dynamic /*_NSRange*/):Void;
  @:native("ensureLayoutForTextContainer") public function ensureLayoutForTextContainer(container:NSTextContainer):Void;
  @:native("enumerateEnclosingRectsForGlyphRange:withinSelectedGlyphRange:inTextContainer:usingBlock") public function enumerateEnclosingRectsForGlyphRange_withinSelectedGlyphRange_inTextContainer_usingBlock(glyphRange:Dynamic /*_NSRange*/, selectedRange:Dynamic /*_NSRange*/, textContainer:NSTextContainer, block:Dynamic):Void;
  @:native("enumerateLineFragmentsForGlyphRange:usingBlock") public function enumerateLineFragmentsForGlyphRange_usingBlock(glyphRange:Dynamic /*_NSRange*/, block:Dynamic):Void;
  @:native("extraLineFragmentRect") public function extraLineFragmentRect():CGRect;
  @:native("extraLineFragmentTextContainer") public function extraLineFragmentTextContainer():NSTextContainer;
  @:native("extraLineFragmentUsedRect") public function extraLineFragmentUsedRect():CGRect;
  @:native("fillBackgroundRectArray:count:forCharacterRange:color") public function fillBackgroundRectArray_count_forCharacterRange_color(rectArray:Dynamic, rectCount:Int, charRange:Dynamic /*_NSRange*/, color:UIColor):Void;
  @:native("firstUnlaidCharacterIndex") public function firstUnlaidCharacterIndex():Int;
  @:native("firstUnlaidGlyphIndex") public function firstUnlaidGlyphIndex():Int;
  @:native("fractionOfDistanceThroughGlyphForPoint:inTextContainer") public function fractionOfDistanceThroughGlyphForPoint_inTextContainer(point:CGPoint, container:NSTextContainer):Float;
  @:native("getFirstUnlaidCharacterIndex:glyphIndex") public function getFirstUnlaidCharacterIndex_glyphIndex(charIndex:Int, glyphIndex:Int):Void;
  @:native("getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels") public function getGlyphsInRange_glyphs_properties_characterIndexes_bidiLevels(glyphRange:Dynamic /*_NSRange*/, glyphBuffer:Int, props:NSGlyphProperty, charIndexBuffer:Int, bidiLevelBuffer:Int):Int;
  @:native("getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes") public function getLineFragmentInsertionPointsForCharacterAtIndex_alternatePositions_inDisplayOrder_positions_characterIndexes(charIndex:Int, aFlag:Bool, dFlag:Bool, positions:Float, charIndexes:Int):Int;
  @:native("glyphAtIndex") public function glyphAtIndex(glyphIndex:Int):Int;
  @:native("glyphAtIndex:isValidIndex") public function glyphAtIndex_isValidIndex(glyphIndex:Int, isValidIndex:Bool):Int;
  @:native("glyphIndexForCharacterAtIndex") public function glyphIndexForCharacterAtIndex(charIndex:Int):Int;
  @:native("glyphIndexForPoint:inTextContainer") public function glyphIndexForPoint_inTextContainer(point:CGPoint, container:NSTextContainer):Int;
  @:native("glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph") public function glyphIndexForPoint_inTextContainer_fractionOfDistanceThroughGlyph(point:CGPoint, container:NSTextContainer, partialFraction:Float):Int;
  @:native("glyphRangeForBoundingRect:inTextContainer") public function glyphRangeForBoundingRect_inTextContainer(bounds:CGRect, container:NSTextContainer):Dynamic /*_NSRange*/;
  @:native("glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer") public function glyphRangeForBoundingRectWithoutAdditionalLayout_inTextContainer(bounds:CGRect, container:NSTextContainer):Dynamic /*_NSRange*/;
  @:native("glyphRangeForCharacterRange:actualCharacterRange") public function glyphRangeForCharacterRange_actualCharacterRange(charRange:Dynamic /*_NSRange*/, actualCharRange:Dynamic /*_NSRange*/):Dynamic /*_NSRange*/;
  @:native("glyphRangeForTextContainer") public function glyphRangeForTextContainer(container:NSTextContainer):Dynamic /*_NSRange*/;
  @:native("hasNonContiguousLayout") public function hasNonContiguousLayout():Bool;
  @:native("hyphenationFactor") public function hyphenationFactor():Float;
  @:native("init") public function init():NSLayoutManager;
  @:native("initWithCoder") public function initWithCoder(coder:NSCoder):NSLayoutManager;
  @:native("insertTextContainer:atIndex") public function insertTextContainer_atIndex(container:NSTextContainer, index:Int):Void;
  @:native("invalidateDisplayForCharacterRange") public function invalidateDisplayForCharacterRange(charRange:Dynamic /*_NSRange*/):Void;
  @:native("invalidateDisplayForGlyphRange") public function invalidateDisplayForGlyphRange(glyphRange:Dynamic /*_NSRange*/):Void;
  @:native("invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange") public function invalidateGlyphsForCharacterRange_changeInLength_actualCharacterRange(charRange:Dynamic /*_NSRange*/, delta:Int, actualCharRange:Dynamic /*_NSRange*/):Void;
  @:native("invalidateLayoutForCharacterRange:actualCharacterRange") public function invalidateLayoutForCharacterRange_actualCharacterRange(charRange:Dynamic /*_NSRange*/, actualCharRange:Dynamic /*_NSRange*/):Void;
  @:native("isValidGlyphIndex") public function isValidGlyphIndex(glyphIndex:Int):Bool;
  @:native("lineFragmentRectForGlyphAtIndex:effectiveRange") public function lineFragmentRectForGlyphAtIndex_effectiveRange(glyphIndex:Int, effectiveGlyphRange:Dynamic /*_NSRange*/):CGRect;
  @:native("lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout") public function lineFragmentRectForGlyphAtIndex_effectiveRange_withoutAdditionalLayout(glyphIndex:Int, effectiveGlyphRange:Dynamic /*_NSRange*/, flag:Bool):CGRect;
  @:native("lineFragmentUsedRectForGlyphAtIndex:effectiveRange") public function lineFragmentUsedRectForGlyphAtIndex_effectiveRange(glyphIndex:Int, effectiveGlyphRange:Dynamic /*_NSRange*/):CGRect;
  @:native("lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout") public function lineFragmentUsedRectForGlyphAtIndex_effectiveRange_withoutAdditionalLayout(glyphIndex:Int, effectiveGlyphRange:Dynamic /*_NSRange*/, flag:Bool):CGRect;
  @:native("locationForGlyphAtIndex") public function locationForGlyphAtIndex(glyphIndex:Int):CGPoint;
  @:native("notShownAttributeForGlyphAtIndex") public function notShownAttributeForGlyphAtIndex(glyphIndex:Int):Bool;
  @:native("numberOfGlyphs") public function numberOfGlyphs():Int;
  @:native("processEditingForTextStorage:edited:range:changeInLength:invalidatedRange") public function processEditingForTextStorage_edited_range_changeInLength_invalidatedRange(textStorage:NSTextStorage, editMask:NSTextStorageEditActions, newCharRange:Dynamic /*_NSRange*/, delta:Int, invalidatedCharRange:Dynamic /*_NSRange*/):Void;
  @:native("propertyForGlyphAtIndex") public function propertyForGlyphAtIndex(glyphIndex:Int):NSGlyphProperty;
  @:native("rangeOfNominallySpacedGlyphsContainingIndex") public function rangeOfNominallySpacedGlyphsContainingIndex(glyphIndex:Int):Dynamic /*_NSRange*/;
  @:native("removeTextContainerAtIndex") public function removeTextContainerAtIndex(index:Int):Void;
  @:native("setAllowsNonContiguousLayout") public function setAllowsNonContiguousLayout(allowsNonContiguousLayout:Bool):Void;
  @:native("setAttachmentSize:forGlyphRange") public function setAttachmentSize_forGlyphRange(attachmentSize:CGSize, glyphRange:Dynamic /*_NSRange*/):Void;
  @:native("setDelegate") public function setDelegate(delegate:NSLayoutManagerDelegate):Void;
  @:native("setDrawsOutsideLineFragment:forGlyphAtIndex") public function setDrawsOutsideLineFragment_forGlyphAtIndex(flag:Bool, glyphIndex:Int):Void;
  @:native("setExtraLineFragmentRect:usedRect:textContainer") public function setExtraLineFragmentRect_usedRect_textContainer(fragmentRect:CGRect, usedRect:CGRect, container:NSTextContainer):Void;
  @:native("setGlyphs:properties:characterIndexes:font:forGlyphRange") public function setGlyphs_properties_characterIndexes_font_forGlyphRange(glyphs:Dynamic, props:Dynamic, charIndexes:Dynamic, aFont:UIFont, glyphRange:Dynamic /*_NSRange*/):Void;
  @:native("setHyphenationFactor") public function setHyphenationFactor(hyphenationFactor:Float):Void;
  @:native("setLineFragmentRect:forGlyphRange:usedRect") public function setLineFragmentRect_forGlyphRange_usedRect(fragmentRect:CGRect, glyphRange:Dynamic /*_NSRange*/, usedRect:CGRect):Void;
  @:native("setLocation:forStartOfGlyphRange") public function setLocation_forStartOfGlyphRange(location:CGPoint, glyphRange:Dynamic /*_NSRange*/):Void;
  @:native("setNotShownAttribute:forGlyphAtIndex") public function setNotShownAttribute_forGlyphAtIndex(flag:Bool, glyphIndex:Int):Void;
  @:native("setShowsControlCharacters") public function setShowsControlCharacters(showsControlCharacters:Bool):Void;
  @:native("setShowsInvisibleCharacters") public function setShowsInvisibleCharacters(showsInvisibleCharacters:Bool):Void;
  @:native("setTextContainer:forGlyphRange") public function setTextContainer_forGlyphRange(container:NSTextContainer, glyphRange:Dynamic /*_NSRange*/):Void;
  @:native("setTextStorage") public function setTextStorage(textStorage:NSTextStorage):Void;
  @:native("setUsesFontLeading") public function setUsesFontLeading(usesFontLeading:Bool):Void;
  @:native("showCGGlyphs:positions:count:font:matrix:attributes:inContext") public function showCGGlyphs_positions_count_font_matrix_attributes_inContext(glyphs:Dynamic, positions:Dynamic, glyphCount:Int, font:UIFont, textMatrix:CGAffineTransform, attributes:Dynamic, graphicsContext:CGContext):Void;
  @:native("showsControlCharacters") public function showsControlCharacters():Bool;
  @:native("showsInvisibleCharacters") public function showsInvisibleCharacters():Bool;
  @:native("strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin") public function strikethroughGlyphRange_strikethroughType_lineFragmentRect_lineFragmentGlyphRange_containerOrigin(glyphRange:Dynamic /*_NSRange*/, strikethroughVal:NSUnderlineStyle, lineRect:CGRect, lineGlyphRange:Dynamic /*_NSRange*/, containerOrigin:CGPoint):Void;
  @:native("textContainerChangedGeometry") public function textContainerChangedGeometry(container:NSTextContainer):Void;
  @:native("textContainerForGlyphAtIndex:effectiveRange") public function textContainerForGlyphAtIndex_effectiveRange(glyphIndex:Int, effectiveGlyphRange:Dynamic /*_NSRange*/):NSTextContainer;
  @:native("textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout") public function textContainerForGlyphAtIndex_effectiveRange_withoutAdditionalLayout(glyphIndex:Int, effectiveGlyphRange:Dynamic /*_NSRange*/, flag:Bool):NSTextContainer;
  @:native("textContainers") public function textContainers():Dynamic;
  @:native("textStorage") public function textStorage():NSTextStorage;
  @:native("truncatedGlyphRangeInLineFragmentForGlyphAtIndex") public function truncatedGlyphRangeInLineFragmentForGlyphAtIndex(glyphIndex:Int):Dynamic /*_NSRange*/;
  @:native("underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin") public function underlineGlyphRange_underlineType_lineFragmentRect_lineFragmentGlyphRange_containerOrigin(glyphRange:Dynamic /*_NSRange*/, underlineVal:NSUnderlineStyle, lineRect:CGRect, lineGlyphRange:Dynamic /*_NSRange*/, containerOrigin:CGPoint):Void;
  @:native("usedRectForTextContainer") public function usedRectForTextContainer(container:NSTextContainer):CGRect;
  @:native("usesFontLeading") public function usesFontLeading():Bool;
}
