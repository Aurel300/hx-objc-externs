package com.apple;

import cpp.objc.NSString;
import cpp.objc.NSDictionary;
import haxe.Int64;


@:native("UIKit")
@:include("UIKit/UIKit.h")
extern class UIKit
{
  @:native("CFRunLoopObserverGetContext") public static function CFRunLoopObserverGetContext(observer:Dynamic /*__CFRunLoopObserver*/, context:Dynamic /*CFRunLoopObserverContext*/):Dynamic /*Void*/;
  @:native("CGFontCreateWithDataProvider") public static function CGFontCreateWithDataProvider(provider:CGDataProvider):CGFont;
  @:native("PMGetPageRange") public static function PMGetPageRange(printSettings:Dynamic /*OpaquePMPrintSettings*/, minPage:Int, maxPage:Int):Int;
  @:native("WSGetWSTypeIDFromCFType") public static function WSGetWSTypeIDFromCFType(ref:Dynamic):Dynamic /*WSTypeID*/;
  @:native("NSUnionRange") public static function NSUnionRange(range1:Dynamic /*_NSRange*/, range2:Dynamic /*_NSRange*/):Dynamic /*_NSRange*/;
  @:native("SKIndexGetAnalysisProperties") public static function SKIndexGetAnalysisProperties(inIndex:Dynamic /*__SKIndex*/):Dynamic;
  @:native("CGFontCreatePostScriptSubset") public static function CGFontCreatePostScriptSubset(font:CGFont, subsetName:Dynamic, format:CGFontPostScriptFormat, glyphs:Dynamic /*Dynamic*/, count:Dynamic /*Int*/, encoding:Dynamic /*Dynamic*/):Dynamic;
  @:native("ICStop") public static function ICStop(inst:Dynamic /*OpaqueICInstance*/):Int;
  @:native("CFStringGetBytes") public static function CFStringGetBytes(theString:Dynamic, range:Dynamic /*CFRange*/, encoding:Int, lossByte:Int, isExternalRepresentation:Int, buffer:Int, maxBufLen:Int, usedBufLen:Int):Int;
  @:native("CFNullGetTypeID") public static function CFNullGetTypeID():Int;
  @:native("CGRectContainsRect") public static function CGRectContainsRect(rect1:CGRect, rect2:CGRect):Dynamic /*Bool*/;
  @:native("IncrementAtomic8") public static function IncrementAtomic8(address:Dynamic):Dynamic;
  @:native("ATSFontSetAutoActivationSettingForApplication") public static function ATSFontSetAutoActivationSettingForApplication(iSetting:Int, iApplicationFileURL:Dynamic):Int;
  @:native("AEGetNthPtr") public static function AEGetNthPtr(theAEDescList:Dynamic /*Dynamic*/, index:Dynamic /*Int*/, desiredType:Int, theAEKeyword:Int, typeCode:Int, dataPtr:Dynamic /*Void*/, maximumSize:Int, actualSize:Int):Int;
  @:native("CTFramesetterCreateFrame") public static function CTFramesetterCreateFrame(framesetter:Dynamic, stringRange:Dynamic /*CFRange*/, path:Dynamic, frameAttributes:Dynamic):Dynamic;
  @:native("InvokeAVLCompareItemsUPP") public static function InvokeAVLCompareItemsUPP(tree:Dynamic /*AVLTreeStruct*/, i1:Dynamic /*Dynamic*/, i2:Dynamic /*Dynamic*/, nd_typ:Int, userUPP:Dynamic):Int;
  @:native("NSSwapShort") public static function NSSwapShort(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("CFCalendarSetFirstWeekday") public static function CFCalendarSetFirstWeekday(calendar:Dynamic /*__CFCalendar*/, wkdy:Int):Dynamic /*Void*/;
  @:native("CTFontDrawGlyphs") public static function CTFontDrawGlyphs(font:Dynamic, glyphs:Dynamic /*Dynamic*/, positions:Dynamic /*Dynamic*/, count:Dynamic /*Int*/, context:CGContext):Dynamic /*Void*/;
  @:native("CFSetCreate") public static function CFSetCreate(allocator:Dynamic, values:Dynamic /*Dynamic*/, numValues:Int, callBacks:Dynamic /*Dynamic*/):Dynamic;
  @:native("AbsoluteDeltaToNanoseconds") public static function AbsoluteDeltaToNanoseconds(leftAbsoluteTime:Dynamic /*UnsignedWide*/, rightAbsoluteTime:Dynamic /*UnsignedWide*/):Dynamic /*UnsignedWide*/;
  @:native("SSLGetSessionOption") public static function SSLGetSessionOption(context:Dynamic /*SSLContext*/, option:Dynamic /*SSLSessionOption*/, value:Int):Int;
  @:native("CFStringGetSmallestEncoding") public static function CFStringGetSmallestEncoding(theString:Dynamic):Int;
  @:native("SetResAttrs") public static function SetResAttrs(theResource:Int, attrs:Int):Dynamic /*Void*/;
  @:native("FSNewAliasMinimal") public static function FSNewAliasMinimal(target:Dynamic /*Dynamic*/, inAlias:Dynamic /*AliasRecord*/):Int;
  @:native("CGRectIsEmpty") public static function CGRectIsEmpty(rect:CGRect):Dynamic /*Bool*/;
  @:native("PMPrinterWritePostScriptToURL") public static function PMPrinterWritePostScriptToURL(printer:Dynamic /*OpaquePMPrinter*/, settings:Dynamic /*OpaquePMPrintSettings*/, format:Dynamic /*OpaquePMPageFormat*/, mimeType:Dynamic, sourceFileURL:Dynamic, destinationFileURL:Dynamic):Int;
  @:native("CFPreferencesCopyMultiple") public static function CFPreferencesCopyMultiple(keysToFetch:Dynamic, applicationID:Dynamic, userName:Dynamic, hostName:Dynamic):Dynamic;
  @:native("CFTreeGetNextSibling") public static function CFTreeGetNextSibling(tree:Dynamic /*__CFTree*/):Dynamic /*__CFTree*/;
  @:native("U64Or") public static function U64Or(left:Dynamic, right:Dynamic):Int;
  @:native("LaunchApplication") public static function LaunchApplication(LaunchParams:Dynamic /*LaunchParamBlockRec*/):Int;
  @:native("S64Or") public static function S64Or(left:Dynamic, right:Dynamic):Int;
  @:native("AEStreamWriteKeyDesc") public static function AEStreamWriteKeyDesc(ref:Dynamic /*OpaqueAEStreamRef*/, key:Int, newType:Int, data:Dynamic /*Dynamic*/, length:Int):Int;
  @:native("CFDictionaryRemoveAllValues") public static function CFDictionaryRemoveAllValues(theDict:Dynamic /*__CFDictionary*/):Dynamic /*Void*/;
  @:native("PBCloseForkAsync") public static function PBCloseForkAsync(paramBlock:Dynamic /*FSForkIOParam*/):Dynamic /*Void*/;
  @:native("FSEventStreamScheduleWithRunLoop") public static function FSEventStreamScheduleWithRunLoop(streamRef:Dynamic /*__FSEventStream*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("CFStringNormalize") public static function CFStringNormalize(theString:Dynamic /*__CFString*/, theForm:Dynamic /*CFStringNormalizationForm*/):Dynamic /*Void*/;
  @:native("AEGetDescData") public static function AEGetDescData(theAEDesc:Dynamic /*Dynamic*/, dataPtr:Dynamic /*Void*/, maximumSize:Int):Int;
  @:native("CFHTTPReadStreamSetRedirectsAutomatically") public static function CFHTTPReadStreamSetRedirectsAutomatically(httpStream:Dynamic /*__CFReadStream*/, shouldAutoRedirect:Int):Dynamic /*Void*/;
  @:native("SSLSetCertificate") public static function SSLSetCertificate(context:Dynamic /*SSLContext*/, certRefs:Dynamic):Int;
  @:native("GetResAttrs") public static function GetResAttrs(theResource:Int):Int;
  @:native("GetFolderTypes") public static function GetFolderTypes(requestedTypeCount:Int, totalTypeCount:Int, theTypes:Int):Int;
  @:native("WSProtocolHandlerGetTypeID") public static function WSProtocolHandlerGetTypeID():Int;
  @:native("CFBundleCopyExecutableArchitecturesForURL") public static function CFBundleCopyExecutableArchitecturesForURL(url:Dynamic):Dynamic;
  @:native("PMPrinterGetPrinterResolutionCount") public static function PMPrinterGetPrinterResolutionCount(printer:Dynamic /*OpaquePMPrinter*/, countP:Int):Int;
  @:native("ReleaseResource") public static function ReleaseResource(theResource:Int):Dynamic /*Void*/;
  @:native("DisposeOSLAccessorUPP") public static function DisposeOSLAccessorUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("UTTypeCopyDeclaration") public static function UTTypeCopyDeclaration(inUTI:Dynamic):Dynamic;
  @:native("CFRunLoopRemoveSource") public static function CFRunLoopRemoveSource(rl:Dynamic /*__CFRunLoop*/, source:Dynamic /*__CFRunLoopSource*/, mode:Dynamic):Dynamic /*Void*/;
  @:native("PMRetain") public static function PMRetain(object:Dynamic):Int;
  @:native("CTRubyAnnotationCreateCopy") public static function CTRubyAnnotationCreateCopy(rubyAnnotation:Dynamic):Dynamic;
  @:native("TECCreateSniffer") public static function TECCreateSniffer(encodingSniffer:Dynamic /*OpaqueTECSnifferObjectRef*/, testEncodings:Dynamic /*Dynamic*/, numTextEncodings:Int):Int;
  @:native("CGColorConversionInfoGetTypeID") public static function CGColorConversionInfoGetTypeID():Int;
  @:native("CFWriteStreamCreateWithAllocatedBuffers") public static function CFWriteStreamCreateWithAllocatedBuffers(alloc:Dynamic, bufferAllocator:Dynamic):Dynamic /*__CFWriteStream*/;
  @:native("ColorSyncTransformGetTypeID") public static function ColorSyncTransformGetTypeID():Int;
  @:native("CFArrayExchangeValuesAtIndices") public static function CFArrayExchangeValuesAtIndices(theArray:Dynamic /*__CFArray*/, idx1:Int, idx2:Int):Dynamic /*Void*/;
  @:native("CFAttributedStringGetTypeID") public static function CFAttributedStringGetTypeID():Int;
  @:native("AEGetCoercionHandler") public static function AEGetCoercionHandler(fromType:Int, toType:Int, handler:Dynamic, handlerRefcon:Void, fromTypeIsDesc:Int, isSysHandler:Int):Int;
  @:native("InvokeFSVolumeMountUPP") public static function InvokeFSVolumeMountUPP(volumeOp:Dynamic /*OpaqueFSVolumeOperation*/, clientData:Dynamic /*Void*/, err:Int, mountedVolumeRefNum:Int, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CFHash") public static function CFHash(cf:Dynamic):Int;
  @:native("CFTreeRemove") public static function CFTreeRemove(tree:Dynamic /*__CFTree*/):Dynamic /*Void*/;
  @:native("CFHTTPAuthenticationIsValid") public static function CFHTTPAuthenticationIsValid(auth:Dynamic /*_CFHTTPAuthentication*/, error:Dynamic /*CFStreamError*/):Int;
  @:native("AXObserverGetTypeID") public static function AXObserverGetTypeID():Int;
  @:native("PasteboardGetItemFlavorFlags") public static function PasteboardGetItemFlavorFlags(inPasteboard:Dynamic /*OpaquePasteboardRef*/, inItem:Void, inFlavorType:Dynamic, outFlags:Dynamic /*PasteboardFlavorFlags*/):Int;
  @:native("CFConvertFloat32SwappedToHost") public static function CFConvertFloat32SwappedToHost(used:Dynamic /*Dynamic*/):Float;
  @:native("CFStringAppendFormatAndArguments") public static function CFStringAppendFormatAndArguments(theString:Dynamic /*__CFString*/, formatOptions:Dynamic, format:Dynamic, arguments:Dynamic /*__va_list_tag*/):Dynamic /*Void*/;
  @:native("FSNewAliasMinimalUnicode") public static function FSNewAliasMinimalUnicode(targetParentRef:Dynamic /*Dynamic*/, targetNameLength:Int, targetName:Dynamic /*Dynamic*/, inAlias:Dynamic /*AliasRecord*/, isDirectory:Int):Int;
  @:native("CFDateFormatterGetLocale") public static function CFDateFormatterGetLocale(formatter:Dynamic /*__CFDateFormatter*/):Dynamic;
  @:native("LMSetIntlSpec") public static function LMSetIntlSpec(value:Int):Dynamic /*Void*/;
  @:native("CFHTTPMessageCopyVersion") public static function CFHTTPMessageCopyVersion(message:Dynamic /*__CFHTTPMessage*/):Dynamic;
  @:native("CFFileDescriptorIsValid") public static function CFFileDescriptorIsValid(f:Dynamic /*__CFFileDescriptor*/):Int;
  @:native("CFStringCreateWithBytesNoCopy") public static function CFStringCreateWithBytesNoCopy(alloc:Dynamic, bytes:Dynamic /*Dynamic*/, numBytes:Int, encoding:Int, isExternalRepresentation:Int, contentsDeallocator:Dynamic):Dynamic;
  @:native("CFAllocatorGetPreferredSizeForSize") public static function CFAllocatorGetPreferredSizeForSize(allocator:Dynamic, size:Int, hint:Int):Int;
  @:native("SKIndexGetMaximumBytesBeforeFlush") public static function SKIndexGetMaximumBytesBeforeFlush(inIndex:Dynamic /*__SKIndex*/):Int;
  @:native("CGPDFDocumentIsUnlocked") public static function CGPDFDocumentIsUnlocked(document:CGPDFDocument):Dynamic /*Bool*/;
  @:native("LMSetMemErr") public static function LMSetMemErr(value:Int):Dynamic /*Void*/;
  @:native("CFTimeZoneCopyDefault") public static function CFTimeZoneCopyDefault():Dynamic;
  @:native("CFStreamCreatePairWithSocketToCFHost") public static function CFStreamCreatePairWithSocketToCFHost(alloc:Dynamic, host:Dynamic /*__CFHost*/, port:Int, readStream:Dynamic /*__CFReadStream*/, writeStream:Dynamic /*__CFWriteStream*/):Dynamic /*Void*/;
  @:native("CFErrorCopyRecoverySuggestion") public static function CFErrorCopyRecoverySuggestion(err:Dynamic /*__CFError*/):Dynamic;
  @:native("CFStringTokenizerGetTypeID") public static function CFStringTokenizerGetTypeID():Int;
  @:native("AECreateDescFromExternalPtr") public static function AECreateDescFromExternalPtr(descriptorType:Int, dataPtr:Dynamic /*Dynamic*/, dataLength:Int, disposeCallback:Dynamic, disposeRefcon:Void, theDesc:Dynamic /*AEDesc*/):Int;
  @:native("CFRunLoopObserverCreate") public static function CFRunLoopObserverCreate(allocator:Dynamic, activities:Int, repeats:Int, order:Int, callout:Dynamic, context:Dynamic /*CFRunLoopObserverContext*/):Dynamic /*__CFRunLoopObserver*/;
  @:native("GetIndexedCollectionTag") public static function GetIndexedCollectionTag(c:Dynamic /*OpaqueCollection*/, tagIndex:Int, tag:Int):Int;
  @:native("CTFontCollectionCreateWithFontDescriptors") public static function CTFontCollectionCreateWithFontDescriptors(queryDescriptors:Dynamic, options:Dynamic):Dynamic;
  @:native("HIShapeCreateDifference") public static function HIShapeCreateDifference(inShape1:Dynamic, inShape2:Dynamic):Dynamic;
  @:native("DisposeSpeechPhonemeUPP") public static function DisposeSpeechPhonemeUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("SKIndexCopyDocumentRefsForDocumentIDs") public static function SKIndexCopyDocumentRefsForDocumentIDs(inIndex:Dynamic /*__SKIndex*/, inCount:Int, inDocumentIDsArray:Int, outDocumentRefsArray:Dynamic):Dynamic /*Void*/;
  @:native("CTFontManagerCompareFontFamilyNames") public static function CTFontManagerCompareFontFamilyNames(family1:Dynamic /*Dynamic*/, family2:Dynamic /*Dynamic*/, context:Dynamic /*Void*/):Dynamic /*CFComparisonResult*/;
  @:native("PMPresetGetAttributes") public static function PMPresetGetAttributes(preset:Dynamic /*OpaquePMPreset*/, attributes:Dynamic):Int;
  @:native("PMPrinterGetMakeAndModelName") public static function PMPrinterGetMakeAndModelName(printer:Dynamic /*OpaquePMPrinter*/, makeAndModel:Dynamic):Int;
  @:native("CFPlugInFindFactoriesForPlugInTypeInPlugIn") public static function CFPlugInFindFactoriesForPlugInTypeInPlugIn(typeUUID:Dynamic, plugIn:Dynamic /*__CFBundle*/):Dynamic;
  @:native("CFDataGetTypeID") public static function CFDataGetTypeID():Int;
  @:native("PMSessionSetDataInSession") public static function PMSessionSetDataInSession(printSession:Dynamic /*OpaquePMPrintSession*/, key:Dynamic, data:Dynamic):Int;
  @:native("SSLSetMaxDatagramRecordSize") public static function SSLSetMaxDatagramRecordSize(dtlsContext:Dynamic /*SSLContext*/, maxSize:Dynamic /*Int*/):Int;
  @:native("DeleteGestaltValue") public static function DeleteGestaltValue(selector:Int):Int;
  @:native("UnsignedWideToUInt64") public static function UnsignedWideToUInt64(used:Dynamic /*Dynamic*/):Dynamic;
  @:native("DisposeUnicodeToTextInfo") public static function DisposeUnicodeToTextInfo(ioUnicodeToTextInfo:Dynamic /*OpaqueUnicodeToTextInfo*/):Int;
  @:native("CGPDFContextAddDestinationAtPoint") public static function CGPDFContextAddDestinationAtPoint(context:CGContext, name:Dynamic, point:CGPoint):Dynamic /*Void*/;
  @:native("DisposeAVLCompareItemsUPP") public static function DisposeAVLCompareItemsUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("PBGetVolumeInfoAsync") public static function PBGetVolumeInfoAsync(paramBlock:Dynamic /*FSVolumeInfoParam*/):Dynamic /*Void*/;
  @:native("SetFrontProcess") public static function SetFrontProcess(PSN:Dynamic /*Dynamic*/):Int;
  @:native("PBOpenIteratorAsync") public static function PBOpenIteratorAsync(paramBlock:Dynamic /*FSCatalogBulkParam*/):Dynamic /*Void*/;
  @:native("AEStreamOpenKeyDesc") public static function AEStreamOpenKeyDesc(ref:Dynamic /*OpaqueAEStreamRef*/, key:Int, newType:Int):Int;
  @:native("UTTypeCopyAllTagsWithClass") public static function UTTypeCopyAllTagsWithClass(inUTI:Dynamic, inTagClass:Dynamic):Dynamic;
  @:native("CFURLCopyFragment") public static function CFURLCopyFragment(anURL:Dynamic, charactersToLeaveEscaped:Dynamic):Dynamic;
  @:native("SKIndexCreateWithURL") public static function SKIndexCreateWithURL(inURL:Dynamic, inIndexName:Dynamic, inIndexType:Dynamic /*SKIndexType*/, inAnalysisProperties:Dynamic):Dynamic /*__SKIndex*/;
  @:native("GetIconRefFromFolder") public static function GetIconRefFromFolder(vRefNum:Int, parentFolderID:Int, folderID:Int, attributes:Dynamic, accessPrivileges:Dynamic, theIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("CGBitmapContextGetData") public static function CGBitmapContextGetData(context:CGContext):Dynamic /*Void*/;
  @:native("CFStringCreateWithSubstring") public static function CFStringCreateWithSubstring(alloc:Dynamic, str:Dynamic, range:Dynamic /*CFRange*/):Dynamic;
  @:native("FSFileSecurityCreate") public static function FSFileSecurityCreate(alloc:Dynamic):Dynamic /*__FSFileSecurity*/;
  @:native("LMSetSysFontFam") public static function LMSetSysFontFam(value:Int):Dynamic /*Void*/;
  @:native("NSNextMapEnumeratorPair") public static function NSNextMapEnumeratorPair(enumerator:Dynamic /*NSMapEnumerator*/, key:Dynamic /*Void*/, value:Dynamic /*Void*/):Dynamic /*Bool*/;
  @:native("CTFontDescriptorCreateCopyWithFamily") public static function CTFontDescriptorCreateCopyWithFamily(original:Dynamic, family:Dynamic):Dynamic;
  @:native("AECoerceDesc") public static function AECoerceDesc(theAEDesc:Dynamic /*Dynamic*/, toType:Int, result:Dynamic /*AEDesc*/):Int;
  @:native("GetFrontProcess") public static function GetFrontProcess(PSN:Dynamic /*ProcessSerialNumber*/):Int;
  @:native("SecCertificateCopyData") public static function SecCertificateCopyData(certificate:Dynamic /*__SecCertificate*/):Dynamic;
  @:native("CFNetServiceGetAddressing") public static function CFNetServiceGetAddressing(theService:Dynamic /*__CFNetService*/):Dynamic;
  @:native("AESizeOfFlattenedDesc") public static function AESizeOfFlattenedDesc(theAEDesc:Dynamic /*Dynamic*/):Int;
  @:native("CFNetServiceGetTargetHost") public static function CFNetServiceGetTargetHost(theService:Dynamic /*__CFNetService*/):Dynamic;
  @:native("IOSurfaceCreate") public static function IOSurfaceCreate(properties:Dynamic):Dynamic /*__IOSurface*/;
  @:native("CFTreePrependChild") public static function CFTreePrependChild(tree:Dynamic /*__CFTree*/, newChild:Dynamic /*__CFTree*/):Dynamic /*Void*/;
  @:native("Fix2Long") public static function Fix2Long(x:Int):Int;
  @:native("LMSetApFontID") public static function LMSetApFontID(value:Int):Dynamic /*Void*/;
  @:native("CGPDFScannerPopArray") public static function CGPDFScannerPopArray(scanner:CGPDFScanner, value:CGPDFArray):Dynamic /*Bool*/;
  @:native("CFConvertFloat64HostToSwapped") public static function CFConvertFloat64HostToSwapped(used:Dynamic /*Dynamic*/):Dynamic /*CFSwappedFloat64*/;
  @:native("CFAbsoluteTimeGetCurrent") public static function CFAbsoluteTimeGetCurrent():Float;
  @:native("CGContextGetInterpolationQuality") public static function CGContextGetInterpolationQuality(c:CGContext):CGInterpolationQuality;
  @:native("MPThrowException") public static function MPThrowException(task:Dynamic /*OpaqueMPTaskID*/, kind:Int):Int;
  @:native("GetComponentInfo") public static function GetComponentInfo(aComponent:Dynamic /*ComponentRecord*/, cd:Dynamic /*ComponentDescription*/, componentName:Int, componentInfo:Int, componentIcon:Int):Int;
  @:native("SSLCopyTrustedRoots") public static function SSLCopyTrustedRoots(context:Dynamic /*SSLContext*/, trustedRoots:Dynamic):Int;
  @:native("CGContextGetUserSpaceToDeviceSpaceTransform") public static function CGContextGetUserSpaceToDeviceSpaceTransform(c:CGContext):CGAffineTransform;
  @:native("SpeakString") public static function SpeakString(textToBeSpoken:Dynamic):Int;
  @:native("CFDataCreateWithBytesNoCopy") public static function CFDataCreateWithBytesNoCopy(allocator:Dynamic, bytes:Dynamic /*Dynamic*/, length:Int, bytesDeallocator:Dynamic):Dynamic;
  @:native("ConvertFromUnicodeToText") public static function ConvertFromUnicodeToText(iUnicodeToTextInfo:Dynamic /*OpaqueUnicodeToTextInfo*/, iUnicodeLen:Int, iUnicodeStr:Dynamic /*Dynamic*/, iControlFlags:Int, iOffsetCount:Int, iOffsetArray:Dynamic /*Dynamic*/, oOffsetCount:Int, oOffsetArray:Int, iOutputBufLen:Int, oInputRead:Int, oOutputLen:Int, oOutputStr:Void):Int;
  @:native("FSFileSecurityRefCreateCopy") public static function FSFileSecurityRefCreateCopy(alloc:Dynamic, fileSec:Dynamic /*__FSFileSecurity*/):Dynamic /*__FSFileSecurity*/;
  @:native("SKSummaryGetParagraphSummaryInfo") public static function SKSummaryGetParagraphSummaryInfo(summary:Dynamic /*__SKSummary*/, numParagraphsInSummary:Int, outRankOrderOfParagraphs:Int, outParagraphIndexOfParagraphs:Int):Int;
  @:native("IconRefToIconFamily") public static function IconRefToIconFamily(theIconRef:Dynamic /*OpaqueIconRef*/, whichIcons:Int, iconFamily:Dynamic /*IconFamilyResource*/):Int;
  @:native("SecKeyVerifySignature") public static function SecKeyVerifySignature(key:Dynamic /*__SecKey*/, algorithm:Dynamic, signedData:Dynamic, signature:Dynamic, error:Dynamic /*__CFError*/):Int;
  @:native("Frac2Fix") public static function Frac2Fix(x:Int):Int;
  @:native("UIGraphicsPopContext") public static function UIGraphicsPopContext():Dynamic /*Void*/;
  @:native("CFWriteStreamCopyProperty") public static function CFWriteStreamCopyProperty(stream:Dynamic /*__CFWriteStream*/, propertyName:Dynamic):Dynamic;
  @:native("CFAllocatorCreate") public static function CFAllocatorCreate(allocator:Dynamic, context:Dynamic /*CFAllocatorContext*/):Dynamic;
  @:native("CFStringTransform") public static function CFStringTransform(string:Dynamic /*__CFString*/, range:Dynamic /*CFRange*/, transform:Dynamic, reverse:Int):Int;
  @:native("CFBundleCopyInfoDictionaryForURL") public static function CFBundleCopyInfoDictionaryForURL(url:Dynamic):Dynamic;
  @:native("AEInstallSpecialHandler") public static function AEInstallSpecialHandler(functionClass:Int, handler:Dynamic, isSysHandler:Int):Int;
  @:native("WideSquareRoot") public static function WideSquareRoot(source:Dynamic /*Dynamic*/):Int;
  @:native("DisposeOSLGetMarkTokenUPP") public static function DisposeOSLGetMarkTokenUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("InvokeFSVolumeUnmountUPP") public static function InvokeFSVolumeUnmountUPP(volumeOp:Dynamic /*OpaqueFSVolumeOperation*/, clientData:Dynamic /*Void*/, err:Int, volumeRefNum:Int, dissenter:Dynamic /*Dynamic*/, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CTParagraphStyleGetValueForSpecifier") public static function CTParagraphStyleGetValueForSpecifier(paragraphStyle:Dynamic, spec:Dynamic /*CTParagraphStyleSpecifier*/, valueBufferSize:Dynamic /*Int*/, valueBuffer:Dynamic /*Void*/):Dynamic /*Bool*/;
  @:native("HIShapeCreateMutable") public static function HIShapeCreateMutable():Dynamic /*__HIShape*/;
  @:native("SSLSetSessionOption") public static function SSLSetSessionOption(context:Dynamic /*SSLContext*/, option:Dynamic /*SSLSessionOption*/, value:Int):Int;
  @:native("CFStringInitInlineBuffer") public static function CFStringInitInlineBuffer(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CloneCollection") public static function CloneCollection(c:Dynamic /*OpaqueCollection*/):Dynamic /*OpaqueCollection*/;
  @:native("NSAllocateCollectable") public static function NSAllocateCollectable(size:Int, options:Int):Dynamic /*Void*/;
  @:native("CFStringCreateCopy") public static function CFStringCreateCopy(alloc:Dynamic, theString:Dynamic):Dynamic;
  @:native("SKIndexOpenWithURL") public static function SKIndexOpenWithURL(inURL:Dynamic, inIndexName:Dynamic, inWriteAccess:Int):Dynamic /*__SKIndex*/;
  @:native("InvokeSelectorFunctionUPP") public static function InvokeSelectorFunctionUPP(selector:Int, response:Int, userUPP:Dynamic):Int;
  @:native("FixMul") public static function FixMul(a:Int, b:Int):Int;
  @:native("SSLGetClientCertificateState") public static function SSLGetClientCertificateState(context:Dynamic /*SSLContext*/, clientState:Dynamic /*SSLClientCertificateState*/):Int;
  @:native("CTFrameGetTypeID") public static function CTFrameGetTypeID():Int;
  @:native("CFArrayCreateMutable") public static function CFArrayCreateMutable(allocator:Dynamic, capacity:Int, callBacks:Dynamic /*Dynamic*/):Dynamic /*__CFArray*/;
  @:native("SKIndexGetIndexType") public static function SKIndexGetIndexType(inIndex:Dynamic /*__SKIndex*/):Dynamic /*SKIndexType*/;
  @:native("IOSurfaceGetAllocSize") public static function IOSurfaceGetAllocSize(buffer:Dynamic /*__IOSurface*/):Dynamic /*Int*/;
  @:native("TECCopyTextEncodingInternetNameAndMIB") public static function TECCopyTextEncodingInternetNameAndMIB(textEncoding:Int, usage:Int, encodingNamePtr:Dynamic, mibEnumPtr:Int):Int;
  @:native("CSIdentityIsEnabled") public static function CSIdentityIsEnabled(user:Dynamic /*__CSIdentity*/):Int;
  @:native("MDCopyLabelWithUUID") public static function MDCopyLabelWithUUID(labelUUID:Dynamic):Dynamic /*__MDLabel*/;
  @:native("SSLGetNegotiatedCipher") public static function SSLGetNegotiatedCipher(context:Dynamic /*SSLContext*/, cipherSuite:UInt):Int;
  @:native("FSMountServerVolumeSync") public static function FSMountServerVolumeSync(url:Dynamic, mountDir:Dynamic, user:Dynamic, password:Dynamic, mountedVolumeRefNum:Int, flags:Int):Int;
  @:native("TECGetDestinationTextEncodings") public static function TECGetDestinationTextEncodings(inputEncoding:Int, destinationEncodings:Int, maxDestinationEncodings:Int, actualDestinationEncodings:Int):Int;
  @:native("UIGraphicsAddPDFContextDestinationAtPoint") public static function UIGraphicsAddPDFContextDestinationAtPoint(name:NSString, point:CGPoint):Dynamic /*Void*/;
  @:native("UCGetUnicodeScalarValueForSurrogatePair") public static function UCGetUnicodeScalarValueForSurrogatePair(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Int;
  @:native("MPAllocateTaskStorageIndex") public static function MPAllocateTaskStorageIndex(taskIndex:Int):Int;
  @:native("ColorSyncProfileCreateWithURL") public static function ColorSyncProfileCreateWithURL(url:Dynamic, error:Dynamic /*__CFError*/):Dynamic;
  @:native("Fix2Frac") public static function Fix2Frac(x:Int):Int;
  @:native("CFBridgingRetain") public static function CFBridgingRetain(used:Dynamic /*Dynamic*/):Dynamic;
  @:native("MPSetExceptionHandler") public static function MPSetExceptionHandler(task:Dynamic /*OpaqueMPTaskID*/, exceptionQ:Dynamic /*OpaqueMPQueueID*/):Int;
  @:native("SetCustomIconsEnabled") public static function SetCustomIconsEnabled(vRefNum:Int, enableCustomIcons:Int):Int;
  @:native("CGContextSetRGBFillColor") public static function CGContextSetRGBFillColor(c:CGContext, red:Float, green:Float, blue:Float, alpha:Float):Dynamic /*Void*/;
  @:native("CVBufferPropagateAttachments") public static function CVBufferPropagateAttachments(sourceBuffer:Dynamic /*__CVBuffer*/, destinationBuffer:Dynamic /*__CVBuffer*/):Dynamic /*Void*/;
  @:native("CFAllocatorGetDefault") public static function CFAllocatorGetDefault():Dynamic;
  @:native("NSDecimalMultiplyByPowerOf10") public static function NSDecimalMultiplyByPowerOf10(result:Dynamic /*NSDecimal*/, number:Dynamic /*Dynamic*/, power:Dynamic /*Int*/, roundingMode:NSRoundingMode):NSCalculationError;
  @:native("CGPDFScannerCreate") public static function CGPDFScannerCreate(cs:CGPDFContentStream, table:CGPDFOperatorTable, info:Dynamic /*Void*/):CGPDFScanner;
  @:native("CTFontCreateWithGraphicsFont") public static function CTFontCreateWithGraphicsFont(graphicsFont:CGFont, size:Float, matrix:Dynamic /*Dynamic*/, attributes:Dynamic):Dynamic;
  @:native("GetCustomIconsEnabled") public static function GetCustomIconsEnabled(vRefNum:Int, customIconsEnabled:Int):Int;
  @:native("LSSharedFileListItemSetProperty") public static function LSSharedFileListItemSetProperty(inItem:Dynamic /*OpaqueLSSharedFileListItemRef*/, inPropertyName:Dynamic, inPropertyData:Dynamic):Int;
  @:native("CFMessagePortGetName") public static function CFMessagePortGetName(ms:Dynamic /*__CFMessagePort*/):Dynamic;
  @:native("PBCloseForkSync") public static function PBCloseForkSync(paramBlock:Dynamic /*FSForkIOParam*/):Int;
  @:native("NSCopyMapTableWithZone") public static function NSCopyMapTableWithZone(table:NSMapTable, zone:Dynamic /*_NSZone*/):NSMapTable;
  @:native("SecKeyCreateRandomKey") public static function SecKeyCreateRandomKey(parameters:Dynamic, error:Dynamic /*__CFError*/):Dynamic /*__SecKey*/;
  @:native("DecrementAtomic8") public static function DecrementAtomic8(address:Dynamic):Dynamic;
  @:native("YieldToThread") public static function YieldToThread(suggestedThread:Int):Int;
  @:native("CFNotificationCenterGetLocalCenter") public static function CFNotificationCenterGetLocalCenter():Dynamic /*__CFNotificationCenter*/;
  @:native("AXUIElementCopyAttributeValue") public static function AXUIElementCopyAttributeValue(element:Dynamic, attribute:Dynamic, value:Dynamic):Dynamic /*AXError*/;
  @:native("NSMaxRange") public static function NSMaxRange(used:Dynamic /*Dynamic*/):Int;
  @:native("CFRunLoopObserverInvalidate") public static function CFRunLoopObserverInvalidate(observer:Dynamic /*__CFRunLoopObserver*/):Dynamic /*Void*/;
  @:native("FSReplaceObject") public static function FSReplaceObject(originalObject:Dynamic /*Dynamic*/, replacementObject:Dynamic /*Dynamic*/, newName:Dynamic, temporaryName:Dynamic, temporaryDirectory:Dynamic /*Dynamic*/, flags:Int, resultObject:Dynamic /*FSRef*/):Int;
  @:native("NSEndHashTableEnumeration") public static function NSEndHashTableEnumeration(enumerator:Dynamic /*NSHashEnumerator*/):Dynamic /*Void*/;
  @:native("ATSFontFindFromPostScriptName") public static function ATSFontFindFromPostScriptName(iName:Dynamic, iOptions:Int):Int;
  @:native("CFReadStreamCreateWithFTPURL") public static function CFReadStreamCreateWithFTPURL(alloc:Dynamic, ftpURL:Dynamic):Dynamic /*__CFReadStream*/;
  @:native("CFBagGetCountOfValue") public static function CFBagGetCountOfValue(theBag:Dynamic, value:Dynamic /*Dynamic*/):Int;
  @:native("CFStringCreateMutableCopy") public static function CFStringCreateMutableCopy(alloc:Dynamic, maxLength:Int, theString:Dynamic):Dynamic /*__CFString*/;
  @:native("CGRectMakeWithDictionaryRepresentation") public static function CGRectMakeWithDictionaryRepresentation(dict:Dynamic, rect:CGRect, used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Dynamic /*Bool*/;
  @:native("CallComponentCanDo") public static function CallComponentCanDo(ci:Dynamic /*ComponentInstanceRecord*/, ftnNumber:Int):Int;
  @:native("CFRunLoopRemoveTimer") public static function CFRunLoopRemoveTimer(rl:Dynamic /*__CFRunLoop*/, timer:Dynamic /*__CFRunLoopTimer*/, mode:Dynamic):Dynamic /*Void*/;
  @:native("PLstrncpy") public static function PLstrncpy(dest:Int, source:Dynamic, num:Dynamic /*Int*/):Int;
  @:native("SSLGetPeerDomainName") public static function SSLGetPeerDomainName(context:Dynamic /*SSLContext*/, peerName:Dynamic /*Int*/, peerNameLen:Dynamic /*Int*/):Int;
  @:native("UTGetOSTypeFromString") public static function UTGetOSTypeFromString(inString:Dynamic):Int;
  @:native("CTTypesetterCreateWithAttributedStringAndOptions") public static function CTTypesetterCreateWithAttributedStringAndOptions(string:Dynamic, options:Dynamic):Dynamic;
  @:native("CTTypesetterSuggestLineBreak") public static function CTTypesetterSuggestLineBreak(typesetter:Dynamic, startIndex:Int, width:Dynamic /*Float*/):Int;
  @:native("NSStringFromCGSize") public static function NSStringFromCGSize(size:CGSize):NSString;
  @:native("CFStringGetDoubleValue") public static function CFStringGetDoubleValue(str:Dynamic):Dynamic /*Float*/;
  @:native("InvokeUnicodeToTextFallbackUPP") public static function InvokeUnicodeToTextFallbackUPP(iSrcUniStr:Int, iSrcUniStrLen:Int, oSrcConvLen:Int, oDestStr:Int, iDestStrLen:Int, oDestConvLen:Int, iInfoPtr:Void, iUnicodeMappingPtr:Dynamic, userUPP:Dynamic):Int;
  @:native("FSCreateFileAndOpenForkUnicode") public static function FSCreateFileAndOpenForkUnicode(parentRef:Dynamic /*Dynamic*/, nameLength:Int, name:Dynamic /*Dynamic*/, whichInfo:Int, catalogInfo:Dynamic /*Dynamic*/, forkNameLength:Int, forkName:Dynamic /*Dynamic*/, permissions:Dynamic, forkRefNum:Int, newRef:Dynamic /*FSRef*/):Int;
  @:native("CFBooleanGetValue") public static function CFBooleanGetValue(boolean:Dynamic):Int;
  @:native("DisposeIndexToUCStringUPP") public static function DisposeIndexToUCStringUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("ICGetProfileName") public static function ICGetProfileName(inst:Dynamic /*OpaqueICInstance*/, thisID:Int, name:Dynamic /*Int*/):Int;
  @:native("CFFileSecurityCopyAccessControlList") public static function CFFileSecurityCopyAccessControlList(fileSec:Dynamic /*__CFFileSecurity*/, accessControlList:Dynamic /*Dynamic*/):Int;
  @:native("NewAEEventHandlerUPP") public static function NewAEEventHandlerUPP(userRoutine:Dynamic):Dynamic;
  @:native("SKIndexGetMaximumTermID") public static function SKIndexGetMaximumTermID(inIndex:Dynamic /*__SKIndex*/):Int;
  @:native("CGPDFDocumentGetVersion") public static function CGPDFDocumentGetVersion(document:CGPDFDocument, majorVersion:Dynamic /*Int*/, minorVersion:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("CGFontCopyPostScriptName") public static function CGFontCopyPostScriptName(font:CGFont):Dynamic;
  @:native("UIAccessibilityHearingDevicePairedEar") public static function UIAccessibilityHearingDevicePairedEar():UIAccessibilityHearingDeviceEar;
  @:native("SecTrustSetNetworkFetchAllowed") public static function SecTrustSetNetworkFetchAllowed(trust:Dynamic /*__SecTrust*/, allowFetch:Int):Int;
  @:native("CGPDFDocumentGetNumberOfPages") public static function CGPDFDocumentGetNumberOfPages(document:CGPDFDocument):Dynamic /*Int*/;
  @:native("CGContextSetAlpha") public static function CGContextSetAlpha(c:CGContext, alpha:Float):Dynamic /*Void*/;
  @:native("PBSetForkSizeSync") public static function PBSetForkSizeSync(paramBlock:Dynamic /*FSForkIOParam*/):Int;
  @:native("WSProtocolHandlerCreate") public static function WSProtocolHandlerCreate(allocator:Dynamic, protocol:Dynamic):Dynamic /*OpaqueWSProtocolHandlerRef*/;
  @:native("CTFontCopyFontDescriptor") public static function CTFontCopyFontDescriptor(font:Dynamic):Dynamic;
  @:native("FSUnlockRange") public static function FSUnlockRange(forkRefNum:Int, positionMode:Int, positionOffset:Dynamic, requestCount:Dynamic, rangeStart:Dynamic):Int;
  @:native("CTTextTabGetOptions") public static function CTTextTabGetOptions(tab:Dynamic):Dynamic;
  @:native("CFReadStreamSetProperty") public static function CFReadStreamSetProperty(stream:Dynamic /*__CFReadStream*/, propertyName:Dynamic, propertyValue:Dynamic):Int;
  @:native("NSSwapHostDoubleToLittle") public static function NSSwapHostDoubleToLittle(used:Dynamic /*Dynamic*/):Dynamic /*NSSwappedDouble*/;
  @:native("DisposeFSVolumeEjectUPP") public static function DisposeFSVolumeEjectUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("NewUnicodeToTextFallbackUPP") public static function NewUnicodeToTextFallbackUPP(userRoutine:Dynamic):Dynamic;
  @:native("PasteboardSynchronize") public static function PasteboardSynchronize(inPasteboard:Dynamic /*OpaquePasteboardRef*/):Dynamic /*PasteboardSyncFlags*/;
  @:native("PMPrintSettingsCreateDataRepresentation") public static function PMPrintSettingsCreateDataRepresentation(printSettings:Dynamic /*OpaquePMPrintSettings*/, data:Dynamic, format:Dynamic /*PMDataFormat*/):Int;
  @:native("KCSetDefaultKeychain") public static function KCSetDefaultKeychain(keychain:Dynamic /*KCRef*/):Int;
  @:native("IsHeapValid") public static function IsHeapValid():Int;
  @:native("AEStreamSetRecordType") public static function AEStreamSetRecordType(ref:Dynamic /*OpaqueAEStreamRef*/, newType:Int):Int;
  @:native("CGPatternRetain") public static function CGPatternRetain(pattern:CGPattern):CGPattern;
  @:native("UIAccessibilityIsAssistiveTouchRunning") public static function UIAccessibilityIsAssistiveTouchRunning():Dynamic /*Bool*/;
  @:native("CFURLCopyAbsoluteURL") public static function CFURLCopyAbsoluteURL(relativeURL:Dynamic):Dynamic;
  @:native("NSZoneName") public static function NSZoneName(zone:Dynamic /*_NSZone*/):NSString;
  @:native("UpTime") public static function UpTime():Dynamic /*UnsignedWide*/;
  @:native("UIInterfaceOrientationIsPortrait") public static function UIInterfaceOrientationIsPortrait(used:Dynamic /*Dynamic*/):Dynamic /*Bool*/;
  @:native("CFTreeCreate") public static function CFTreeCreate(allocator:Dynamic, context:Dynamic /*Dynamic*/):Dynamic /*__CFTree*/;
  @:native("UseSpeechDictionary") public static function UseSpeechDictionary(chan:Dynamic /*SpeechChannelRecord*/, speechDictionary:Dynamic):Int;
  @:native("CFBundleCopyBuiltInPlugInsURL") public static function CFBundleCopyBuiltInPlugInsURL(bundle:Dynamic /*__CFBundle*/):Dynamic;
  @:native("CGImageMetadataTagGetTypeID") public static function CGImageMetadataTagGetTypeID():Int;
  @:native("CFBitVectorSetAllBits") public static function CFBitVectorSetAllBits(bv:Dynamic /*__CFBitVector*/, value:Int):Dynamic /*Void*/;
  @:native("TECCreateConverter") public static function TECCreateConverter(newEncodingConverter:Dynamic /*OpaqueTECObjectRef*/, inputEncoding:Int, outputEncoding:Int):Int;
  @:native("AEStreamCloseDesc") public static function AEStreamCloseDesc(ref:Dynamic /*OpaqueAEStreamRef*/):Int;
  @:native("AddNanosecondsToAbsolute") public static function AddNanosecondsToAbsolute(nanoseconds:Dynamic /*UnsignedWide*/, absoluteTime:Dynamic /*UnsignedWide*/):Dynamic /*UnsignedWide*/;
  @:native("CFDataFind") public static function CFDataFind(theData:Dynamic, dataToFind:Dynamic, searchRange:Dynamic /*CFRange*/, compareOptions:Dynamic /*CFDataSearchFlags*/):Dynamic /*CFRange*/;
  @:native("NSEqualRanges") public static function NSEqualRanges(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Dynamic /*Bool*/;
  @:native("MPGetNextTaskID") public static function MPGetNextTaskID(owningProcessID:Dynamic /*OpaqueMPProcessID*/, taskID:Dynamic /*OpaqueMPTaskID*/):Int;
  @:native("CFNumberFormatterGetValueFromString") public static function CFNumberFormatterGetValueFromString(formatter:Dynamic /*__CFNumberFormatter*/, string:Dynamic, rangep:Dynamic /*CFRange*/, numberType:Dynamic /*CFNumberType*/, valuePtr:Dynamic /*Void*/):Int;
  @:native("WideNegate") public static function WideNegate(target:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("PMGetAdjustedPageRect") public static function PMGetAdjustedPageRect(pageFormat:Dynamic /*OpaquePMPageFormat*/, pageRect:Dynamic /*PMRect*/):Int;
  @:native("CSIdentityGetImageDataType") public static function CSIdentityGetImageDataType(identity:Dynamic /*__CSIdentity*/):Dynamic;
  @:native("CGContextSetFillColorWithColor") public static function CGContextSetFillColorWithColor(c:CGContext, color:CGColor):Dynamic /*Void*/;
  @:native("UseResFile") public static function UseResFile(refNum:Int):Dynamic /*Void*/;
  @:native("GetComponentListModSeed") public static function GetComponentListModSeed():Int;
  @:native("FNUnsubscribe") public static function FNUnsubscribe(subscription:Dynamic /*OpaqueFNSubscriptionRef*/):Int;
  @:native("CFMachPortCreateWithPort") public static function CFMachPortCreateWithPort(allocator:Dynamic, portNum:Dynamic /*Dynamic*/, callout:Dynamic, context:Dynamic /*CFMachPortContext*/, shouldFreeInfo:Int):Dynamic /*__CFMachPort*/;
  @:native("UpdateResFile") public static function UpdateResFile(refNum:Int):Dynamic /*Void*/;
  @:native("CreateUnicodeToTextInfo") public static function CreateUnicodeToTextInfo(iUnicodeMapping:Dynamic, oUnicodeToTextInfo:Dynamic /*OpaqueUnicodeToTextInfo*/):Int;
  @:native("CGImageMetadataCreateMutableCopy") public static function CGImageMetadataCreateMutableCopy(metadata:Dynamic):CGImageMetadata;
  @:native("CGAffineTransformEqualToTransform") public static function CGAffineTransformEqualToTransform(t1:CGAffineTransform, t2:CGAffineTransform):Dynamic /*Bool*/;
  @:native("PrimeTimeTask") public static function PrimeTimeTask(tmTaskPtr:Dynamic /*QElem*/, count:Dynamic /*Int*/):Int;
  @:native("CGPDFObjectGetType") public static function CGPDFObjectGetType(object:CGPDFObject):CGPDFObjectType;
  @:native("PMSessionCreatePageFormatList") public static function PMSessionCreatePageFormatList(printSession:Dynamic /*OpaquePMPrintSession*/, printer:Dynamic /*OpaquePMPrinter*/, pageFormatList:Dynamic):Int;
  @:native("KCMakeKCRefFromAlias") public static function KCMakeKCRefFromAlias(keychainAlias:Dynamic /*AliasRecord*/, keychain:Dynamic /*KCRef*/):Int;
  @:native("CFHTTPAuthenticationCreateFromResponse") public static function CFHTTPAuthenticationCreateFromResponse(alloc:Dynamic, response:Dynamic /*__CFHTTPMessage*/):Dynamic /*_CFHTTPAuthentication*/;
  @:native("CFAutorelease") public static function CFAutorelease(arg:Dynamic):Dynamic;
  @:native("CFArrayGetCountOfValue") public static function CFArrayGetCountOfValue(theArray:Dynamic, range:Dynamic /*CFRange*/, value:Dynamic /*Dynamic*/):Int;
  @:native("InvokeAEDisposeExternalUPP") public static function InvokeAEDisposeExternalUPP(dataPtr:Dynamic /*Dynamic*/, dataLength:Int, refcon:Void, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("AEStreamOpenEvent") public static function AEStreamOpenEvent(event:Dynamic /*AEDesc*/):Dynamic /*OpaqueAEStreamRef*/;
  @:native("CFURLCreateCopyDeletingPathExtension") public static function CFURLCreateCopyDeletingPathExtension(allocator:Dynamic, url:Dynamic):Dynamic;
  @:native("CFBagCreate") public static function CFBagCreate(allocator:Dynamic, values:Dynamic /*Dynamic*/, numValues:Int, callBacks:Dynamic /*Dynamic*/):Dynamic;
  @:native("KCSetInteractionAllowed") public static function KCSetInteractionAllowed(state:Int):Int;
  @:native("CFReadStreamHasBytesAvailable") public static function CFReadStreamHasBytesAvailable(stream:Dynamic /*__CFReadStream*/):Int;
  @:native("CFBundleCopyResourceURLsOfTypeInDirectory") public static function CFBundleCopyResourceURLsOfTypeInDirectory(bundleURL:Dynamic, resourceType:Dynamic, subDirName:Dynamic):Dynamic;
  @:native("CGImageDestinationCreateWithDataConsumer") public static function CGImageDestinationCreateWithDataConsumer(consumer:CGDataConsumer, type:Dynamic, count:Dynamic /*Int*/, options:Dynamic):CGImageDestination;
  @:native("CFDataCreateCopy") public static function CFDataCreateCopy(allocator:Dynamic, theData:Dynamic):Dynamic;
  @:native("CGColorSpaceCreateCalibratedRGB") public static function CGColorSpaceCreateCalibratedRGB(whitePoint:Dynamic /*Dynamic*/, blackPoint:Dynamic /*Dynamic*/, gamma:Dynamic /*Dynamic*/, matrix:Dynamic /*Dynamic*/):CGColorSpace;
  @:native("CGPathCreateMutable") public static function CGPathCreateMutable():CGPath;
  @:native("SecTrustEvaluateAsync") public static function SecTrustEvaluateAsync(trust:Dynamic /*__SecTrust*/, queue:Dynamic /*Dynamic*/, result:Dynamic):Int;
  @:native("AXObserverRemoveNotification") public static function AXObserverRemoveNotification(observer:Dynamic /*__AXObserver*/, element:Dynamic, notification:Dynamic):Dynamic /*AXError*/;
  @:native("CFStringFind") public static function CFStringFind(theString:Dynamic, stringToFind:Dynamic, compareOptions:Dynamic /*CFStringCompareFlags*/):Dynamic /*CFRange*/;
  @:native("Unique1ID") public static function Unique1ID(theType:Int):Int;
  @:native("CTFontCollectionCreateMatchingFontDescriptors") public static function CTFontCollectionCreateMatchingFontDescriptors(collection:Dynamic):Dynamic;
  @:native("PMGetLastPage") public static function PMGetLastPage(printSettings:Dynamic /*OpaquePMPrintSettings*/, last:Int):Int;
  @:native("CGPDFArrayGetStream") public static function CGPDFArrayGetStream(array:CGPDFArray, index:Dynamic /*Int*/, value:CGPDFStream):Dynamic /*Bool*/;
  @:native("CGDisplayCreateUUIDFromDisplayID") public static function CGDisplayCreateUUIDFromDisplayID(displayID:Dynamic /*UInt*/):Dynamic;
  @:native("InvokeDebuggerNewThreadUPP") public static function InvokeDebuggerNewThreadUPP(threadCreated:Int, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("FSEventsGetLastEventIdForDeviceBeforeTime") public static function FSEventsGetLastEventIdForDeviceBeforeTime(dev:Dynamic /*Dynamic*/, time:Float):Dynamic;
  @:native("CSIdentityGetImageData") public static function CSIdentityGetImageData(identity:Dynamic /*__CSIdentity*/):Dynamic;
  @:native("CTFontGetMatrix") public static function CTFontGetMatrix(font:Dynamic):CGAffineTransform;
  @:native("CFCharacterSetIsLongCharacterMember") public static function CFCharacterSetIsLongCharacterMember(theSet:Dynamic, theChar:Int):Int;
  @:native("PurgeCollection") public static function PurgeCollection(c:Dynamic /*OpaqueCollection*/, whichAttributes:Int, matchingAttributes:Int):Dynamic /*Void*/;
  @:native("MDItemGetTypeID") public static function MDItemGetTypeID():Int;
  @:native("NSSwapHostLongToLittle") public static function NSSwapHostLongToLittle(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("PMSetCollate") public static function PMSetCollate(printSettings:Dynamic /*OpaquePMPrintSettings*/, collate:Int):Int;
  @:native("FSCreateStringFromHFSUniStr") public static function FSCreateStringFromHFSUniStr(alloc:Dynamic, uniStr:Dynamic /*Dynamic*/):Dynamic;
  @:native("CFHTTPMessageCopyAllHeaderFields") public static function CFHTTPMessageCopyAllHeaderFields(message:Dynamic /*__CFHTTPMessage*/):Dynamic;
  @:native("LocaleStringToLangAndRegionCodes") public static function LocaleStringToLangAndRegionCodes(localeString:Dynamic /*Dynamic*/, lang:Int, region:Int):Int;
  @:native("CFStringCreateWithPascalStringNoCopy") public static function CFStringCreateWithPascalStringNoCopy(alloc:Dynamic, pStr:Dynamic, encoding:Int, contentsDeallocator:Dynamic):Dynamic;
  @:native("CFURLCreateWithString") public static function CFURLCreateWithString(allocator:Dynamic, URLString:Dynamic, baseURL:Dynamic):Dynamic;
  @:native("CGPathAddRoundedRect") public static function CGPathAddRoundedRect(path:CGPath, transform:Dynamic /*Dynamic*/, rect:CGRect, cornerWidth:Float, cornerHeight:Float):Dynamic /*Void*/;
  @:native("PMPrintSettingsToOptionsWithPrinterAndPageFormat") public static function PMPrintSettingsToOptionsWithPrinterAndPageFormat(settings:Dynamic /*OpaquePMPrintSettings*/, printer:Dynamic /*OpaquePMPrinter*/, pageFormat:Dynamic /*OpaquePMPageFormat*/, options:Dynamic /*Int*/):Int;
  @:native("CFTimeZoneSetAbbreviationDictionary") public static function CFTimeZoneSetAbbreviationDictionary(dict:Dynamic):Dynamic /*Void*/;
  @:native("HIShapeCreateEmpty") public static function HIShapeCreateEmpty():Dynamic;
  @:native("Long2Fix") public static function Long2Fix(x:Int):Int;
  @:native("CTFontCopyGraphicsFont") public static function CTFontCopyGraphicsFont(font:Dynamic, attributes:Dynamic):CGFont;
  @:native("CGContextAddArc") public static function CGContextAddArc(c:CGContext, x:Float, y:Float, radius:Float, startAngle:Float, endAngle:Float, clockwise:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("CFURLCopyResourcePropertyForKey") public static function CFURLCopyResourcePropertyForKey(url:Dynamic, key:Dynamic, propertyValueTypeRefPtr:Dynamic /*Void*/, error:Dynamic /*__CFError*/):Int;
  @:native("ReleaseFolder") public static function ReleaseFolder(vRefNum:Int, folderType:Int):Int;
  @:native("DisposeAVLDisposeItemUPP") public static function DisposeAVLDisposeItemUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CATransform3DConcat") public static function CATransform3DConcat(a:CATransform3D, b:CATransform3D):CATransform3D;
  @:native("DisposeSpeechTextDoneUPP") public static function DisposeSpeechTextDoneUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("IsMetric") public static function IsMetric():Int;
  @:native("FSFileOperationUnscheduleFromRunLoop") public static function FSFileOperationUnscheduleFromRunLoop(fileOp:Dynamic /*__FSFileOperation*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Int;
  @:native("MDQueryExecute") public static function MDQueryExecute(query:Dynamic /*__MDQuery*/, optionFlags:Int):Int;
  @:native("SSLReHandshake") public static function SSLReHandshake(context:Dynamic /*SSLContext*/):Int;
  @:native("NewCollection") public static function NewCollection():Dynamic /*OpaqueCollection*/;
  @:native("DisposeAEEventHandlerUPP") public static function DisposeAEEventHandlerUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("MDSchemaCopyDisplayDescriptionForAttribute") public static function MDSchemaCopyDisplayDescriptionForAttribute(name:Dynamic):Dynamic;
  @:native("CTFontGetStringEncoding") public static function CTFontGetStringEncoding(font:Dynamic):Int;
  @:native("CFAttributedStringReplaceAttributedString") public static function CFAttributedStringReplaceAttributedString(aStr:Dynamic /*__CFAttributedString*/, range:Dynamic /*CFRange*/, replacement:Dynamic):Dynamic /*Void*/;
  @:native("CTRubyAnnotationGetTypeID") public static function CTRubyAnnotationGetTypeID():Int;
  @:native("KCIsInteractionAllowed") public static function KCIsInteractionAllowed():Int;
  @:native("WSProtocolHandlerCopyProperty") public static function WSProtocolHandlerCopyProperty(ref:Dynamic /*OpaqueWSProtocolHandlerRef*/, propertyName:Dynamic):Dynamic;
  @:native("HIShapeEnumerate") public static function HIShapeEnumerate(inShape:Dynamic, inOptions:Int, inProc:Dynamic, inRefcon:Dynamic /*Void*/):Int;
  @:native("IOSurfaceGetBytesPerRowOfPlane") public static function IOSurfaceGetBytesPerRowOfPlane(buffer:Dynamic /*__IOSurface*/, planeIndex:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("CFStringFindAndReplace") public static function CFStringFindAndReplace(theString:Dynamic /*__CFString*/, stringToFind:Dynamic, replacementString:Dynamic, rangeToSearch:Dynamic /*CFRange*/, compareOptions:Dynamic /*CFStringCompareFlags*/):Int;
  @:native("MDQuerySetSortOptionFlagsForAttribute") public static function MDQuerySetSortOptionFlagsForAttribute(query:Dynamic /*__MDQuery*/, fieldName:Dynamic, flags:Dynamic /*UInt*/):Int;
  @:native("SSLCopyRequestedPeerName") public static function SSLCopyRequestedPeerName(context:Dynamic /*SSLContext*/, peerName:Dynamic /*Int*/, peerNameLen:Dynamic /*Int*/):Int;
  @:native("AXUIElementSetAttributeValue") public static function AXUIElementSetAttributeValue(element:Dynamic, attribute:Dynamic, value:Dynamic):Dynamic /*AXError*/;
  @:native("CGContextSetFillColor") public static function CGContextSetFillColor(c:CGContext, components:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("UIAccessibilityZoomFocusChanged") public static function UIAccessibilityZoomFocusChanged(type:UIAccessibilityZoomType, frame:CGRect, view:UIView):Dynamic /*Void*/;
  @:native("ResetTextToUnicodeInfo") public static function ResetTextToUnicodeInfo(ioTextToUnicodeInfo:Dynamic /*OpaqueTextToUnicodeInfo*/):Int;
  @:native("IOSurfaceGetBytesPerElement") public static function IOSurfaceGetBytesPerElement(buffer:Dynamic /*__IOSurface*/):Dynamic /*Int*/;
  @:native("TickCount") public static function TickCount():Int;
  @:native("CGPDFDocumentAllowsCopying") public static function CGPDFDocumentAllowsCopying(document:CGPDFDocument):Dynamic /*Bool*/;
  @:native("CFStringCompare") public static function CFStringCompare(theString1:Dynamic, theString2:Dynamic, compareOptions:Dynamic /*CFStringCompareFlags*/):Dynamic /*CFComparisonResult*/;
  @:native("SSLSetPeerDomainName") public static function SSLSetPeerDomainName(context:Dynamic /*SSLContext*/, peerName:Dynamic /*Dynamic*/, peerNameLen:Dynamic /*Int*/):Int;
  @:native("CGPDFDictionaryGetString") public static function CGPDFDictionaryGetString(dict:CGPDFDictionary, key:Dynamic /*Dynamic*/, value:CGPDFString):Dynamic /*Bool*/;
  @:native("PMPrinterGetCommInfo") public static function PMPrinterGetCommInfo(printer:Dynamic /*OpaquePMPrinter*/, supportsControlCharRangeP:Int, supportsEightBitP:Int):Int;
  @:native("CGShadingRelease") public static function CGShadingRelease(shading:CGShading):Dynamic /*Void*/;
  @:native("CFUUIDGetTypeID") public static function CFUUIDGetTypeID():Int;
  @:native("HIShapeInset") public static function HIShapeInset(inShape:Dynamic /*__HIShape*/, inDX:Float, inDY:Float):Int;
  @:native("UIAccessibilityIsReduceMotionEnabled") public static function UIAccessibilityIsReduceMotionEnabled():Dynamic /*Bool*/;
  @:native("CFNetServiceMonitorScheduleWithRunLoop") public static function CFNetServiceMonitorScheduleWithRunLoop(monitor:Dynamic /*__CFNetServiceMonitor*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("LSSharedFileListAddObserver") public static function LSSharedFileListAddObserver(inList:Dynamic /*OpaqueLSSharedFileListRef*/, inRunloop:Dynamic /*__CFRunLoop*/, inRunloopMode:Dynamic, callback:Dynamic, context:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("CGImageDestinationCopyImageSource") public static function CGImageDestinationCopyImageSource(idst:CGImageDestination, isrc:CGImageSource, options:Dynamic, err:Dynamic /*__CFError*/):Dynamic /*Bool*/;
  @:native("CGContextDrawShading") public static function CGContextDrawShading(c:CGContext, shading:CGShading):Dynamic /*Void*/;
  @:native("Get1NamedResource") public static function Get1NamedResource(theType:Int, name:Dynamic):Int;
  @:native("SKIndexGetDocumentTermCount") public static function SKIndexGetDocumentTermCount(inIndex:Dynamic /*__SKIndex*/, inDocumentID:Int):Int;
  @:native("SSLGetProtocolVersionMin") public static function SSLGetProtocolVersionMin(context:Dynamic /*SSLContext*/, minVersion:Dynamic /*SSLProtocol*/):Int;
  @:native("MPSetTaskState") public static function MPSetTaskState(task:Dynamic /*OpaqueMPTaskID*/, kind:Int, info:Dynamic /*Void*/):Int;
  @:native("PMPrinterIsRemote") public static function PMPrinterIsRemote(printer:Dynamic /*OpaquePMPrinter*/, isRemoteP:Int):Int;
  @:native("StopSpeechAt") public static function StopSpeechAt(chan:Dynamic /*SpeechChannelRecord*/, whereToStop:Int):Int;
  @:native("CFRunLoopSourceGetContext") public static function CFRunLoopSourceGetContext(source:Dynamic /*__CFRunLoopSource*/, context:Dynamic /*CFRunLoopSourceContext*/):Dynamic /*Void*/;
  @:native("NSStringFromClass") public static function NSStringFromClass(aClass:Dynamic):NSString;
  @:native("DetermineIfPathIsEnclosedByFolder") public static function DetermineIfPathIsEnclosedByFolder(domainOrVRefNum:Int, folderType:Int, utf8Path:Dynamic /*Dynamic*/, pathIsRealPath:Int, outResult:Int):Int;
  @:native("ATSFontIteratorNext") public static function ATSFontIteratorNext(iIterator:Dynamic /*ATSFontIterator_*/, oFont:Int):Int;
  @:native("NSDecimalCompare") public static function NSDecimalCompare(leftOperand:Dynamic /*Dynamic*/, rightOperand:Dynamic /*Dynamic*/):NSComparisonResult;
  @:native("LongDoubleToSInt64") public static function LongDoubleToSInt64(value:Dynamic /*Dynamic*/):Dynamic;
  @:native("CountTypes") public static function CountTypes():Int;
  @:native("WSMethodResultIsFault") public static function WSMethodResultIsFault(methodResult:Dynamic):Int;
  @:native("PMPaperGetPrinterID") public static function PMPaperGetPrinterID(paper:Dynamic /*OpaquePMPaper*/, printerID:Dynamic):Int;
  @:native("CFFileSecurityCreate") public static function CFFileSecurityCreate(allocator:Dynamic):Dynamic /*__CFFileSecurity*/;
  @:native("AESizeOfAttribute") public static function AESizeOfAttribute(theAppleEvent:Dynamic /*Dynamic*/, theAEKeyword:Int, typeCode:Int, dataSize:Int):Int;
  @:native("UCCompareTextNoLocale") public static function UCCompareTextNoLocale(options:Int, text1Ptr:Dynamic /*Dynamic*/, text1Length:Int, text2Ptr:Dynamic /*Dynamic*/, text2Length:Int, equivalent:Int, order:Int):Int;
  @:native("UCFindTextBreak") public static function UCFindTextBreak(breakRef:Dynamic /*OpaqueTextBreakLocatorRef*/, breakType:Int, options:Int, textPtr:Dynamic /*Dynamic*/, textLength:Int, startOffset:Int, breakOffset:Int):Int;
  @:native("NSDecimalAdd") public static function NSDecimalAdd(result:Dynamic /*NSDecimal*/, leftOperand:Dynamic /*Dynamic*/, rightOperand:Dynamic /*Dynamic*/, roundingMode:NSRoundingMode):NSCalculationError;
  @:native("SSLNewContext") public static function SSLNewContext(isServer:Int, contextPtr:Dynamic /*SSLContext*/):Int;
  @:native("CFLocaleCreateCopy") public static function CFLocaleCreateCopy(allocator:Dynamic, locale:Dynamic):Dynamic;
  @:native("CFURLWriteBookmarkDataToFile") public static function CFURLWriteBookmarkDataToFile(bookmarkRef:Dynamic, fileURL:Dynamic, options:Int, errorRef:Dynamic /*__CFError*/):Int;
  @:native("CFReadStreamCreateForHTTPRequest") public static function CFReadStreamCreateForHTTPRequest(alloc:Dynamic, request:Dynamic /*__CFHTTPMessage*/):Dynamic /*__CFReadStream*/;
  @:native("LSOpenApplication") public static function LSOpenApplication(appParams:Dynamic /*Dynamic*/, outPSN:Dynamic /*ProcessSerialNumber*/):Int;
  @:native("CGFontCreateWithFontName") public static function CGFontCreateWithFontName(name:Dynamic):CGFont;
  @:native("CFTimeZoneCopySystem") public static function CFTimeZoneCopySystem():Dynamic;
  @:native("UInt64ToLongDouble") public static function UInt64ToLongDouble(value:Dynamic):Dynamic /*Int*/;
  @:native("CTRubyAnnotationGetSizeFactor") public static function CTRubyAnnotationGetSizeFactor(rubyAnnotation:Dynamic):Float;
  @:native("SInt64ToLongDouble") public static function SInt64ToLongDouble(value:Dynamic):Dynamic /*Int*/;
  @:native("CFNetServiceBrowserSearchForServices") public static function CFNetServiceBrowserSearchForServices(browser:Dynamic /*__CFNetServiceBrowser*/, domain:Dynamic, serviceType:Dynamic, error:Dynamic /*CFStreamError*/):Int;
  @:native("LSCanURLAcceptURL") public static function LSCanURLAcceptURL(inItemURL:Dynamic, inTargetURL:Dynamic, inRoleMask:Dynamic /*LSRolesMask*/, inFlags:Dynamic /*LSAcceptanceFlags*/, outAcceptsItem:Int):Int;
  @:native("CVPixelFormatDescriptionArrayCreateWithAllPixelFormatTypes") public static function CVPixelFormatDescriptionArrayCreateWithAllPixelFormatTypes(allocator:Dynamic):Dynamic;
  @:native("NSCompareHashTables") public static function NSCompareHashTables(table1:NSHashTable, table2:NSHashTable):Dynamic /*Bool*/;
  @:native("OpenAComponent") public static function OpenAComponent(aComponent:Dynamic /*ComponentRecord*/, ci:Dynamic /*ComponentInstanceRecord*/):Int;
  @:native("AXUIElementSetMessagingTimeout") public static function AXUIElementSetMessagingTimeout(element:Dynamic, timeoutInSeconds:Dynamic /*Float*/):Dynamic /*AXError*/;
  @:native("DisposeComponentRoutineUPP") public static function DisposeComponentRoutineUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("LSCopyKindStringForURL") public static function LSCopyKindStringForURL(inURL:Dynamic, outKindString:Dynamic):Int;
  @:native("CFURLCreateBookmarkData") public static function CFURLCreateBookmarkData(allocator:Dynamic, url:Dynamic, options:Dynamic /*CFURLBookmarkCreationOptions*/, resourcePropertiesToInclude:Dynamic, relativeToURL:Dynamic, error:Dynamic /*__CFError*/):Dynamic;
  @:native("CFBundleGetMainBundle") public static function CFBundleGetMainBundle():Dynamic /*__CFBundle*/;
  @:native("FSWriteFork") public static function FSWriteFork(forkRefNum:Int, positionMode:Int, positionOffset:Dynamic, requestCount:Int, buffer:Dynamic /*Dynamic*/, actualCount:Int):Int;
  @:native("CFLocaleCopyCommonISOCurrencyCodes") public static function CFLocaleCopyCommonISOCurrencyCodes():Dynamic;
  @:native("IOSurfaceSetValue") public static function IOSurfaceSetValue(buffer:Dynamic /*__IOSurface*/, key:Dynamic, value:Dynamic):Dynamic /*Void*/;
  @:native("AEObjectInit") public static function AEObjectInit():Int;
  @:native("NewSpeechPhonemeUPP") public static function NewSpeechPhonemeUPP(userRoutine:Dynamic):Dynamic;
  @:native("CGPathCreateCopyByTransformingPath") public static function CGPathCreateCopyByTransformingPath(path:Dynamic, transform:Dynamic /*Dynamic*/):Dynamic;
  @:native("IOSurfaceGetWidthOfPlane") public static function IOSurfaceGetWidthOfPlane(buffer:Dynamic /*__IOSurface*/, planeIndex:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("UIGraphicsGetPDFContextBounds") public static function UIGraphicsGetPDFContextBounds():CGRect;
  @:native("MDQueryIsGatheringComplete") public static function MDQueryIsGatheringComplete(query:Dynamic /*__MDQuery*/):Int;
  @:native("CFDateFormatterCreateStringWithDate") public static function CFDateFormatterCreateStringWithDate(allocator:Dynamic, formatter:Dynamic /*__CFDateFormatter*/, date:Dynamic):Dynamic;
  @:native("FNSubscribeByPath") public static function FNSubscribeByPath(directoryPath:Dynamic /*Dynamic*/, callback:Dynamic, refcon:Dynamic /*Void*/, flags:Int, subscription:Dynamic /*OpaqueFNSubscriptionRef*/):Int;
  @:native("GetTextEncodingFormat") public static function GetTextEncodingFormat(encoding:Int):Int;
  @:native("SSLCopyDistinguishedNames") public static function SSLCopyDistinguishedNames(context:Dynamic /*SSLContext*/, names:Dynamic):Int;
  @:native("ATSFontApplyFunction") public static function ATSFontApplyFunction(iFunction:Dynamic, iRefCon:Dynamic /*Void*/):Int;
  @:native("IOSurfaceGetBytesPerRow") public static function IOSurfaceGetBytesPerRow(buffer:Dynamic /*__IOSurface*/):Dynamic /*Int*/;
  @:native("NewResErrUPP") public static function NewResErrUPP(userRoutine:Dynamic):Dynamic;
  @:native("InstallDebugAssertOutputHandler") public static function InstallDebugAssertOutputHandler(handler:Dynamic):Dynamic /*Void*/;
  @:native("UIOffsetEqualToOffset") public static function UIOffsetEqualToOffset(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Dynamic /*Bool*/;
  @:native("CFHostSetClient") public static function CFHostSetClient(theHost:Dynamic /*__CFHost*/, clientCB:Dynamic, clientContext:Dynamic /*CFHostClientContext*/):Int;
  @:native("PtrAndHand") public static function PtrAndHand(ptr1:Dynamic /*Dynamic*/, hand2:Int, size:Dynamic /*Int*/):Int;
  @:native("NewTimerUPP") public static function NewTimerUPP(userRoutine:Dynamic):Dynamic;
  @:native("PBGetVolumeInfoSync") public static function PBGetVolumeInfoSync(paramBlock:Dynamic /*FSVolumeInfoParam*/):Int;
  @:native("Count1Types") public static function Count1Types():Int;
  @:native("CFStringPad") public static function CFStringPad(theString:Dynamic /*__CFString*/, padString:Dynamic, length:Int, indexIntoPad:Int):Dynamic /*Void*/;
  @:native("CFBundleCopyResourceURLInDirectory") public static function CFBundleCopyResourceURLInDirectory(bundleURL:Dynamic, resourceName:Dynamic, resourceType:Dynamic, subDirName:Dynamic):Dynamic;
  @:native("PBCreateDirectoryUnicodeAsync") public static function PBCreateDirectoryUnicodeAsync(paramBlock:Dynamic /*FSRefParam*/):Dynamic /*Void*/;
  @:native("CGFontGetStemV") public static function CGFontGetStemV(font:CGFont):Float;
  @:native("PMCopyAvailablePPDs") public static function PMCopyAvailablePPDs(domain:Int, ppds:Dynamic):Int;
  @:native("CSIdentitySetIsEnabled") public static function CSIdentitySetIsEnabled(user:Dynamic /*__CSIdentity*/, isEnabled:Int):Dynamic /*Void*/;
  @:native("CGContextSetFontSize") public static function CGContextSetFontSize(c:CGContext, size:Float):Dynamic /*Void*/;
  @:native("CFMachPortGetInvalidationCallBack") public static function CFMachPortGetInvalidationCallBack(port:Dynamic /*__CFMachPort*/):Dynamic;
  @:native("CVPixelBufferGetWidthOfPlane") public static function CVPixelBufferGetWidthOfPlane(pixelBuffer:Dynamic /*__CVBuffer*/, planeIndex:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("AXAPIEnabled") public static function AXAPIEnabled():Int;
  @:native("CFBitVectorGetBitAtIndex") public static function CFBitVectorGetBitAtIndex(bv:Dynamic, idx:Int):Int;
  @:native("CFBundleCopySharedSupportURL") public static function CFBundleCopySharedSupportURL(bundle:Dynamic /*__CFBundle*/):Dynamic;
  @:native("ColorSyncProfileEstimateGammaWithDisplayID") public static function ColorSyncProfileEstimateGammaWithDisplayID(displayID:Dynamic /*Dynamic*/, error:Dynamic /*__CFError*/):Dynamic /*Float*/;
  @:native("CFStringCreateWithFormat") public static function CFStringCreateWithFormat(alloc:Dynamic, formatOptions:Dynamic, format:Dynamic):Dynamic;
  @:native("DetachResourceFile") public static function DetachResourceFile(refNum:Int):Int;
  @:native("MPGetNextCpuID") public static function MPGetNextCpuID(owningCoherenceID:Dynamic /*OpaqueMPCoherenceID*/, cpuID:Dynamic /*OpaqueMPCpuID*/):Int;
  @:native("CFStreamCreatePairWithSocket") public static function CFStreamCreatePairWithSocket(alloc:Dynamic, sock:Int, readStream:Dynamic /*__CFReadStream*/, writeStream:Dynamic /*__CFWriteStream*/):Dynamic /*Void*/;
  @:native("CGSizeMakeWithDictionaryRepresentation") public static function CGSizeMakeWithDictionaryRepresentation(dict:Dynamic, size:CGSize):Dynamic /*Bool*/;
  @:native("SecKeyIsAlgorithmSupported") public static function SecKeyIsAlgorithmSupported(key:Dynamic /*__SecKey*/, operation:Dynamic /*SecKeyOperationType*/, algorithm:Dynamic):Int;
  @:native("SecKeyCreateDecryptedData") public static function SecKeyCreateDecryptedData(key:Dynamic /*__SecKey*/, algorithm:Dynamic, ciphertext:Dynamic, error:Dynamic /*__CFError*/):Dynamic;
  @:native("RegisterComponentResource") public static function RegisterComponentResource(cr:Dynamic /*ComponentResource*/, global:Int):Dynamic /*ComponentRecord*/;
  @:native("PMPrinterGetMimeTypes") public static function PMPrinterGetMimeTypes(printer:Dynamic /*OpaquePMPrinter*/, settings:Dynamic /*OpaquePMPrintSettings*/, mimeTypes:Dynamic):Int;
  @:native("FixRound") public static function FixRound(x:Int):Dynamic /*Int*/;
  @:native("PMSessionEndPageNoDialog") public static function PMSessionEndPageNoDialog(printSession:Dynamic /*OpaquePMPrintSession*/):Int;
  @:native("CFAllocatorGetTypeID") public static function CFAllocatorGetTypeID():Int;
  @:native("CFGetAllocator") public static function CFGetAllocator(cf:Dynamic):Dynamic;
  @:native("AEGetAttributePtr") public static function AEGetAttributePtr(theAppleEvent:Dynamic /*Dynamic*/, theAEKeyword:Int, desiredType:Int, typeCode:Int, dataPtr:Dynamic /*Void*/, maximumSize:Int, actualSize:Int):Int;
  @:native("MDItemSetLabel") public static function MDItemSetLabel(item:Dynamic /*__MDItem*/, label:Dynamic /*__MDLabel*/):Int;
  @:native("CGPDFArrayGetNumber") public static function CGPDFArrayGetNumber(array:CGPDFArray, index:Dynamic /*Int*/, value:Float):Dynamic /*Bool*/;
  @:native("ProcessInformationCopyDictionary") public static function ProcessInformationCopyDictionary(PSN:Dynamic /*Dynamic*/, infoToReturn:Int):Dynamic;
  @:native("CVPixelBufferLockBaseAddress") public static function CVPixelBufferLockBaseAddress(pixelBuffer:Dynamic /*__CVBuffer*/, lockFlags:Dynamic /*CVPixelBufferLockFlags*/):Int;
  @:native("UIAccessibilityIsGuidedAccessEnabled") public static function UIAccessibilityIsGuidedAccessEnabled():Dynamic /*Bool*/;
  @:native("CFRunLoopContainsTimer") public static function CFRunLoopContainsTimer(rl:Dynamic /*__CFRunLoop*/, timer:Dynamic /*__CFRunLoopTimer*/, mode:Dynamic):Int;
  @:native("UseDictionary") public static function UseDictionary(chan:Dynamic /*SpeechChannelRecord*/, dictionary:Int):Int;
  @:native("CVGetHostClockFrequency") public static function CVGetHostClockFrequency():Dynamic /*Float*/;
  @:native("CFErrorCopyFailureReason") public static function CFErrorCopyFailureReason(err:Dynamic /*__CFError*/):Dynamic;
  @:native("SKSearchResultsCreateWithQuery") public static function SKSearchResultsCreateWithQuery(inSearchGroup:Dynamic /*__SKSearchGroup*/, inQuery:Dynamic, inSearchType:Dynamic /*SKSearchType*/, inMaxFoundDocuments:Int, inContext:Dynamic /*Void*/, inFilterCallBack:Dynamic):Dynamic /*__SKSearchResults*/;
  @:native("AECountItems") public static function AECountItems(theAEDescList:Dynamic /*Dynamic*/, theCount:Dynamic /*Int*/):Int;
  @:native("CGContextSetStrokeColorSpace") public static function CGContextSetStrokeColorSpace(c:CGContext, space:CGColorSpace):Dynamic /*Void*/;
  @:native("NSSwapHostFloatToLittle") public static function NSSwapHostFloatToLittle(used:Dynamic /*Dynamic*/):Dynamic /*NSSwappedFloat*/;
  @:native("CFStringGetSurrogatePairForLongCharacter") public static function CFStringGetSurrogatePairForLongCharacter(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Int;
  @:native("HandAndHand") public static function HandAndHand(hand1:Int, hand2:Int):Int;
  @:native("PBCompareFSRefsSync") public static function PBCompareFSRefsSync(paramBlock:Dynamic /*FSRefParam*/):Int;
  @:native("AEInstallEventHandler") public static function AEInstallEventHandler(theAEEventClass:Int, theAEEventID:Int, handler:Dynamic, handlerRefcon:Void, isSysHandler:Int):Int;
  @:native("CGPathAddRects") public static function CGPathAddRects(path:CGPath, m:Dynamic /*Dynamic*/, rects:Dynamic /*Dynamic*/, count:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("TranslationCopySourceType") public static function TranslationCopySourceType(inTranslation:Dynamic /*OpaqueTranslationRef*/, outSourceType:Dynamic):Int;
  @:native("NSRecycleZone") public static function NSRecycleZone(zone:Dynamic /*_NSZone*/):Dynamic /*Void*/;
  @:native("CFRunLoopGetTypeID") public static function CFRunLoopGetTypeID():Int;
  @:native("CTRunDelegateCreate") public static function CTRunDelegateCreate(callbacks:Dynamic /*Dynamic*/, refCon:Dynamic /*Void*/):Dynamic;
  @:native("NewAECoercePtrUPP") public static function NewAECoercePtrUPP(userRoutine:Dynamic):Dynamic;
  @:native("WSMethodInvocationCreateFromSerialization") public static function WSMethodInvocationCreateFromSerialization(contract:Dynamic):Dynamic /*OpaqueWSMethodInvocationRef*/;
  @:native("CFRunLoopTimerSetNextFireDate") public static function CFRunLoopTimerSetNextFireDate(timer:Dynamic /*__CFRunLoopTimer*/, fireDate:Float):Dynamic /*Void*/;
  @:native("LocaleOperationGetLocales") public static function LocaleOperationGetLocales(opClass:Int, maxLocaleCount:Int, actualLocaleCount:Int, localeVariantList:Dynamic /*LocaleAndVariant*/):Int;
  @:native("CGColorConversionInfoCreate") public static function CGColorConversionInfoCreate(src:CGColorSpace, dst:CGColorSpace):Dynamic;
  @:native("NSSwapBigIntToHost") public static function NSSwapBigIntToHost(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("CFBinaryHeapRemoveMinimumValue") public static function CFBinaryHeapRemoveMinimumValue(heap:Dynamic /*__CFBinaryHeap*/):Dynamic /*Void*/;
  @:native("CFErrorGetTypeID") public static function CFErrorGetTypeID():Int;
  @:native("CVPixelBufferPoolGetAttributes") public static function CVPixelBufferPoolGetAttributes(pool:Dynamic /*__CVPixelBufferPool*/):Dynamic;
  @:native("CountUnicodeMappings") public static function CountUnicodeMappings(iFilter:Int, iFindMapping:Dynamic, oActualCount:Int):Int;
  @:native("CGContextEndTransparencyLayer") public static function CGContextEndTransparencyLayer(c:CGContext):Dynamic /*Void*/;
  @:native("DisposeSpeechDoneUPP") public static function DisposeSpeechDoneUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("FSFlushVolume") public static function FSFlushVolume(vRefNum:Int):Int;
  @:native("KCUpdateItem") public static function KCUpdateItem(item:Dynamic /*KCItemRef*/):Int;
  @:native("CGPDFContentStreamCreateWithStream") public static function CGPDFContentStreamCreateWithStream(stream:CGPDFStream, streamResources:CGPDFDictionary, parent:CGPDFContentStream):CGPDFContentStream;
  @:native("NSIncrementExtraRefCount") public static function NSIncrementExtraRefCount(object:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("InstallExceptionHandler") public static function InstallExceptionHandler(theHandler:Dynamic):Dynamic;
  @:native("CTLineGetStringRange") public static function CTLineGetStringRange(line:Dynamic):Dynamic /*CFRange*/;
  @:native("ColorSyncTransformCopyProperty") public static function ColorSyncTransformCopyProperty(transform:Dynamic /*ColorSyncTransform*/, key:Dynamic, options:Dynamic):Dynamic;
  @:native("CFTimeZoneResetSystem") public static function CFTimeZoneResetSystem():Dynamic /*Void*/;
  @:native("CreateObjSpecifier") public static function CreateObjSpecifier(desiredClass:Int, theContainer:Dynamic /*AEDesc*/, keyForm:Int, keyData:Dynamic /*AEDesc*/, disposeInputs:Int, objSpecifier:Dynamic /*AEDesc*/):Int;
  @:native("CFRunLoopPerformBlock") public static function CFRunLoopPerformBlock(rl:Dynamic /*__CFRunLoop*/, mode:Dynamic, block:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CGRectIntersectsRect") public static function CGRectIntersectsRect(rect1:CGRect, rect2:CGRect):Dynamic /*Bool*/;
  @:native("CVPixelBufferPoolCreate") public static function CVPixelBufferPoolCreate(allocator:Dynamic, poolAttributes:Dynamic, pixelBufferAttributes:Dynamic, poolOut:Dynamic /*__CVPixelBufferPool*/):Int;
  @:native("CGContextDrawPDFDocument") public static function CGContextDrawPDFDocument(c:CGContext, rect:CGRect, document:CGPDFDocument, page:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("CTFontCopyCharacterSet") public static function CTFontCopyCharacterSet(font:Dynamic):Dynamic;
  @:native("PBMakeFSRefUnicodeAsync") public static function PBMakeFSRefUnicodeAsync(paramBlock:Dynamic /*FSRefParam*/):Dynamic /*Void*/;
  @:native("RmvTime") public static function RmvTime(tmTaskPtr:Dynamic /*QElem*/):Dynamic /*Void*/;
  @:native("CFRunLoopWakeUp") public static function CFRunLoopWakeUp(rl:Dynamic /*__CFRunLoop*/):Dynamic /*Void*/;
  @:native("SKSearchResultsGetTypeID") public static function SKSearchResultsGetTypeID():Int;
  @:native("PMPrintSettingsSetValue") public static function PMPrintSettingsSetValue(printSettings:Dynamic /*OpaquePMPrintSettings*/, key:Dynamic, value:Dynamic, locked:Int):Int;
  @:native("TECGetTextEncodingFromInternetNameOrMIB") public static function TECGetTextEncodingFromInternetNameOrMIB(textEncodingPtr:Int, usage:Int, encodingName:Dynamic, mibEnum:Int):Int;
  @:native("SSLSetProtocolVersionMin") public static function SSLSetProtocolVersionMin(context:Dynamic /*SSLContext*/, minVersion:Dynamic /*SSLProtocol*/):Int;
  @:native("CallComponentUnregister") public static function CallComponentUnregister(ci:Dynamic /*ComponentInstanceRecord*/):Int;
  @:native("CFStringGetMaximumSizeOfFileSystemRepresentation") public static function CFStringGetMaximumSizeOfFileSystemRepresentation(string:Dynamic):Int;
  @:native("U64BitwiseAnd") public static function U64BitwiseAnd(left:Dynamic, right:Dynamic):Dynamic;
  @:native("MDQueryGetResultCount") public static function MDQueryGetResultCount(query:Dynamic /*__MDQuery*/):Int;
  @:native("S64BitwiseAnd") public static function S64BitwiseAnd(left:Dynamic, right:Dynamic):Dynamic;
  @:native("ICSetMapEntry") public static function ICSetMapEntry(inst:Dynamic /*OpaqueICInstance*/, entries:Int, pos:Dynamic /*Int*/, entry:Dynamic /*Dynamic*/):Int;
  @:native("CTFontManagerGetScopeForURL") public static function CTFontManagerGetScopeForURL(fontURL:Dynamic):Dynamic /*CTFontManagerScope*/;
  @:native("CTGlyphInfoGetCharacterIdentifier") public static function CTGlyphInfoGetCharacterIdentifier(glyphInfo:Dynamic):Int;
  @:native("IOSurfaceLookupFromXPCObject") public static function IOSurfaceLookupFromXPCObject(xobj:Dynamic /*Dynamic*/):Dynamic /*__IOSurface*/;
  @:native("FSNewAlias") public static function FSNewAlias(fromFile:Dynamic /*Dynamic*/, target:Dynamic /*Dynamic*/, inAlias:Dynamic /*AliasRecord*/):Int;
  @:native("CFURLEnumeratorCreateForMountedVolumes") public static function CFURLEnumeratorCreateForMountedVolumes(alloc:Dynamic, option:Dynamic /*CFURLEnumeratorOptions*/, propertyKeys:Dynamic):Dynamic;
  @:native("IOSurfaceGetPlaneCount") public static function IOSurfaceGetPlaneCount(buffer:Dynamic /*__IOSurface*/):Dynamic /*Int*/;
  @:native("CGImageMetadataRemoveTagWithPath") public static function CGImageMetadataRemoveTagWithPath(metadata:CGImageMetadata, parent:CGImageMetadataTag, path:Dynamic):Dynamic /*Bool*/;
  @:native("NewFSVolumeMountUPP") public static function NewFSVolumeMountUPP(userRoutine:Dynamic):Dynamic;
  @:native("CFNetServiceCreateDictionaryWithTXTData") public static function CFNetServiceCreateDictionaryWithTXTData(alloc:Dynamic, txtRecord:Dynamic):Dynamic;
  @:native("FSLockRange") public static function FSLockRange(forkRefNum:Int, positionMode:Int, positionOffset:Dynamic, requestCount:Dynamic, rangeStart:Dynamic):Int;
  @:native("CTRunGetAttributes") public static function CTRunGetAttributes(run:Dynamic):Dynamic;
  @:native("CFTimeZoneGetData") public static function CFTimeZoneGetData(tz:Dynamic):Dynamic;
  @:native("NanosecondsToAbsolute") public static function NanosecondsToAbsolute(nanoseconds:Dynamic /*UnsignedWide*/):Dynamic /*UnsignedWide*/;
  @:native("CGContextBeginTransparencyLayerWithRect") public static function CGContextBeginTransparencyLayerWithRect(c:CGContext, rect:CGRect, auxInfo:Dynamic):Dynamic /*Void*/;
  @:native("CGColorSpaceCreateWithICCProfile") public static function CGColorSpaceCreateWithICCProfile(data:Dynamic):CGColorSpace;
  @:native("CFDictionaryGetTypeID") public static function CFDictionaryGetTypeID():Int;
  @:native("CFBundleGetDataPointerForName") public static function CFBundleGetDataPointerForName(bundle:Dynamic /*__CFBundle*/, symbolName:Dynamic):Dynamic /*Void*/;
  @:native("IncrementAtomic") public static function IncrementAtomic(address:Int):Int;
  @:native("NSStringFromUIOffset") public static function NSStringFromUIOffset(offset:UIOffset):NSString;
  @:native("CFNetServiceBrowserScheduleWithRunLoop") public static function CFNetServiceBrowserScheduleWithRunLoop(browser:Dynamic /*__CFNetServiceBrowser*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("CFHTTPMessageIsRequest") public static function CFHTTPMessageIsRequest(message:Dynamic /*__CFHTTPMessage*/):Int;
  @:native("CGPDFStringCopyDate") public static function CGPDFStringCopyDate(string:CGPDFString):Dynamic;
  @:native("CGImageMetadataTagCopyQualifiers") public static function CGImageMetadataTagCopyQualifiers(tag:CGImageMetadataTag):Dynamic;
  @:native("TranslationPerformForFile") public static function TranslationPerformForFile(inTranslation:Dynamic /*OpaqueTranslationRef*/, inSourceFile:Dynamic /*Dynamic*/, inDestinationDirectory:Dynamic /*Dynamic*/, inDestinationName:Dynamic, outTranslatedFile:Dynamic /*FSRef*/):Int;
  @:native("CGPDFDocumentGetTrimBox") public static function CGPDFDocumentGetTrimBox(document:CGPDFDocument, page:Dynamic /*Int*/):CGRect;
  @:native("ATSFontIsEnabled") public static function ATSFontIsEnabled(iFont:Int):Int;
  @:native("Delay") public static function Delay(numTicks:Dynamic /*Int*/, finalTicks:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("TECSniffTextEncoding") public static function TECSniffTextEncoding(encodingSniffer:Dynamic /*OpaqueTECSnifferObjectRef*/, inputBuffer:Dynamic, inputBufferLength:Int, testEncodings:Int, numTextEncodings:Int, numErrsArray:Int, maxErrs:Int, numFeaturesArray:Int, maxFeatures:Int):Int;
  @:native("CVPixelBufferGetPixelFormatType") public static function CVPixelBufferGetPixelFormatType(pixelBuffer:Dynamic /*__CVBuffer*/):Int;
  @:native("CFCharacterSetCreateWithBitmapRepresentation") public static function CFCharacterSetCreateWithBitmapRepresentation(alloc:Dynamic, theData:Dynamic):Dynamic;
  @:native("DisposeCollectionFlattenUPP") public static function DisposeCollectionFlattenUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("PBXUnlockRangeSync") public static function PBXUnlockRangeSync(paramBlock:Dynamic /*FSRangeLockParam*/):Int;
  @:native("AXValueCreate") public static function AXValueCreate(theType:Dynamic /*AXValueType*/, valuePtr:Dynamic /*Dynamic*/):Dynamic;
  @:native("HIShapeDifference") public static function HIShapeDifference(inShape1:Dynamic, inShape2:Dynamic, outResult:Dynamic /*__HIShape*/):Int;
  @:native("CGImageMetadataCopyTagMatchingImageProperty") public static function CGImageMetadataCopyTagMatchingImageProperty(metadata:Dynamic, dictionaryName:Dynamic, propertyName:Dynamic):CGImageMetadataTag;
  @:native("InvokeSpeechTextDoneUPP") public static function InvokeSpeechTextDoneUPP(chan:Dynamic /*SpeechChannelRecord*/, refCon:Void, nextBuf:Dynamic /*Dynamic*/, byteLen:Dynamic /*Int*/, controlFlags:Int, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("FSFileSecurityCreateWithFSPermissionInfo") public static function FSFileSecurityCreateWithFSPermissionInfo(alloc:Dynamic, permissions:Dynamic /*Dynamic*/):Dynamic /*__FSFileSecurity*/;
  @:native("TECGetSubTextEncodings") public static function TECGetSubTextEncodings(inputEncoding:Int, subEncodings:Int, maxSubEncodings:Int, actualSubEncodings:Int):Int;
  @:native("CFArrayRemoveValueAtIndex") public static function CFArrayRemoveValueAtIndex(theArray:Dynamic /*__CFArray*/, idx:Int):Dynamic /*Void*/;
  @:native("FSMoveObjectToTrashSync") public static function FSMoveObjectToTrashSync(source:Dynamic /*Dynamic*/, target:Dynamic /*FSRef*/, options:Int):Int;
  @:native("CGBitmapContextGetBitsPerPixel") public static function CGBitmapContextGetBitsPerPixel(context:CGContext):Dynamic /*Int*/;
  @:native("CGImageMetadataGetTypeID") public static function CGImageMetadataGetTypeID():Int;
  @:native("CGContextAddRect") public static function CGContextAddRect(c:CGContext, rect:CGRect):Dynamic /*Void*/;
  @:native("CFTimeZoneGetNextDaylightSavingTimeTransition") public static function CFTimeZoneGetNextDaylightSavingTimeTransition(tz:Dynamic, at:Float):Float;
  @:native("SecCertificateCopySubjectSummary") public static function SecCertificateCopySubjectSummary(certificate:Dynamic /*__SecCertificate*/):Dynamic;
  @:native("CGAffineTransformIsIdentity") public static function CGAffineTransformIsIdentity(t:CGAffineTransform):Dynamic /*Bool*/;
  @:native("ColorSyncProfileCopyDescriptionString") public static function ColorSyncProfileCopyDescriptionString(prof:Dynamic):Dynamic;
  @:native("CATransform3DMakeScale") public static function CATransform3DMakeScale(sx:Float, sy:Float, sz:Float):CATransform3D;
  @:native("CFStringAppendCString") public static function CFStringAppendCString(theString:Dynamic /*__CFString*/, cStr:Dynamic /*Dynamic*/, encoding:Int):Dynamic /*Void*/;
  @:native("AEFlattenDesc") public static function AEFlattenDesc(theAEDesc:Dynamic /*Dynamic*/, buffer:Int, bufferSize:Int, actualSize:Int):Int;
  @:native("DCSGetTermRangeInString") public static function DCSGetTermRangeInString(dictionary:Dynamic, textString:Dynamic, offset:Int):Dynamic /*CFRange*/;
  @:native("CFRunLoopObserverGetActivities") public static function CFRunLoopObserverGetActivities(observer:Dynamic /*__CFRunLoopObserver*/):Int;
  @:native("SecTrustGetCertificateCount") public static function SecTrustGetCertificateCount(trust:Dynamic /*__SecTrust*/):Int;
  @:native("NewCollectionFlattenUPP") public static function NewCollectionFlattenUPP(userRoutine:Dynamic):Dynamic;
  @:native("CFAllocatorDeallocate") public static function CFAllocatorDeallocate(allocator:Dynamic, ptr:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("CFReadStreamScheduleWithRunLoop") public static function CFReadStreamScheduleWithRunLoop(stream:Dynamic /*__CFReadStream*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("CFNetworkCopyProxiesForAutoConfigurationScript") public static function CFNetworkCopyProxiesForAutoConfigurationScript(proxyAutoConfigurationScript:Dynamic, targetURL:Dynamic, error:Dynamic /*__CFError*/):Dynamic;
  @:native("PMSetPageFormatExtendedData") public static function PMSetPageFormatExtendedData(pageFormat:Dynamic /*OpaquePMPageFormat*/, dataID:Int, size:Int, extendedData:Dynamic /*Void*/):Int;
  @:native("IOSurfaceRemoveValue") public static function IOSurfaceRemoveValue(buffer:Dynamic /*__IOSurface*/, key:Dynamic):Dynamic /*Void*/;
  @:native("NSIntersectionRange") public static function NSIntersectionRange(range1:Dynamic /*_NSRange*/, range2:Dynamic /*_NSRange*/):Dynamic /*_NSRange*/;
  @:native("UIAccessibilityFocusedElement") public static function UIAccessibilityFocusedElement(assistiveTechnologyIdentifier:NSString):Dynamic /*Dynamic*/;
  @:native("CFAttributedStringGetAttribute") public static function CFAttributedStringGetAttribute(aStr:Dynamic, loc:Int, attrName:Dynamic, effectiveRange:Dynamic /*CFRange*/):Dynamic;
  @:native("CFRunLoopCopyCurrentMode") public static function CFRunLoopCopyCurrentMode(rl:Dynamic /*__CFRunLoop*/):Dynamic;
  @:native("CFStringCreateWithCStringNoCopy") public static function CFStringCreateWithCStringNoCopy(alloc:Dynamic, cStr:Dynamic /*Dynamic*/, encoding:Int, contentsDeallocator:Dynamic):Dynamic;
  @:native("CFRunLoopCopyAllModes") public static function CFRunLoopCopyAllModes(rl:Dynamic /*__CFRunLoop*/):Dynamic;
  @:native("CGImageMetadataSetValueWithPath") public static function CGImageMetadataSetValueWithPath(metadata:CGImageMetadata, parent:CGImageMetadataTag, path:Dynamic, value:Dynamic):Dynamic /*Bool*/;
  @:native("CFLocaleCreateCanonicalLanguageIdentifierFromString") public static function CFLocaleCreateCanonicalLanguageIdentifierFromString(allocator:Dynamic, localeIdentifier:Dynamic):Dynamic;
  @:native("IOSurfaceGetBytesPerElementOfPlane") public static function IOSurfaceGetBytesPerElementOfPlane(buffer:Dynamic /*__IOSurface*/, planeIndex:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("PMPresetCreatePrintSettings") public static function PMPresetCreatePrintSettings(preset:Dynamic /*OpaquePMPreset*/, session:Dynamic /*OpaquePMPrintSession*/, printSettings:Dynamic /*OpaquePMPrintSettings*/):Int;
  @:native("UIGraphicsEndImageContext") public static function UIGraphicsEndImageContext():Dynamic /*Void*/;
  @:native("CFLocaleCreateLocaleIdentifierFromWindowsLocaleCode") public static function CFLocaleCreateLocaleIdentifierFromWindowsLocaleCode(allocator:Dynamic, lcid:Dynamic /*UInt*/):Dynamic;
  @:native("CGImageGetUTType") public static function CGImageGetUTType(image:CGImage):Dynamic;
  @:native("CFDateFormatterGetDateStyle") public static function CFDateFormatterGetDateStyle(formatter:Dynamic /*__CFDateFormatter*/):Dynamic /*CFDateFormatterStyle*/;
  @:native("ATSFontFamilyGetEncoding") public static function ATSFontFamilyGetEncoding(iFamily:Int):Int;
  @:native("UCTypeSelectWalkList") public static function UCTypeSelectWalkList(ref:Dynamic /*OpaqueUCTypeSelectRef*/, currSelect:Dynamic, direction:Int, listSize:Int, listDataPtr:Dynamic /*Void*/, refcon:Dynamic /*Void*/, userUPP:Dynamic, closestItem:Int):Int;
  @:native("MDQueryGetIndexOfResult") public static function MDQueryGetIndexOfResult(query:Dynamic /*__MDQuery*/, result:Dynamic /*Dynamic*/):Int;
  @:native("SetDefaultComponent") public static function SetDefaultComponent(aComponent:Dynamic /*ComponentRecord*/, flags:Int):Int;
  @:native("EmptyHandle") public static function EmptyHandle(h:Int):Dynamic /*Void*/;
  @:native("CGLayerCreateWithContext") public static function CGLayerCreateWithContext(context:CGContext, size:CGSize, auxiliaryInfo:Dynamic):CGLayer;
  @:native("CTGlyphInfoCreateWithGlyph") public static function CTGlyphInfoCreateWithGlyph(glyph:Int, font:Dynamic, baseString:Dynamic):Dynamic;
  @:native("FSDisposeVolumeOperation") public static function FSDisposeVolumeOperation(volumeOp:Dynamic /*OpaqueFSVolumeOperation*/):Int;
  @:native("GetTextEncodingFromScriptInfo") public static function GetTextEncodingFromScriptInfo(iTextScriptID:Int, iTextLanguageID:Int, iTextRegionID:Int, oEncoding:Int):Int;
  @:native("LSSetHandlerOptionsForContentType") public static function LSSetHandlerOptionsForContentType(inContentType:Dynamic, inOptions:Dynamic /*LSHandlerOptions*/):Int;
  @:native("ICDeleteMapEntry") public static function ICDeleteMapEntry(inst:Dynamic /*OpaqueICInstance*/, entries:Int, pos:Dynamic /*Int*/):Int;
  @:native("CFFileDescriptorCreateRunLoopSource") public static function CFFileDescriptorCreateRunLoopSource(allocator:Dynamic, f:Dynamic /*__CFFileDescriptor*/, order:Int):Dynamic /*__CFRunLoopSource*/;
  @:native("SSLGetAllowsExpiredRoots") public static function SSLGetAllowsExpiredRoots(context:Dynamic /*SSLContext*/, allowsExpired:Int):Int;
  @:native("CTTextTabGetTypeID") public static function CTTextTabGetTypeID():Int;
  @:native("CVPixelBufferGetPlaneCount") public static function CVPixelBufferGetPlaneCount(pixelBuffer:Dynamic /*__CVBuffer*/):Dynamic /*Int*/;
  @:native("CGContextSetShadow") public static function CGContextSetShadow(c:CGContext, offset:CGSize, blur:Float):Dynamic /*Void*/;
  @:native("OSReadSwapInt16") public static function OSReadSwapInt16(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("CGPDFContextClose") public static function CGPDFContextClose(context:CGContext):Dynamic /*Void*/;
  @:native("CGContextEndPage") public static function CGContextEndPage(c:CGContext):Dynamic /*Void*/;
  @:native("CFArrayGetFirstIndexOfValue") public static function CFArrayGetFirstIndexOfValue(theArray:Dynamic, range:Dynamic /*CFRange*/, value:Dynamic /*Dynamic*/):Int;
  @:native("TECCountSubTextEncodings") public static function TECCountSubTextEncodings(inputEncoding:Int, numberOfEncodings:Int):Int;
  @:native("CGPointMakeWithDictionaryRepresentation") public static function CGPointMakeWithDictionaryRepresentation(dict:Dynamic, point:CGPoint):Dynamic /*Bool*/;
  @:native("CGImageSourceGetCount") public static function CGImageSourceGetCount(isrc:CGImageSource):Dynamic /*Int*/;
  @:native("CFRunLoopRun") public static function CFRunLoopRun():Dynamic /*Void*/;
  @:native("CFURLGetByteRangeForComponent") public static function CFURLGetByteRangeForComponent(url:Dynamic, component:Dynamic /*CFURLComponentType*/, rangeIncludingSeparators:Dynamic /*CFRange*/):Dynamic /*CFRange*/;
  @:native("CSIdentityQueryCreateForPosixID") public static function CSIdentityQueryCreateForPosixID(allocator:Dynamic, posixID:Dynamic /*Dynamic*/, identityClass:Int, authority:Dynamic /*__CSIdentityAuthority*/):Dynamic /*__CSIdentityQuery*/;
  @:native("CFAttributedStringGetAttributesAndLongestEffectiveRange") public static function CFAttributedStringGetAttributesAndLongestEffectiveRange(aStr:Dynamic, loc:Int, inRange:Dynamic /*CFRange*/, longestEffectiveRange:Dynamic /*CFRange*/):Dynamic;
  @:native("FSEventStreamSetDispatchQueue") public static function FSEventStreamSetDispatchQueue(streamRef:Dynamic /*__FSEventStream*/, q:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("MPSetTimerNotify") public static function MPSetTimerNotify(timerID:Dynamic /*OpaqueMPTimerID*/, anID:Dynamic /*OpaqueMPOpaqueID*/, notifyParam1:Dynamic /*Void*/, notifyParam2:Dynamic /*Void*/, notifyParam3:Dynamic /*Void*/):Int;
  @:native("CGPointEqualToPoint") public static function CGPointEqualToPoint(point1:CGPoint, point2:CGPoint):Dynamic /*Bool*/;
  @:native("CFRunLoopTimerGetOrder") public static function CFRunLoopTimerGetOrder(timer:Dynamic /*__CFRunLoopTimer*/):Int;
  @:native("BitAndAtomic") public static function BitAndAtomic(mask:Int, address:Int):Int;
  @:native("NSSwapBigFloatToHost") public static function NSSwapBigFloatToHost(used:Dynamic /*Dynamic*/):Dynamic /*Float*/;
  @:native("PBXLockRangeSync") public static function PBXLockRangeSync(paramBlock:Dynamic /*FSRangeLockParam*/):Int;
  @:native("CTFontManagerCreateFontDescriptorsFromURL") public static function CTFontManagerCreateFontDescriptorsFromURL(fileURL:Dynamic):Dynamic;
  @:native("CTLineGetGlyphRuns") public static function CTLineGetGlyphRuns(line:Dynamic):Dynamic;
  @:native("NSSwapHostDoubleToBig") public static function NSSwapHostDoubleToBig(used:Dynamic /*Dynamic*/):Dynamic /*NSSwappedDouble*/;
  @:native("FSDetermineIfRefIsEnclosedByFolder") public static function FSDetermineIfRefIsEnclosedByFolder(domainOrVRefNum:Int, folderType:Int, inRef:Dynamic /*Dynamic*/, outResult:Int):Int;
  @:native("LSRegisterFSRef") public static function LSRegisterFSRef(inRef:Dynamic /*Dynamic*/, inUpdate:Int):Int;
  @:native("CFBooleanGetTypeID") public static function CFBooleanGetTypeID():Int;
  @:native("PMPaperGetPPDPaperName") public static function PMPaperGetPPDPaperName(paper:Dynamic /*OpaquePMPaper*/, paperName:Dynamic):Int;
  @:native("CVGetCurrentHostTime") public static function CVGetCurrentHostTime():Dynamic /*Dynamic*/;
  @:native("NSSwapBigLongLongToHost") public static function NSSwapBigLongLongToHost(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("AECoercePtr") public static function AECoercePtr(typeCode:Int, dataPtr:Dynamic /*Dynamic*/, dataSize:Int, toType:Int, result:Dynamic /*AEDesc*/):Int;
  @:native("SKSummaryGetTypeID") public static function SKSummaryGetTypeID():Int;
  @:native("BatteryCount") public static function BatteryCount():Dynamic /*Int*/;
  @:native("NewThreadSwitchUPP") public static function NewThreadSwitchUPP(userRoutine:Dynamic):Dynamic;
  @:native("CGImageMetadataEnumerateTagsUsingBlock") public static function CGImageMetadataEnumerateTagsUsingBlock(metadata:Dynamic, rootPath:Dynamic, options:Dynamic, block:Dynamic):Dynamic /*Void*/;
  @:native("CFDictionaryContainsKey") public static function CFDictionaryContainsKey(theDict:Dynamic, key:Dynamic /*Dynamic*/):Int;
  @:native("SetPtrSize") public static function SetPtrSize(p:Int, newSize:Int):Dynamic /*Void*/;
  @:native("SSLSetClientSideAuthenticate") public static function SSLSetClientSideAuthenticate(context:Dynamic /*SSLContext*/, auth:Dynamic /*SSLAuthenticate*/):Int;
  @:native("CreateCompDescriptor") public static function CreateCompDescriptor(comparisonOperator:Int, operand1:Dynamic /*AEDesc*/, operand2:Dynamic /*AEDesc*/, disposeInputs:Int, theDescriptor:Dynamic /*AEDesc*/):Int;
  @:native("CFShowStr") public static function CFShowStr(str:Dynamic):Dynamic /*Void*/;
  @:native("SecIdentityCopyCertificate") public static function SecIdentityCopyCertificate(identityRef:Dynamic /*__SecIdentity*/, certificateRef:Dynamic /*__SecCertificate*/):Int;
  @:native("CountCollectionItems") public static function CountCollectionItems(c:Dynamic /*OpaqueCollection*/):Int;
  @:native("CATransform3DTranslate") public static function CATransform3DTranslate(t:CATransform3D, tx:Float, ty:Float, tz:Float):CATransform3D;
  @:native("FSGetTemporaryDirectoryForReplaceObject") public static function FSGetTemporaryDirectoryForReplaceObject(originalObject:Dynamic /*Dynamic*/, temporaryDirectory:Dynamic /*FSRef*/, flags:Int):Int;
  @:native("UIAccessibilityDarkerSystemColorsEnabled") public static function UIAccessibilityDarkerSystemColorsEnabled():Dynamic /*Bool*/;
  @:native("PMPrinterSetOutputResolution") public static function PMPrinterSetOutputResolution(printer:Dynamic /*OpaquePMPrinter*/, printSettings:Dynamic /*OpaquePMPrintSettings*/, resolutionP:Dynamic /*Dynamic*/):Int;
  @:native("CFTimeZoneSetDefault") public static function CFTimeZoneSetDefault(tz:Dynamic):Dynamic /*Void*/;
  @:native("GetPtrSize") public static function GetPtrSize(p:Int):Int;
  @:native("AXObserverCreate") public static function AXObserverCreate(application:Dynamic /*Dynamic*/, callback:Dynamic, outObserver:Dynamic /*__AXObserver*/):Dynamic /*AXError*/;
  @:native("CFBundleGetIdentifier") public static function CFBundleGetIdentifier(bundle:Dynamic /*__CFBundle*/):Dynamic;
  @:native("CFArrayReplaceValues") public static function CFArrayReplaceValues(theArray:Dynamic /*__CFArray*/, range:Dynamic /*CFRange*/, newValues:Dynamic /*Dynamic*/, newCount:Int):Dynamic /*Void*/;
  @:native("CFURLCopyHostName") public static function CFURLCopyHostName(anURL:Dynamic):Dynamic;
  @:native("PtrToHand") public static function PtrToHand(srcPtr:Dynamic /*Dynamic*/, dstHndl:Int, size:Dynamic /*Int*/):Int;
  @:native("PMPageFormatCreateDataRepresentation") public static function PMPageFormatCreateDataRepresentation(pageFormat:Dynamic /*OpaquePMPageFormat*/, data:Dynamic, format:Dynamic /*PMDataFormat*/):Int;
  @:native("CTFontCollectionCreateMatchingFontDescriptorsForFamily") public static function CTFontCollectionCreateMatchingFontDescriptorsForFamily(collection:Dynamic, familyName:Dynamic, options:Dynamic):Dynamic;
  @:native("CFMessagePortSetInvalidationCallBack") public static function CFMessagePortSetInvalidationCallBack(ms:Dynamic /*__CFMessagePort*/, callout:Dynamic):Dynamic /*Void*/;
  @:native("CGPDFDictionaryGetInteger") public static function CGPDFDictionaryGetInteger(dict:CGPDFDictionary, key:Dynamic /*Dynamic*/, value:Int):Dynamic /*Bool*/;
  @:native("MDQueryCopyValuesOfAttribute") public static function MDQueryCopyValuesOfAttribute(query:Dynamic /*__MDQuery*/, name:Dynamic):Dynamic;
  @:native("CGPDFDocumentIsEncrypted") public static function CGPDFDocumentIsEncrypted(document:CGPDFDocument):Dynamic /*Bool*/;
  @:native("InvokeOSLAdjustMarksUPP") public static function InvokeOSLAdjustMarksUPP(newStart:Dynamic /*Int*/, newStop:Dynamic /*Int*/, markToken:Dynamic /*Dynamic*/, userUPP:Dynamic):Int;
  @:native("CGLayerRelease") public static function CGLayerRelease(layer:CGLayer):Dynamic /*Void*/;
  @:native("CFStringCreateWithPascalString") public static function CFStringCreateWithPascalString(alloc:Dynamic, pStr:Dynamic, encoding:Int):Dynamic;
  @:native("PLstrncmp") public static function PLstrncmp(str1:Dynamic, str2:Dynamic, num:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("CTFontDescriptorCopyAttribute") public static function CTFontDescriptorCopyAttribute(descriptor:Dynamic, attribute:Dynamic):Dynamic;
  @:native("PMGetAdjustedPaperRect") public static function PMGetAdjustedPaperRect(pageFormat:Dynamic /*OpaquePMPageFormat*/, paperRect:Dynamic /*PMRect*/):Int;
  @:native("IsHandleValid") public static function IsHandleValid(h:Int):Int;
  @:native("CTLineDraw") public static function CTLineDraw(line:Dynamic, context:CGContext):Dynamic /*Void*/;
  @:native("CGLayerGetTypeID") public static function CGLayerGetTypeID():Int;
  @:native("CGContextEOClip") public static function CGContextEOClip(c:CGContext):Dynamic /*Void*/;
  @:native("CFMachPortCreate") public static function CFMachPortCreate(allocator:Dynamic, callout:Dynamic, context:Dynamic /*CFMachPortContext*/, shouldFreeInfo:Int):Dynamic /*__CFMachPort*/;
  @:native("NSFreeHashTable") public static function NSFreeHashTable(table:NSHashTable):Dynamic /*Void*/;
  @:native("NewGestaltValue") public static function NewGestaltValue(selector:Int, newValue:Int):Int;
  @:native("CTFontGetXHeight") public static function CTFontGetXHeight(font:Dynamic):Float;
  @:native("FSGetAsyncMountStatus") public static function FSGetAsyncMountStatus(volumeOp:Dynamic /*OpaqueFSVolumeOperation*/, status:Int, volumeOpStatus:Int, mountedVolumeRefNum:Int, clientData:Dynamic /*Dynamic*/):Int;
  @:native("WSProtocolHandlerCopyReplyDictionary") public static function WSProtocolHandlerCopyReplyDictionary(ref:Dynamic /*OpaqueWSProtocolHandlerRef*/, methodName:Dynamic, data:Dynamic):Dynamic;
  @:native("CGPDFArrayGetNull") public static function CGPDFArrayGetNull(array:CGPDFArray, index:Dynamic /*Int*/):Dynamic /*Bool*/;
  @:native("CFNetServiceMonitorStart") public static function CFNetServiceMonitorStart(monitor:Dynamic /*__CFNetServiceMonitor*/, recordType:Dynamic /*CFNetServiceMonitorType*/, error:Dynamic /*CFStreamError*/):Int;
  @:native("CGPDFScannerPopBoolean") public static function CGPDFScannerPopBoolean(scanner:CGPDFScanner, value:Int):Dynamic /*Bool*/;
  @:native("IconRefToHIShape") public static function IconRefToHIShape(iconRect:Dynamic /*Dynamic*/, align:Int, iconServicesUsageFlags:Int, theIconRef:Dynamic /*OpaqueIconRef*/):Dynamic;
  @:native("CFSocketDisableCallBacks") public static function CFSocketDisableCallBacks(s:Dynamic /*__CFSocket*/, callBackTypes:Int):Dynamic /*Void*/;
  @:native("CFNotificationCenterGetDistributedCenter") public static function CFNotificationCenterGetDistributedCenter():Dynamic /*__CFNotificationCenter*/;
  @:native("NSLog") public static function NSLog(_:Dynamic /*Dynamic*/, format:NSString):Dynamic /*Void*/;
  @:native("FSFileOperationGetTypeID") public static function FSFileOperationGetTypeID():Int;
  @:native("CFReadStreamGetTypeID") public static function CFReadStreamGetTypeID():Int;
  @:native("AXUIElementCopyAttributeNames") public static function AXUIElementCopyAttributeNames(element:Dynamic, names:Dynamic):Dynamic /*AXError*/;
  @:native("CFStringCreateExternalRepresentation") public static function CFStringCreateExternalRepresentation(alloc:Dynamic, theString:Dynamic, encoding:Int, lossByte:Int):Dynamic;
  @:native("ColorSyncCMMCopyLocalizedName") public static function ColorSyncCMMCopyLocalizedName(_:Dynamic /*ColorSyncCMM*/):Dynamic;
  @:native("ATSFontFamilyGetName") public static function ATSFontFamilyGetName(iFamily:Int, iOptions:Int, oName:Dynamic):Int;
  @:native("CGImageMetadataTagCopyNamespace") public static function CGImageMetadataTagCopyNamespace(tag:CGImageMetadataTag):Dynamic;
  @:native("PMPageFormatGetPrinterID") public static function PMPageFormatGetPrinterID(pageFormat:Dynamic /*OpaquePMPageFormat*/, printerID:Dynamic):Int;
  @:native("UIFloatRangeIsInfinite") public static function UIFloatRangeIsInfinite(range:Dynamic /*UIFloatRange*/):Dynamic /*Bool*/;
  @:native("CTFontCreateWithQuickdrawInstance") public static function CTFontCreateWithQuickdrawInstance(name:Dynamic, identifier:Dynamic /*Dynamic*/, style:Dynamic /*UInt*/, size:Float):Dynamic;
  @:native("CGImageSourceCreateWithDataProvider") public static function CGImageSourceCreateWithDataProvider(provider:CGDataProvider, options:Dynamic):CGImageSource;
  @:native("NSHashInsertIfAbsent") public static function NSHashInsertIfAbsent(table:NSHashTable, pointer:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("BitAndAtomic16") public static function BitAndAtomic16(mask:Int, address:Int):Int;
  @:native("CSIdentityGetPosixName") public static function CSIdentityGetPosixName(identity:Dynamic /*__CSIdentity*/):Dynamic;
  @:native("CreateTextEncoding") public static function CreateTextEncoding(encodingBase:Int, encodingVariant:Int, encodingFormat:Int):Int;
  @:native("CFPropertyListCreateDeepCopy") public static function CFPropertyListCreateDeepCopy(allocator:Dynamic, propertyList:Dynamic, mutabilityOption:Int):Dynamic;
  @:native("NewDebuggerThreadSchedulerUPP") public static function NewDebuggerThreadSchedulerUPP(userRoutine:Dynamic):Dynamic;
  @:native("CTFontDescriptorCreateWithAttributes") public static function CTFontDescriptorCreateWithAttributes(attributes:Dynamic):Dynamic;
  @:native("PMPrinterSetDefault") public static function PMPrinterSetDefault(printer:Dynamic /*OpaquePMPrinter*/):Int;
  @:native("CVPixelBufferPoolFlush") public static function CVPixelBufferPoolFlush(pool:Dynamic /*__CVPixelBufferPool*/, options:Dynamic /*CVPixelBufferPoolFlushFlags*/):Dynamic /*Void*/;
  @:native("CFTreeGetContext") public static function CFTreeGetContext(tree:Dynamic /*__CFTree*/, context:Dynamic /*CFTreeContext*/):Dynamic /*Void*/;
  @:native("CFBundleUnloadExecutable") public static function CFBundleUnloadExecutable(bundle:Dynamic /*__CFBundle*/):Dynamic /*Void*/;
  @:native("TECCreateOneToManyConverter") public static function TECCreateOneToManyConverter(newEncodingConverter:Dynamic /*OpaqueTECObjectRef*/, inputEncoding:Int, numOutputEncodings:Int, outputEncodings:Dynamic /*Dynamic*/):Int;
  @:native("AECompareDesc") public static function AECompareDesc(desc1:Dynamic /*Dynamic*/, desc2:Dynamic /*Dynamic*/, resultP:Int):Int;
  @:native("RegisterComponentFileRefEntries") public static function RegisterComponentFileRefEntries(ref:Dynamic /*Dynamic*/, global:Int, toRegister:Dynamic /*Dynamic*/, registerCount:Int):Int;
  @:native("CGRectGetMaxY") public static function CGRectGetMaxY(rect:CGRect):Float;
  @:native("MDQuerySetCreateResultFunction") public static function MDQuerySetCreateResultFunction(query:Dynamic /*__MDQuery*/, func:Dynamic, context:Dynamic /*Void*/, cb:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CTFontCopyFeatures") public static function CTFontCopyFeatures(font:Dynamic):Dynamic;
  @:native("CFTimeZoneIsDaylightSavingTime") public static function CFTimeZoneIsDaylightSavingTime(tz:Dynamic, at:Float):Int;
  @:native("NSSwapHostShortToLittle") public static function NSSwapHostShortToLittle(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("ATSFontNotify") public static function ATSFontNotify(action:Dynamic /*ATSFontNotifyAction*/, info:Dynamic /*Void*/):Int;
  @:native("CSIdentityRemoveClient") public static function CSIdentityRemoveClient(identity:Dynamic /*__CSIdentity*/):Dynamic /*Void*/;
  @:native("CFDictionaryCreateCopy") public static function CFDictionaryCreateCopy(allocator:Dynamic, theDict:Dynamic):Dynamic;
  @:native("CFNumberFormatterGetLocale") public static function CFNumberFormatterGetLocale(formatter:Dynamic /*__CFNumberFormatter*/):Dynamic;
  @:native("CGImageCreateWithImageInRect") public static function CGImageCreateWithImageInRect(image:CGImage, rect:CGRect):CGImage;
  @:native("NSSelectorFromString") public static function NSSelectorFromString(aSelectorName:NSString):Dynamic /*String*/;
  @:native("SKIndexDocumentIteratorCreate") public static function SKIndexDocumentIteratorCreate(inIndex:Dynamic /*__SKIndex*/, inParentDocument:Dynamic):Dynamic /*__SKIndexDocumentIterator*/;
  @:native("LSSharedFileListRemoveAllItems") public static function LSSharedFileListRemoveAllItems(inList:Dynamic /*OpaqueLSSharedFileListRef*/):Int;
  @:native("NSMakeRange") public static function NSMakeRange(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Dynamic /*_NSRange*/;
  @:native("NSSearchPathForDirectoriesInDomains") public static function NSSearchPathForDirectoriesInDomains(directory:NSSearchPathDirectory, domainMask:NSSearchPathDomainMask, expandTilde:Dynamic /*Bool*/):Dynamic /*NSArray<NSString*/;
  @:native("FSOpenResFile") public static function FSOpenResFile(ref:Dynamic /*Dynamic*/, permission:Dynamic):Int;
  @:native("AEPrintDescToHandle") public static function AEPrintDescToHandle(desc:Dynamic /*Dynamic*/, result:Int):Int;
  @:native("CFUUIDGetUUIDBytes") public static function CFUUIDGetUUIDBytes(uuid:Dynamic):Dynamic /*CFUUIDBytes*/;
  @:native("DecrementAtomic") public static function DecrementAtomic(address:Int):Int;
  @:native("CTRunGetStringRange") public static function CTRunGetStringRange(run:Dynamic):Dynamic /*CFRange*/;
  @:native("StopSpeech") public static function StopSpeech(chan:Dynamic /*SpeechChannelRecord*/):Int;
  @:native("CFDateGetTimeIntervalSinceDate") public static function CFDateGetTimeIntervalSinceDate(theDate:Dynamic, otherDate:Dynamic):Float;
  @:native("CFRunLoopSourceCreate") public static function CFRunLoopSourceCreate(allocator:Dynamic, order:Int, context:Dynamic /*CFRunLoopSourceContext*/):Dynamic /*__CFRunLoopSource*/;
  @:native("GetCollectionItemHdl") public static function GetCollectionItemHdl(aCollection:Dynamic /*OpaqueCollection*/, tag:Int, id:Int, itemData:Int):Int;
  @:native("CVImageBufferGetCleanRect") public static function CVImageBufferGetCleanRect(imageBuffer:Dynamic /*__CVBuffer*/):CGRect;
  @:native("HIShapeCreateIntersection") public static function HIShapeCreateIntersection(inShape1:Dynamic, inShape2:Dynamic):Dynamic;
  @:native("CVBufferRelease") public static function CVBufferRelease(buffer:Dynamic /*__CVBuffer*/):Dynamic /*Void*/;
  @:native("ATSFontFamilyFindFromQuickDrawName") public static function ATSFontFamilyFindFromQuickDrawName(iName:Dynamic):Int;
  @:native("CFNetServiceSetProtocolSpecificInformation") public static function CFNetServiceSetProtocolSpecificInformation(theService:Dynamic /*__CFNetService*/, theInfo:Dynamic):Dynamic /*Void*/;
  @:native("CGImageSourceRemoveCacheAtIndex") public static function CGImageSourceRemoveCacheAtIndex(isrc:CGImageSource, index:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("CGPDFScannerPopString") public static function CGPDFScannerPopString(scanner:CGPDFScanner, value:CGPDFString):Dynamic /*Bool*/;
  @:native("SSLSetAllowsExpiredRoots") public static function SSLSetAllowsExpiredRoots(context:Dynamic /*SSLContext*/, allowsExpired:Int):Int;
  @:native("CGContextRelease") public static function CGContextRelease(c:CGContext):Dynamic /*Void*/;
  @:native("CFDataGetLength") public static function CFDataGetLength(theData:Dynamic):Int;
  @:native("CFNumberFormatterCreateStringWithNumber") public static function CFNumberFormatterCreateStringWithNumber(allocator:Dynamic, formatter:Dynamic /*__CFNumberFormatter*/, number:Dynamic):Dynamic;
  @:native("CGFontCreateCopyWithVariations") public static function CGFontCreateCopyWithVariations(font:CGFont, variations:Dynamic):CGFont;
  @:native("CFSetGetValueIfPresent") public static function CFSetGetValueIfPresent(theSet:Dynamic, candidate:Dynamic /*Dynamic*/, value:Dynamic /*Dynamic*/):Int;
  @:native("FSPathGetTemporaryDirectoryForReplaceObject") public static function FSPathGetTemporaryDirectoryForReplaceObject(originalObjectPath:Dynamic /*Dynamic*/, temporaryDirectoryPath:Dynamic /*Int*/, maxPathSize:Int, flags:Int):Int;
  @:native("SecPolicyGetTypeID") public static function SecPolicyGetTypeID():Int;
  @:native("CFPlugInInstanceCreateWithInstanceDataSize") public static function CFPlugInInstanceCreateWithInstanceDataSize(allocator:Dynamic, instanceDataSize:Int, deallocateInstanceFunction:Dynamic, factoryName:Dynamic, getInterfaceFunction:Dynamic):Dynamic /*__CFPlugInInstance*/;
  @:native("NSSwapLittleLongToHost") public static function NSSwapLittleLongToHost(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("CVPixelBufferCreate") public static function CVPixelBufferCreate(allocator:Dynamic, width:Dynamic /*Int*/, height:Dynamic /*Int*/, pixelFormatType:Int, pixelBufferAttributes:Dynamic, pixelBufferOut:Dynamic /*__CVBuffer*/):Int;
  @:native("CFBitVectorGetBits") public static function CFBitVectorGetBits(bv:Dynamic, range:Dynamic /*CFRange*/, bytes:Int):Dynamic /*Void*/;
  @:native("FSDeleteFork") public static function FSDeleteFork(ref:Dynamic /*Dynamic*/, forkNameLength:Int, forkName:Dynamic /*Dynamic*/):Int;
  @:native("GetIconRefFromTypeInfo") public static function GetIconRefFromTypeInfo(inCreator:Int, inType:Int, inExtension:Dynamic, inMIMEType:Dynamic, inUsageFlags:Int, outIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("SpeechSynthesisRegisterModuleURL") public static function SpeechSynthesisRegisterModuleURL(url:Dynamic):Int;
  @:native("ColorSyncProfileCreateWithName") public static function ColorSyncProfileCreateWithName(name:Dynamic):Dynamic;
  @:native("SecPolicyCopyProperties") public static function SecPolicyCopyProperties(policyRef:Dynamic /*__SecPolicy*/):Dynamic;
  @:native("SameProcess") public static function SameProcess(PSN1:Dynamic /*Dynamic*/, PSN2:Dynamic /*Dynamic*/, result:Int):Int;
  @:native("WakeUpProcess") public static function WakeUpProcess(PSN:Dynamic /*Dynamic*/):Int;
  @:native("CGImageDestinationCopyTypeIdentifiers") public static function CGImageDestinationCopyTypeIdentifiers():Dynamic;
  @:native("CFBinaryHeapContainsValue") public static function CFBinaryHeapContainsValue(heap:Dynamic /*__CFBinaryHeap*/, value:Dynamic /*Dynamic*/):Int;
  @:native("CGContextFillRect") public static function CGContextFillRect(c:CGContext, rect:CGRect):Dynamic /*Void*/;
  @:native("PMPaperGetMargins") public static function PMPaperGetMargins(paper:Dynamic /*OpaquePMPaper*/, paperMargins:Dynamic /*PMRect*/):Int;
  @:native("UIAccessibilityConvertPathToScreenCoordinates") public static function UIAccessibilityConvertPathToScreenCoordinates(path:UIBezierPath, view:UIView):UIBezierPath;
  @:native("SKIndexDocumentIteratorGetTypeID") public static function SKIndexDocumentIteratorGetTypeID():Int;
  @:native("FSEventsGetCurrentEventId") public static function FSEventsGetCurrentEventId():Dynamic;
  @:native("UIAccessibilityIsClosedCaptioningEnabled") public static function UIAccessibilityIsClosedCaptioningEnabled():Dynamic /*Bool*/;
  @:native("GetComponentPublicResource") public static function GetComponentPublicResource(aComponent:Dynamic /*ComponentRecord*/, resourceType:Int, resourceID:Int, theResource:Int):Int;
  @:native("CSIdentityGetAliases") public static function CSIdentityGetAliases(identity:Dynamic /*__CSIdentity*/):Dynamic;
  @:native("CGColorSpaceCreateWithPlatformColorSpace") public static function CGColorSpaceCreateWithPlatformColorSpace(ref:Dynamic /*Dynamic*/):CGColorSpace;
  @:native("MDQuerySetMaxCount") public static function MDQuerySetMaxCount(query:Dynamic /*__MDQuery*/, size:Int):Dynamic /*Void*/;
  @:native("SetFrontProcessWithOptions") public static function SetFrontProcessWithOptions(inProcess:Dynamic /*Dynamic*/, inOptions:Int):Int;
  @:native("CGContextAddArcToPoint") public static function CGContextAddArcToPoint(c:CGContext, x1:Float, y1:Float, x2:Float, y2:Float, radius:Float):Dynamic /*Void*/;
  @:native("PMSessionSetError") public static function PMSessionSetError(printSession:Dynamic /*OpaquePMPrintSession*/, printError:Int):Int;
  @:native("CSIdentityGetFullName") public static function CSIdentityGetFullName(identity:Dynamic /*__CSIdentity*/):Dynamic;
  @:native("FNSubscribe") public static function FNSubscribe(directoryRef:Dynamic /*Dynamic*/, callback:Dynamic, refcon:Dynamic /*Void*/, flags:Int, subscription:Dynamic /*OpaqueFNSubscriptionRef*/):Int;
  @:native("InvokeFMFontCallbackFilterUPP") public static function InvokeFMFontCallbackFilterUPP(iFont:Int, iRefCon:Dynamic /*Void*/, userUPP:Dynamic):Int;
  @:native("CFHTTPAuthenticationCopyDomains") public static function CFHTTPAuthenticationCopyDomains(auth:Dynamic /*_CFHTTPAuthentication*/):Dynamic;
  @:native("CGFontCopyTableTags") public static function CGFontCopyTableTags(font:CGFont):Dynamic;
  @:native("PMPrinterIsFavorite") public static function PMPrinterIsFavorite(printer:Dynamic /*OpaquePMPrinter*/):Int;
  @:native("FSFileSecurityGetTypeID") public static function FSFileSecurityGetTypeID():Int;
  @:native("SKSummaryCopySentenceSummaryString") public static function SKSummaryCopySentenceSummaryString(summary:Dynamic /*__SKSummary*/, numSentences:Int):Dynamic;
  @:native("CGContextFillEllipseInRect") public static function CGContextFillEllipseInRect(c:CGContext, rect:CGRect):Dynamic /*Void*/;
  @:native("CGPDFPageGetBoxRect") public static function CGPDFPageGetBoxRect(page:CGPDFPage, box:CGPDFBox):CGRect;
  @:native("InvokeSpeechWordUPP") public static function InvokeSpeechWordUPP(chan:Dynamic /*SpeechChannelRecord*/, refCon:Void, wordPos:Dynamic /*Int*/, wordLen:Int, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CFHostGetAddressing") public static function CFHostGetAddressing(theHost:Dynamic /*__CFHost*/, hasBeenResolved:Int):Dynamic;
  @:native("CFRunLoopSourceGetOrder") public static function CFRunLoopSourceGetOrder(source:Dynamic /*__CFRunLoopSource*/):Int;
  @:native("MPCancelTimer") public static function MPCancelTimer(timerID:Dynamic /*OpaqueMPTimerID*/, timeRemaining:Dynamic /*UnsignedWide*/):Int;
  @:native("CTFontCollectionSetQueryDescriptors") public static function CTFontCollectionSetQueryDescriptors(collection:Dynamic /*__CTFontCollection*/, descriptors:Dynamic):Dynamic /*Void*/;
  @:native("CVImageBufferIsFlipped") public static function CVImageBufferIsFlipped(imageBuffer:Dynamic /*__CVBuffer*/):Int;
  @:native("CallComponentVersion") public static function CallComponentVersion(ci:Dynamic /*ComponentInstanceRecord*/):Int;
  @:native("CGContextSetAllowsFontSubpixelPositioning") public static function CGContextSetAllowsFontSubpixelPositioning(c:CGContext, allowsFontSubpixelPositioning:Dynamic /*Bool*/):Dynamic /*Void*/;
  @:native("CFMachPortIsValid") public static function CFMachPortIsValid(port:Dynamic /*__CFMachPort*/):Int;
  @:native("CGContextConvertRectToDeviceSpace") public static function CGContextConvertRectToDeviceSpace(c:CGContext, rect:CGRect):CGRect;
  @:native("TECCountWebTextEncodings") public static function TECCountWebTextEncodings(locale:Int, numberEncodings:Int):Int;
  @:native("CGFontRelease") public static function CGFontRelease(font:CGFont):Dynamic /*Void*/;
  @:native("CTLineGetTypographicBounds") public static function CTLineGetTypographicBounds(line:Dynamic, ascent:Float, descent:Float, leading:Float):Dynamic /*Float*/;
  @:native("HLock") public static function HLock(h:Int):Dynamic /*Void*/;
  @:native("OpenComponent") public static function OpenComponent(aComponent:Dynamic /*ComponentRecord*/):Dynamic /*ComponentInstanceRecord*/;
  @:native("MDQueryDisableUpdates") public static function MDQueryDisableUpdates(query:Dynamic /*__MDQuery*/):Dynamic /*Void*/;
  @:native("CGContextSetTextDrawingMode") public static function CGContextSetTextDrawingMode(c:CGContext, mode:CGTextDrawingMode):Dynamic /*Void*/;
  @:native("PBXLockRangeAsync") public static function PBXLockRangeAsync(paramBlock:Dynamic /*FSRangeLockParam*/):Int;
  @:native("CGPathGetPathBoundingBox") public static function CGPathGetPathBoundingBox(path:Dynamic):CGRect;
  @:native("CFStringAppendPascalString") public static function CFStringAppendPascalString(theString:Dynamic /*__CFString*/, pStr:Dynamic, encoding:Int):Dynamic /*Void*/;
  @:native("IOSurfaceCreateMachPort") public static function IOSurfaceCreateMachPort(buffer:Dynamic /*__IOSurface*/):Dynamic /*Dynamic*/;
  @:native("CFRunLoopObserverIsValid") public static function CFRunLoopObserverIsValid(observer:Dynamic /*__CFRunLoopObserver*/):Int;
  @:native("CFPropertyListCreateFromStream") public static function CFPropertyListCreateFromStream(allocator:Dynamic, stream:Dynamic /*__CFReadStream*/, streamLength:Int, mutabilityOption:Int, format:Dynamic /*CFPropertyListFormat*/, errorString:Dynamic):Dynamic;
  @:native("CreateLogicalDescriptor") public static function CreateLogicalDescriptor(theLogicalTerms:Dynamic /*AEDesc*/, theLogicOperator:Int, disposeInputs:Int, theDescriptor:Dynamic /*AEDesc*/):Int;
  @:native("MDLabelGetTypeID") public static function MDLabelGetTypeID():Int;
  @:native("UnregisterComponent") public static function UnregisterComponent(aComponent:Dynamic /*ComponentRecord*/):Int;
  @:native("HIShapeIntersect") public static function HIShapeIntersect(inShape1:Dynamic, inShape2:Dynamic, outResult:Dynamic /*__HIShape*/):Int;
  @:native("CGPDFDocumentGetMediaBox") public static function CGPDFDocumentGetMediaBox(document:CGPDFDocument, page:Dynamic /*Int*/):CGRect;
  @:native("CFBundleCopyPrivateFrameworksURL") public static function CFBundleCopyPrivateFrameworksURL(bundle:Dynamic /*__CFBundle*/):Dynamic;
  @:native("EmptyCollection") public static function EmptyCollection(c:Dynamic /*OpaqueCollection*/):Dynamic /*Void*/;
  @:native("InvokeThreadEntryUPP") public static function InvokeThreadEntryUPP(threadParam:Dynamic /*Void*/, userUPP:Dynamic):Dynamic /*Dynamic*/;
  @:native("CFNetServiceCancel") public static function CFNetServiceCancel(theService:Dynamic /*__CFNetService*/):Dynamic /*Void*/;
  @:native("SKSummaryCopySentenceAtIndex") public static function SKSummaryCopySentenceAtIndex(summary:Dynamic /*__SKSummary*/, i:Int):Dynamic;
  @:native("CVBufferSetAttachments") public static function CVBufferSetAttachments(buffer:Dynamic /*__CVBuffer*/, theAttachments:Dynamic, attachmentMode:Dynamic /*CVAttachmentMode*/):Dynamic /*Void*/;
  @:native("CSIdentityQueryCreate") public static function CSIdentityQueryCreate(allocator:Dynamic, identityClass:Int, authority:Dynamic /*__CSIdentityAuthority*/):Dynamic /*__CSIdentityQuery*/;
  @:native("FSReadFork") public static function FSReadFork(forkRefNum:Int, positionMode:Int, positionOffset:Dynamic, requestCount:Int, buffer:Dynamic /*Void*/, actualCount:Int):Int;
  @:native("CSIdentityQueryCreateForName") public static function CSIdentityQueryCreateForName(allocator:Dynamic, name:Dynamic, comparisonMethod:Int, identityClass:Int, authority:Dynamic /*__CSIdentityAuthority*/):Dynamic /*__CSIdentityQuery*/;
  @:native("SecPolicyCreateRevocation") public static function SecPolicyCreateRevocation(revocationFlags:Int):Dynamic /*__SecPolicy*/;
  @:native("MPCreateSemaphore") public static function MPCreateSemaphore(maximumValue:Int, initialValue:Int, semaphore:Dynamic /*OpaqueMPSemaphoreID*/):Int;
  @:native("UCTypeSelectAddKeyToSelector") public static function UCTypeSelectAddKeyToSelector(inRef:Dynamic /*OpaqueUCTypeSelectRef*/, inText:Dynamic, inEventTime:Dynamic /*Float*/, updateFlag:Int):Int;
  @:native("CGColorSpaceGetTypeID") public static function CGColorSpaceGetTypeID():Int;
  @:native("FNGetDirectoryForSubscription") public static function FNGetDirectoryForSubscription(subscription:Dynamic /*OpaqueFNSubscriptionRef*/, ref:Dynamic /*FSRef*/):Int;
  @:native("PMWorkflowCopyItems") public static function PMWorkflowCopyItems(workflowItems:Dynamic):Int;
  @:native("CGPDFDocumentGetID") public static function CGPDFDocumentGetID(document:CGPDFDocument):CGPDFArray;
  @:native("CVPixelBufferPoolGetTypeID") public static function CVPixelBufferPoolGetTypeID():Int;
  @:native("KCFindAppleSharePassword") public static function KCFindAppleSharePassword(serverSignature:Dynamic, serverAddress:Dynamic, serverName:Dynamic, volumeName:Dynamic, accountName:Dynamic, maxLength:Int, passwordData:Dynamic /*Void*/, actualLength:Int, item:Dynamic /*KCItemRef*/):Int;
  @:native("CGPathCreateWithRoundedRect") public static function CGPathCreateWithRoundedRect(rect:CGRect, cornerWidth:Float, cornerHeight:Float, transform:Dynamic /*Dynamic*/):Dynamic;
  @:native("ReadLocation") public static function ReadLocation(loc:Dynamic /*MachineLocation*/):Dynamic /*Void*/;
  @:native("CFCharacterSetCreateMutableCopy") public static function CFCharacterSetCreateMutableCopy(alloc:Dynamic, theSet:Dynamic):Dynamic /*__CFCharacterSet*/;
  @:native("CFBundleCopyBundleURL") public static function CFBundleCopyBundleURL(bundle:Dynamic /*__CFBundle*/):Dynamic;
  @:native("CGColorSpaceGetBaseColorSpace") public static function CGColorSpaceGetBaseColorSpace(space:CGColorSpace):CGColorSpace;
  @:native("CGColorEqualToColor") public static function CGColorEqualToColor(color1:CGColor, color2:CGColor):Dynamic /*Bool*/;
  @:native("CGPathIsEmpty") public static function CGPathIsEmpty(path:Dynamic):Dynamic /*Bool*/;
  @:native("NSEndMapTableEnumeration") public static function NSEndMapTableEnumeration(enumerator:Dynamic /*NSMapEnumerator*/):Dynamic /*Void*/;
  @:native("AEBuildParameters") public static function AEBuildParameters(event:Dynamic /*AEDesc*/, error:Dynamic /*AEBuildError*/, format:Dynamic /*Dynamic*/):Int;
  @:native("CFDictionaryGetCountOfKey") public static function CFDictionaryGetCountOfKey(theDict:Dynamic, key:Dynamic /*Dynamic*/):Int;
  @:native("InvokeOSLGetMarkTokenUPP") public static function InvokeOSLGetMarkTokenUPP(dContainerToken:Dynamic /*Dynamic*/, containerClass:Int, result:Dynamic /*AEDesc*/, userUPP:Dynamic):Int;
  @:native("WSMethodInvocationScheduleWithRunLoop") public static function WSMethodInvocationScheduleWithRunLoop(invocation:Dynamic /*OpaqueWSMethodInvocationRef*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("ATSFontFamilyGetGeneration") public static function ATSFontFamilyGetGeneration(iFamily:Int):Int;
  @:native("SetSpeechRate") public static function SetSpeechRate(chan:Dynamic /*SpeechChannelRecord*/, rate:Int):Int;
  @:native("InvokeIOCompletionUPP") public static function InvokeIOCompletionUPP(paramBlock:Void, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("PBSetForkSizeAsync") public static function PBSetForkSizeAsync(paramBlock:Dynamic /*FSForkIOParam*/):Dynamic /*Void*/;
  @:native("CFCalendarCopyCurrent") public static function CFCalendarCopyCurrent():Dynamic /*__CFCalendar*/;
  @:native("FSPathCopyObjectAsync") public static function FSPathCopyObjectAsync(fileOp:Dynamic /*__FSFileOperation*/, sourcePath:Dynamic /*Dynamic*/, destDirPath:Dynamic /*Dynamic*/, destName:Dynamic, flags:Int, callback:Dynamic, statusChangeInterval:Float, clientContext:Dynamic /*FSFileOperationClientContext*/):Int;
  @:native("CGFontCopyGlyphNameForGlyph") public static function CGFontCopyGlyphNameForGlyph(font:CGFont, glyph:Int):Dynamic;
  @:native("CGImageCreateCopyWithColorSpace") public static function CGImageCreateCopyWithColorSpace(image:CGImage, space:CGColorSpace):CGImage;
  @:native("CGImageSourceCreateThumbnailAtIndex") public static function CGImageSourceCreateThumbnailAtIndex(isrc:CGImageSource, index:Dynamic /*Int*/, options:Dynamic):CGImage;
  @:native("CTFontDescriptorCreateWithNameAndSize") public static function CTFontDescriptorCreateWithNameAndSize(name:Dynamic, size:Float):Dynamic;
  @:native("UIAccessibilityIsGrayscaleEnabled") public static function UIAccessibilityIsGrayscaleEnabled():Dynamic /*Bool*/;
  @:native("CFTimeZoneCopyLocalizedName") public static function CFTimeZoneCopyLocalizedName(tz:Dynamic, style:Dynamic /*CFTimeZoneNameStyle*/, locale:Dynamic):Dynamic;
  @:native("NSDecimalIsNotANumber") public static function NSDecimalIsNotANumber(used:Dynamic /*Dynamic*/):Dynamic /*Bool*/;
  @:native("LMGetIntlSpec") public static function LMGetIntlSpec():Int;
  @:native("CATransform3DInvert") public static function CATransform3DInvert(t:CATransform3D):CATransform3D;
  @:native("SKDocumentGetTypeID") public static function SKDocumentGetTypeID():Int;
  @:native("GetSpeechRate") public static function GetSpeechRate(chan:Dynamic /*SpeechChannelRecord*/, rate:Int):Int;
  @:native("CSIdentityDelete") public static function CSIdentityDelete(identity:Dynamic /*__CSIdentity*/):Dynamic /*Void*/;
  @:native("CFDataCreateMutableCopy") public static function CFDataCreateMutableCopy(allocator:Dynamic, capacity:Int, theData:Dynamic):Dynamic /*__CFData*/;
  @:native("AEStreamCloseList") public static function AEStreamCloseList(ref:Dynamic /*OpaqueAEStreamRef*/):Int;
  @:native("LMGetMemErr") public static function LMGetMemErr():Int;
  @:native("PMCreateSession") public static function PMCreateSession(printSession:Dynamic /*OpaquePMPrintSession*/):Int;
  @:native("CFSocketGetSocketFlags") public static function CFSocketGetSocketFlags(s:Dynamic /*__CFSocket*/):Int;
  @:native("WSMethodInvocationGetTypeID") public static function WSMethodInvocationGetTypeID():Int;
  @:native("CGImageSourceCreateImageAtIndex") public static function CGImageSourceCreateImageAtIndex(isrc:CGImageSource, index:Dynamic /*Int*/, options:Dynamic):CGImage;
  @:native("WSProtocolHandlerCopyRequestDocument") public static function WSProtocolHandlerCopyRequestDocument(ref:Dynamic /*OpaqueWSProtocolHandlerRef*/, methodName:Dynamic, methodParams:Dynamic, methodParamOrder:Dynamic, methodExtras:Dynamic):Dynamic;
  @:native("CoreEndianGetFlipper") public static function CoreEndianGetFlipper(dataDomain:Int, dataType:Int, proc:Dynamic, refcon:Dynamic /*Dynamic*/):Int;
  @:native("MDQueryGetCountOfResultsWithAttributeValue") public static function MDQueryGetCountOfResultsWithAttributeValue(query:Dynamic /*__MDQuery*/, name:Dynamic, value:Dynamic):Int;
  @:native("UnregisterIconRef") public static function UnregisterIconRef(creator:Int, iconType:Int):Int;
  @:native("FSFileOperationCopyStatus") public static function FSFileOperationCopyStatus(fileOp:Dynamic /*__FSFileOperation*/, currentItem:Dynamic /*FSRef*/, stage:Int, error:Int, statusDictionary:Dynamic, info:Dynamic /*Dynamic*/):Int;
  @:native("SSLGetDiffieHellmanParams") public static function SSLGetDiffieHellmanParams(context:Dynamic /*SSLContext*/, dhParams:Dynamic /*Dynamic*/, dhParamsLen:Dynamic /*Int*/):Int;
  @:native("CGPathCreateMutableCopyByTransformingPath") public static function CGPathCreateMutableCopyByTransformingPath(path:Dynamic, transform:Dynamic /*Dynamic*/):CGPath;
  @:native("CGBitmapContextGetWidth") public static function CGBitmapContextGetWidth(context:CGContext):Dynamic /*Int*/;
  @:native("DisposeDebuggerNewThreadUPP") public static function DisposeDebuggerNewThreadUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CGPDFContextSetURLForRect") public static function CGPDFContextSetURLForRect(context:CGContext, url:Dynamic, rect:CGRect):Dynamic /*Void*/;
  @:native("CFLocaleCopyISOCurrencyCodes") public static function CFLocaleCopyISOCurrencyCodes():Dynamic;
  @:native("WSProtocolHandlerCopyRequestDictionary") public static function WSProtocolHandlerCopyRequestDictionary(ref:Dynamic /*OpaqueWSProtocolHandlerRef*/, data:Dynamic):Dynamic;
  @:native("GetIndVoice") public static function GetIndVoice(index:Int, voice:Dynamic /*VoiceSpec*/):Int;
  @:native("CFSocketIsValid") public static function CFSocketIsValid(s:Dynamic /*__CFSocket*/):Int;
  @:native("CGDataProviderRelease") public static function CGDataProviderRelease(provider:CGDataProvider):Dynamic /*Void*/;
  @:native("PMPrinterGetID") public static function PMPrinterGetID(printer:Dynamic /*OpaquePMPrinter*/):Dynamic;
  @:native("ATSFontSetEnabled") public static function ATSFontSetEnabled(iFont:Int, iOptions:Int, iEnabled:Int):Int;
  @:native("CTGetCoreTextVersion") public static function CTGetCoreTextVersion():Dynamic /*UInt*/;
  @:native("CGColorRelease") public static function CGColorRelease(color:CGColor):Dynamic /*Void*/;
  @:native("InvokeAVLWalkUPP") public static function InvokeAVLWalkUPP(tree:Dynamic /*AVLTreeStruct*/, dataPtr:Dynamic /*Dynamic*/, visitStage:Int, node:Int, level:Int, balance:Int, refCon:Dynamic /*Void*/, userUPP:Dynamic):Int;
  @:native("UTTypeCopyPreferredTagWithClass") public static function UTTypeCopyPreferredTagWithClass(inUTI:Dynamic, inTagClass:Dynamic):Dynamic;
  @:native("CFCalendarComposeAbsoluteTime") public static function CFCalendarComposeAbsoluteTime(calendar:Dynamic /*__CFCalendar*/, at:Float, componentDesc:Dynamic /*Dynamic*/):Int;
  @:native("SSLGetDatagramWriteSize") public static function SSLGetDatagramWriteSize(dtlsContext:Dynamic /*SSLContext*/, bufSize:Dynamic /*Int*/):Int;
  @:native("CGColorGetTypeID") public static function CGColorGetTypeID():Int;
  @:native("CFPropertyListCreateWithData") public static function CFPropertyListCreateWithData(allocator:Dynamic, data:Dynamic, options:Int, format:Dynamic /*CFPropertyListFormat*/, error:Dynamic /*__CFError*/):Dynamic;
  @:native("CGColorSpaceCreateCalibratedGray") public static function CGColorSpaceCreateCalibratedGray(whitePoint:Dynamic /*Dynamic*/, blackPoint:Dynamic /*Dynamic*/, gamma:Float):CGColorSpace;
  @:native("InvokeResErrUPP") public static function InvokeResErrUPP(thErr:Int, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CGDataConsumerCreate") public static function CGDataConsumerCreate(info:Dynamic /*Void*/, cbks:Dynamic /*Dynamic*/):CGDataConsumer;
  @:native("CFNetServiceUnscheduleFromRunLoop") public static function CFNetServiceUnscheduleFromRunLoop(theService:Dynamic /*__CFNetService*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("CGContextConvertRectToUserSpace") public static function CGContextConvertRectToUserSpace(c:CGContext, rect:CGRect):CGRect;
  @:native("CTFrameGetVisibleStringRange") public static function CTFrameGetVisibleStringRange(frame:Dynamic):Dynamic /*CFRange*/;
  @:native("NSStringFromCGPoint") public static function NSStringFromCGPoint(point:CGPoint):NSString;
  @:native("CFArrayGetCount") public static function CFArrayGetCount(theArray:Dynamic):Int;
  @:native("SecKeyCopyPublicKey") public static function SecKeyCopyPublicKey(key:Dynamic /*__SecKey*/):Dynamic /*__SecKey*/;
  @:native("CFBinaryHeapApplyFunction") public static function CFBinaryHeapApplyFunction(heap:Dynamic /*__CFBinaryHeap*/, applier:Dynamic, context:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("QueryUnicodeMappings") public static function QueryUnicodeMappings(iFilter:Int, iFindMapping:Dynamic, iMaxCount:Int, oActualCount:Int, oReturnedMappings:Dynamic /*UnicodeMapping*/):Int;
  @:native("CGImageGetRenderingIntent") public static function CGImageGetRenderingIntent(image:CGImage):CGColorRenderingIntent;
  @:native("CGAffineTransformRotate") public static function CGAffineTransformRotate(t:CGAffineTransform, angle:Float):CGAffineTransform;
  @:native("PBMakeFSRefUnicodeSync") public static function PBMakeFSRefUnicodeSync(paramBlock:Dynamic /*FSRefParam*/):Int;
  @:native("CSIdentityQueryCreateForUUID") public static function CSIdentityQueryCreateForUUID(allocator:Dynamic, uuid:Dynamic, authority:Dynamic /*__CSIdentityAuthority*/):Dynamic /*__CSIdentityQuery*/;
  @:native("CTFontGetGlyphsForCharacters") public static function CTFontGetGlyphsForCharacters(font:Dynamic, characters:Dynamic /*Dynamic*/, glyphs:Int, count:Int):Dynamic /*Bool*/;
  @:native("CGContextSetCMYKFillColor") public static function CGContextSetCMYKFillColor(c:CGContext, cyan:Float, magenta:Float, yellow:Float, black:Float, alpha:Float):Dynamic /*Void*/;
  @:native("CSIdentityAuthenticateUsingPassword") public static function CSIdentityAuthenticateUsingPassword(user:Dynamic /*__CSIdentity*/, password:Dynamic):Int;
  @:native("CFBinaryHeapGetCount") public static function CFBinaryHeapGetCount(heap:Dynamic /*__CFBinaryHeap*/):Int;
  @:native("CFCharacterSetIntersect") public static function CFCharacterSetIntersect(theSet:Dynamic /*__CFCharacterSet*/, theOtherSet:Dynamic):Dynamic /*Void*/;
  @:native("GetNamedResource") public static function GetNamedResource(theType:Int, name:Dynamic):Int;
  @:native("AddDurationToAbsolute") public static function AddDurationToAbsolute(duration:Int, absoluteTime:Dynamic /*UnsignedWide*/):Dynamic /*UnsignedWide*/;
  @:native("MDSchemaCopyDisplayNameForAttribute") public static function MDSchemaCopyDisplayNameForAttribute(name:Dynamic):Dynamic;
  @:native("CGRectDivide") public static function CGRectDivide(rect:CGRect, slice:CGRect, remainder:CGRect, amount:Float, edge:CGRectEdge):Dynamic /*Void*/;
  @:native("CGPDFArrayGetName") public static function CGPDFArrayGetName(array:CGPDFArray, index:Dynamic /*Int*/, value:Dynamic /*Dynamic*/):Dynamic /*Bool*/;
  @:native("OSReadSwapInt32") public static function OSReadSwapInt32(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Dynamic /*UInt*/;
  @:native("CFURLDestroyResource") public static function CFURLDestroyResource(url:Dynamic, errorCode:Int):Int;
  @:native("MDSchemaCopyMetaAttributesForAttribute") public static function MDSchemaCopyMetaAttributesForAttribute(name:Dynamic):Dynamic;
  @:native("CGPDFArrayGetString") public static function CGPDFArrayGetString(array:CGPDFArray, index:Dynamic /*Int*/, value:CGPDFString):Dynamic /*Bool*/;
  @:native("WSProtocolHandlerSetProperty") public static function WSProtocolHandlerSetProperty(ref:Dynamic /*OpaqueWSProtocolHandlerRef*/, propertyName:Dynamic, propertyValue:Dynamic):Dynamic /*Void*/;
  @:native("CFSocketCreateWithSocketSignature") public static function CFSocketCreateWithSocketSignature(allocator:Dynamic, signature:Dynamic /*Dynamic*/, callBackTypes:Int, callout:Dynamic, context:Dynamic /*Dynamic*/):Dynamic /*__CFSocket*/;
  @:native("CGPathAddQuadCurveToPoint") public static function CGPathAddQuadCurveToPoint(path:CGPath, m:Dynamic /*Dynamic*/, cpx:Float, cpy:Float, x:Float, y:Float):Dynamic /*Void*/;
  @:native("ATSFontFamilyApplyFunction") public static function ATSFontFamilyApplyFunction(iFunction:Dynamic, iRefCon:Dynamic /*Void*/):Int;
  @:native("PMGetUnadjustedPageRect") public static function PMGetUnadjustedPageRect(pageFormat:Dynamic /*OpaquePMPageFormat*/, pageRect:Dynamic /*PMRect*/):Int;
  @:native("SecRequestSharedWebCredential") public static function SecRequestSharedWebCredential(fqdn:Dynamic, account:Dynamic, completionHandler:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("TECCountAvailableSniffers") public static function TECCountAvailableSniffers(numberOfEncodings:Int):Int;
  @:native("ColorSyncIterateDeviceProfiles") public static function ColorSyncIterateDeviceProfiles(callBack:Dynamic, userInfo:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("ReplaceGestaltValue") public static function ReplaceGestaltValue(selector:Int, replacementValue:Int):Int;
  @:native("CGGradientGetTypeID") public static function CGGradientGetTypeID():Int;
  @:native("NewIconGetterUPP") public static function NewIconGetterUPP(userRoutine:Dynamic):Dynamic;
  @:native("LMGetApFontID") public static function LMGetApFontID():Int;
  @:native("UIGraphicsSetPDFContextURLForRect") public static function UIGraphicsSetPDFContextURLForRect(url:NSURL, rect:CGRect):Dynamic /*Void*/;
  @:native("HIShapeCreateXor") public static function HIShapeCreateXor(inShape1:Dynamic, inShape2:Dynamic):Dynamic;
  @:native("SecKeyGetTypeID") public static function SecKeyGetTypeID():Int;
  @:native("CoreEndianInstallFlipper") public static function CoreEndianInstallFlipper(dataDomain:Int, dataType:Int, proc:Dynamic, refcon:Dynamic /*Void*/):Int;
  @:native("CGFontGetXHeight") public static function CGFontGetXHeight(font:CGFont):Dynamic /*Int*/;
  @:native("CFWriteStreamUnscheduleFromRunLoop") public static function CFWriteStreamUnscheduleFromRunLoop(stream:Dynamic /*__CFWriteStream*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("CGFunctionRelease") public static function CGFunctionRelease(func:CGFunction):Dynamic /*Void*/;
  @:native("CFURLCreateStringByAddingPercentEscapes") public static function CFURLCreateStringByAddingPercentEscapes(allocator:Dynamic, originalString:Dynamic, charactersToLeaveUnescaped:Dynamic, legalURLCharactersToBeEscaped:Dynamic, encoding:Int):Dynamic;
  @:native("GetDebugComponentInfo") public static function GetDebugComponentInfo(itemIndex:Int, componentSignature:Int, componentName:Dynamic /*Int*/):Int;
  @:native("PMWorkflowSubmitPDFWithOptions") public static function PMWorkflowSubmitPDFWithOptions(workflowItem:Dynamic, title:Dynamic, options:Dynamic /*Dynamic*/, pdfFile:Dynamic):Int;
  @:native("PLpos") public static function PLpos(str1:Dynamic, searchStr:Dynamic):Dynamic /*Int*/;
  @:native("CFStringReplaceAll") public static function CFStringReplaceAll(theString:Dynamic /*__CFString*/, replacement:Dynamic):Dynamic /*Void*/;
  @:native("FSSetCatalogInfo") public static function FSSetCatalogInfo(ref:Dynamic /*Dynamic*/, whichInfo:Int, catalogInfo:Dynamic /*Dynamic*/):Int;
  @:native("CFSetApplyFunction") public static function CFSetApplyFunction(theSet:Dynamic, applier:Dynamic, context:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("LSSharedFileListRemoveObserver") public static function LSSharedFileListRemoveObserver(inList:Dynamic /*OpaqueLSSharedFileListRef*/, inRunloop:Dynamic /*__CFRunLoop*/, inRunloopMode:Dynamic, callback:Dynamic, context:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("CGContextConvertPointToUserSpace") public static function CGContextConvertPointToUserSpace(c:CGContext, point:CGPoint):CGPoint;
  @:native("SecTrustGetCssmResultCode") public static function SecTrustGetCssmResultCode(trust:Dynamic /*__SecTrust*/, resultCode:Int):Int;
  @:native("NewDebugComponent") public static function NewDebugComponent(componentSignature:Int, componentName:Dynamic, componentCallback:Dynamic):Int;
  @:native("SSLGetSessionState") public static function SSLGetSessionState(context:Dynamic /*SSLContext*/, state:Dynamic /*SSLSessionState*/):Int;
  @:native("DisposeAVLItemSizeUPP") public static function DisposeAVLItemSizeUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CGPDFScannerPopStream") public static function CGPDFScannerPopStream(scanner:CGPDFScanner, value:CGPDFStream):Dynamic /*Bool*/;
  @:native("CFStringReplace") public static function CFStringReplace(theString:Dynamic /*__CFString*/, range:Dynamic /*CFRange*/, replacement:Dynamic):Dynamic /*Void*/;
  @:native("SSLDisposeContext") public static function SSLDisposeContext(context:Dynamic /*SSLContext*/):Int;
  @:native("CGImageSourceCreateIncremental") public static function CGImageSourceCreateIncremental(options:Dynamic):CGImageSource;
  @:native("UCCreateTextBreakLocator") public static function UCCreateTextBreakLocator(locale:Dynamic /*OpaqueLocaleRef*/, opVariant:Int, breakTypes:Int, breakRef:Dynamic /*OpaqueTextBreakLocatorRef*/):Int;
  @:native("CGContextShowGlyphsWithAdvances") public static function CGContextShowGlyphsWithAdvances(c:CGContext, glyphs:Dynamic /*Dynamic*/, advances:Dynamic /*Dynamic*/, count:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("DisposeSpeechWordUPP") public static function DisposeSpeechWordUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CFUUIDCreateString") public static function CFUUIDCreateString(alloc:Dynamic, uuid:Dynamic):Dynamic;
  @:native("FSOpenResourceFile") public static function FSOpenResourceFile(ref:Dynamic /*Dynamic*/, forkNameLength:Int, forkName:Dynamic /*Dynamic*/, permissions:Dynamic, refNum:Int):Int;
  @:native("CGPDFPageRelease") public static function CGPDFPageRelease(page:CGPDFPage):Dynamic /*Void*/;
  @:native("WideWideDivide") public static function WideWideDivide(dividend:Dynamic /*Dynamic*/, divisor:Int, remainder:Int):Dynamic /*Dynamic*/;
  @:native("UIFloatRangeMake") public static function UIFloatRangeMake(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Dynamic /*UIFloatRange*/;
  @:native("CGContextSetTextPosition") public static function CGContextSetTextPosition(c:CGContext, x:Float, y:Float):Dynamic /*Void*/;
  @:native("CFLocaleGetIdentifier") public static function CFLocaleGetIdentifier(locale:Dynamic):Dynamic;
  @:native("CFStringDelete") public static function CFStringDelete(theString:Dynamic /*__CFString*/, range:Dynamic /*CFRange*/):Dynamic /*Void*/;
  @:native("CTFontGetGlyphWithName") public static function CTFontGetGlyphWithName(font:Dynamic, glyphName:Dynamic):Int;
  @:native("CFCharacterSetRemoveCharactersInString") public static function CFCharacterSetRemoveCharactersInString(theSet:Dynamic /*__CFCharacterSet*/, theString:Dynamic):Dynamic /*Void*/;
  @:native("NSDefaultMallocZone") public static function NSDefaultMallocZone():Dynamic /*_NSZone*/;
  @:native("UIAccessibilityIsShakeToUndoEnabled") public static function UIAccessibilityIsShakeToUndoEnabled():Dynamic /*Bool*/;
  @:native("CFWriteStreamWrite") public static function CFWriteStreamWrite(stream:Dynamic /*__CFWriteStream*/, buffer:Dynamic /*Dynamic*/, bufferLength:Int):Int;
  @:native("CSCopyUserName") public static function CSCopyUserName(useShortName:Int):Dynamic;
  @:native("FSCreateResourceFile") public static function FSCreateResourceFile(parentRef:Dynamic /*Dynamic*/, nameLength:Int, name:Dynamic /*Dynamic*/, whichInfo:Int, catalogInfo:Dynamic /*Dynamic*/, forkNameLength:Int, forkName:Dynamic /*Dynamic*/, newRef:Dynamic /*FSRef*/, newSpec:Dynamic /*FSSpec*/):Int;
  @:native("SKSummaryGetSentenceSummaryInfo") public static function SKSummaryGetSentenceSummaryInfo(summary:Dynamic /*__SKSummary*/, numSentencesInSummary:Int, outRankOrderOfSentences:Int, outSentenceIndexOfSentences:Int, outParagraphIndexOfSentences:Int):Int;
  @:native("SecPolicyCreateBasicX509") public static function SecPolicyCreateBasicX509():Dynamic /*__SecPolicy*/;
  @:native("CoreEndianFlipData") public static function CoreEndianFlipData(dataDomain:Int, dataType:Int, id:Int, data:Dynamic /*Void*/, dataLen:Int, currentlyNative:Int):Int;
  @:native("CGPathMoveToPoint") public static function CGPathMoveToPoint(path:CGPath, m:Dynamic /*Dynamic*/, x:Float, y:Float):Dynamic /*Void*/;
  @:native("CFURLCanBeDecomposed") public static function CFURLCanBeDecomposed(anURL:Dynamic):Int;
  @:native("WSMethodInvocationSetCallBack") public static function WSMethodInvocationSetCallBack(invocation:Dynamic /*OpaqueWSMethodInvocationRef*/, clientCB:Dynamic, context:Dynamic /*WSClientContext*/):Dynamic /*Void*/;
  @:native("AddAtomic8") public static function AddAtomic8(amount:Int, address:Dynamic):Dynamic;
  @:native("ColorSyncProfileContainsTag") public static function ColorSyncProfileContainsTag(prof:Dynamic, signature:Dynamic):Dynamic /*Bool*/;
  @:native("SetDebugOptionValue") public static function SetDebugOptionValue(componentSignature:Int, optionSelectorNum:Int, newOptionSetting:Int):Int;
  @:native("CFErrorCopyDescription") public static function CFErrorCopyDescription(err:Dynamic /*__CFError*/):Dynamic;
  @:native("MemError") public static function MemError():Int;
  @:native("CFStringCapitalize") public static function CFStringCapitalize(theString:Dynamic /*__CFString*/, locale:Dynamic):Dynamic /*Void*/;
  @:native("PMGetUnadjustedPaperRect") public static function PMGetUnadjustedPaperRect(pageFormat:Dynamic /*OpaquePMPageFormat*/, paperRect:Dynamic /*PMRect*/):Int;
  @:native("GetCurrentThread") public static function GetCurrentThread(currentThreadID:Int):Int;
  @:native("CFBundleCopyResourceURLsOfTypeForLocalization") public static function CFBundleCopyResourceURLsOfTypeForLocalization(bundle:Dynamic /*__CFBundle*/, resourceType:Dynamic, subDirName:Dynamic, localizationName:Dynamic):Dynamic;
  @:native("DisposePtr") public static function DisposePtr(p:Int):Dynamic /*Void*/;
  @:native("SecIdentityCopyPrivateKey") public static function SecIdentityCopyPrivateKey(identityRef:Dynamic /*__SecIdentity*/, privateKeyRef:Dynamic /*__SecKey*/):Int;
  @:native("CGDataProviderCreateDirect") public static function CGDataProviderCreateDirect(info:Dynamic /*Void*/, size:Dynamic /*Dynamic*/, callbacks:Dynamic /*Dynamic*/):CGDataProvider;
  @:native("NewEmptyHandle") public static function NewEmptyHandle():Int;
  @:native("TECConvertTextToMultipleEncodings") public static function TECConvertTextToMultipleEncodings(encodingConverter:Dynamic /*OpaqueTECObjectRef*/, inputBuffer:Dynamic, inputBufferLength:Int, actualInputLength:Int, outputBuffer:Int, outputBufferLength:Int, actualOutputLength:Int, outEncodingsBuffer:Dynamic /*TextEncodingRun*/, maxOutEncodingRuns:Int, actualOutEncodingRuns:Int):Int;
  @:native("CGRectGetMidY") public static function CGRectGetMidY(rect:CGRect):Float;
  @:native("ATSFontDeactivate") public static function ATSFontDeactivate(iContainer:Int, iRefCon:Dynamic /*Void*/, iOptions:Int):Int;
  @:native("KCFindGenericPassword") public static function KCFindGenericPassword(serviceName:Dynamic, accountName:Dynamic, maxLength:Int, passwordData:Dynamic /*Void*/, actualLength:Int, item:Dynamic /*KCItemRef*/):Int;
  @:native("PBDeleteObjectAsync") public static function PBDeleteObjectAsync(paramBlock:Dynamic /*FSRefParam*/):Dynamic /*Void*/;
  @:native("FSGetAsyncEjectStatus") public static function FSGetAsyncEjectStatus(volumeOp:Dynamic /*OpaqueFSVolumeOperation*/, status:Int, volumeOpStatus:Int, volumeRefNum:Int, dissenter:Dynamic /*Dynamic*/, clientData:Dynamic /*Dynamic*/):Int;
  @:native("NSTemporaryDirectory") public static function NSTemporaryDirectory():NSString;
  @:native("FSOpenFork") public static function FSOpenFork(ref:Dynamic /*Dynamic*/, forkNameLength:Int, forkName:Dynamic /*Dynamic*/, permissions:Dynamic, forkRefNum:Int):Int;
  @:native("SKSearchGetTypeID") public static function SKSearchGetTypeID():Int;
  @:native("CGColorGetComponents") public static function CGColorGetComponents(color:CGColor):Dynamic /*Dynamic*/;
  @:native("CFRunLoopObserverDoesRepeat") public static function CFRunLoopObserverDoesRepeat(observer:Dynamic /*__CFRunLoopObserver*/):Int;
  @:native("NewOSLAccessorUPP") public static function NewOSLAccessorUPP(userRoutine:Dynamic):Dynamic;
  @:native("SSLSetEncryptionCertificate") public static function SSLSetEncryptionCertificate(context:Dynamic /*SSLContext*/, certRefs:Dynamic):Int;
  @:native("UIGraphicsPushContext") public static function UIGraphicsPushContext(context:CGContext):Dynamic /*Void*/;
  @:native("CFBundleGetPackageInfo") public static function CFBundleGetPackageInfo(bundle:Dynamic /*__CFBundle*/, packageType:Int, packageCreator:Int):Dynamic /*Void*/;
  @:native("CGContextEOFillPath") public static function CGContextEOFillPath(c:CGContext):Dynamic /*Void*/;
  @:native("CSIdentitySetEmailAddress") public static function CSIdentitySetEmailAddress(identity:Dynamic /*__CSIdentity*/, emailAddress:Dynamic):Dynamic /*Void*/;
  @:native("CGContextSetAllowsAntialiasing") public static function CGContextSetAllowsAntialiasing(c:CGContext, allowsAntialiasing:Dynamic /*Bool*/):Dynamic /*Void*/;
  @:native("CFPropertyListCreateXMLData") public static function CFPropertyListCreateXMLData(allocator:Dynamic, propertyList:Dynamic):Dynamic;
  @:native("IdentifyFolder") public static function IdentifyFolder(vRefNum:Int, dirID:Int, foldType:Int):Int;
  @:native("CGPDFDocumentGetCropBox") public static function CGPDFDocumentGetCropBox(document:CGPDFDocument, page:Dynamic /*Int*/):CGRect;
  @:native("CGImageMetadataTagCopyPrefix") public static function CGImageMetadataTagCopyPrefix(tag:CGImageMetadataTag):Dynamic;
  @:native("SSLSetDiffieHellmanParams") public static function SSLSetDiffieHellmanParams(context:Dynamic /*SSLContext*/, dhParams:Dynamic /*Dynamic*/, dhParamsLen:Dynamic /*Int*/):Int;
  @:native("S64Negate") public static function S64Negate(value:Dynamic):Dynamic;
  @:native("PMSessionSetCurrentPMPrinter") public static function PMSessionSetCurrentPMPrinter(session:Dynamic /*OpaquePMPrintSession*/, printer:Dynamic /*OpaquePMPrinter*/):Int;
  @:native("CFBagGetValueIfPresent") public static function CFBagGetValueIfPresent(theBag:Dynamic, candidate:Dynamic /*Dynamic*/, value:Dynamic /*Dynamic*/):Int;
  @:native("CFCalendarGetTimeRangeOfUnit") public static function CFCalendarGetTimeRangeOfUnit(calendar:Dynamic /*__CFCalendar*/, unit:Dynamic /*CFCalendarUnit*/, at:Float, startp:Float, tip:Float):Int;
  @:native("LSCopyAllRoleHandlersForContentType") public static function LSCopyAllRoleHandlersForContentType(inContentType:Dynamic, inRole:Dynamic /*LSRolesMask*/):Dynamic;
  @:native("CFStringCompareWithOptions") public static function CFStringCompareWithOptions(theString1:Dynamic, theString2:Dynamic, rangeToCompare:Dynamic /*CFRange*/, compareOptions:Dynamic /*CFStringCompareFlags*/):Dynamic /*CFComparisonResult*/;
  @:native("InvokeCollectionExceptionUPP") public static function InvokeCollectionExceptionUPP(c:Dynamic /*OpaqueCollection*/, status:Int, userUPP:Dynamic):Int;
  @:native("FSGetVolumeMountInfo") public static function FSGetVolumeMountInfo(volume:Int, buffer:Int, bufferSize:Int, actualSize:Int):Int;
  @:native("SetScriptManagerVariable") public static function SetScriptManagerVariable(selector:Dynamic /*Int*/, param:Dynamic /*Int*/):Int;
  @:native("CFRunLoopStop") public static function CFRunLoopStop(rl:Dynamic /*__CFRunLoop*/):Dynamic /*Void*/;
  @:native("CFWriteStreamCopyDispatchQueue") public static function CFWriteStreamCopyDispatchQueue(stream:Dynamic /*__CFWriteStream*/):Dynamic /*Dynamic*/;
  @:native("NewComponentRoutineUPP") public static function NewComponentRoutineUPP(userRoutine:Dynamic):Dynamic;
  @:native("InvokeDebugAssertOutputHandlerUPP") public static function InvokeDebugAssertOutputHandlerUPP(componentSignature:Int, options:Int, assertionString:Dynamic /*Dynamic*/, exceptionLabelString:Dynamic /*Dynamic*/, errorString:Dynamic /*Dynamic*/, fileName:Dynamic /*Dynamic*/, lineNumber:Dynamic /*Int*/, value:Dynamic /*Void*/, outputMsg:Dynamic, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("InvokeFNSubscriptionUPP") public static function InvokeFNSubscriptionUPP(message:Int, flags:Int, refcon:Dynamic /*Void*/, subscription:Dynamic /*OpaqueFNSubscriptionRef*/, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CGPathGetCurrentPoint") public static function CGPathGetCurrentPoint(path:Dynamic):CGPoint;
  @:native("CFPlugInInstanceCreate") public static function CFPlugInInstanceCreate(allocator:Dynamic, factoryUUID:Dynamic, typeUUID:Dynamic):Dynamic /*Void*/;
  @:native("CFArrayAppendArray") public static function CFArrayAppendArray(theArray:Dynamic /*__CFArray*/, otherArray:Dynamic, otherRange:Dynamic /*CFRange*/):Dynamic /*Void*/;
  @:native("SSLSetSessionConfig") public static function SSLSetSessionConfig(context:Dynamic /*SSLContext*/, config:Dynamic):Int;
  @:native("DisposeThread") public static function DisposeThread(threadToDump:Int, threadResult:Dynamic /*Void*/, recycleThread:Int):Int;
  @:native("GetScriptManagerVariable") public static function GetScriptManagerVariable(selector:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("CGPointApplyAffineTransform") public static function CGPointApplyAffineTransform(point:CGPoint, t:CGAffineTransform):CGPoint;
  @:native("CTRubyAnnotationGetTextForPosition") public static function CTRubyAnnotationGetTextForPosition(rubyAnnotation:Dynamic, position:Dynamic /*CTRubyPosition*/):Dynamic;
  @:native("MPDeleteCriticalRegion") public static function MPDeleteCriticalRegion(criticalRegion:Dynamic /*OpaqueMPCriticalRegionID*/):Int;
  @:native("PBGetForkSizeSync") public static function PBGetForkSizeSync(paramBlock:Dynamic /*FSForkIOParam*/):Int;
  @:native("AEGetAttributeDesc") public static function AEGetAttributeDesc(theAppleEvent:Dynamic /*Dynamic*/, theAEKeyword:Int, desiredType:Int, result:Dynamic /*AEDesc*/):Int;
  @:native("CFCharacterSetCreateWithCharactersInRange") public static function CFCharacterSetCreateWithCharactersInRange(alloc:Dynamic, theRange:Dynamic /*CFRange*/):Dynamic;
  @:native("CFFileSecurityGetTypeID") public static function CFFileSecurityGetTypeID():Int;
  @:native("LMSetResLoad") public static function LMSetResLoad(value:Int):Dynamic /*Void*/;
  @:native("FSEventsPurgeEventsForDeviceUpToEventId") public static function FSEventsPurgeEventsForDeviceUpToEventId(dev:Dynamic /*Dynamic*/, eventId:Dynamic):Int;
  @:native("WideSubtract") public static function WideSubtract(target:Dynamic /*Dynamic*/, source:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("CGColorCreateCopy") public static function CGColorCreateCopy(color:CGColor):CGColor;
  @:native("CFErrorCreateWithUserInfoKeysAndValues") public static function CFErrorCreateWithUserInfoKeysAndValues(allocator:Dynamic, domain:Dynamic, code:Int, userInfoKeys:Dynamic /*Dynamic*/, userInfoValues:Dynamic /*Dynamic*/, numUserInfoValues:Int):Dynamic /*__CFError*/;
  @:native("AEStreamOpenRecord") public static function AEStreamOpenRecord(ref:Dynamic /*OpaqueAEStreamRef*/, newType:Int):Int;
  @:native("DisposeDebuggerDisposeThreadUPP") public static function DisposeDebuggerDisposeThreadUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("GetVoiceDescription") public static function GetVoiceDescription(voice:Dynamic /*Dynamic*/, info:Dynamic /*VoiceDescription*/, infoLength:Dynamic /*Int*/):Int;
  @:native("CFBitVectorContainsBit") public static function CFBitVectorContainsBit(bv:Dynamic, range:Dynamic /*CFRange*/, value:Int):Int;
  @:native("CFPreferencesGetAppIntegerValue") public static function CFPreferencesGetAppIntegerValue(key:Dynamic, applicationID:Dynamic, keyExistsAndHasValidFormat:Int):Int;
  @:native("KCGetDefaultKeychain") public static function KCGetDefaultKeychain(keychain:Dynamic /*KCRef*/):Int;
  @:native("CTRunGetGlyphsPtr") public static function CTRunGetGlyphsPtr(run:Dynamic):Dynamic /*Dynamic*/;
  @:native("NSLocationInRange") public static function NSLocationInRange(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Dynamic /*Bool*/;
  @:native("CGPDFDictionaryGetStream") public static function CGPDFDictionaryGetStream(dict:CGPDFDictionary, key:Dynamic /*Dynamic*/, value:CGPDFStream):Dynamic /*Bool*/;
  @:native("CGPDFDocumentRetain") public static function CGPDFDocumentRetain(document:CGPDFDocument):CGPDFDocument;
  @:native("CFSocketEnableCallBacks") public static function CFSocketEnableCallBacks(s:Dynamic /*__CFSocket*/, callBackTypes:Int):Dynamic /*Void*/;
  @:native("GetIndexedCollectionItem") public static function GetIndexedCollectionItem(c:Dynamic /*OpaqueCollection*/, itemIndex:Int, itemSize:Int, itemData:Dynamic /*Void*/):Int;
  @:native("PMPaperGetWidth") public static function PMPaperGetWidth(paper:Dynamic /*OpaquePMPaper*/, paperWidth:Dynamic /*Float*/):Int;
  @:native("CGDataProviderRetain") public static function CGDataProviderRetain(provider:CGDataProvider):CGDataProvider;
  @:native("AEGetRegisteredMachPort") public static function AEGetRegisteredMachPort():Dynamic /*Dynamic*/;
  @:native("CFNetServiceMonitorUnscheduleFromRunLoop") public static function CFNetServiceMonitorUnscheduleFromRunLoop(monitor:Dynamic /*__CFNetServiceMonitor*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("FSMountServerVolumeAsync") public static function FSMountServerVolumeAsync(url:Dynamic, mountDir:Dynamic, user:Dynamic, password:Dynamic, volumeOp:Dynamic /*OpaqueFSVolumeOperation*/, clientData:Dynamic /*Void*/, flags:Int, callback:Dynamic, runloop:Dynamic /*__CFRunLoop*/, runloopMode:Dynamic):Int;
  @:native("CGDataProviderCreateWithData") public static function CGDataProviderCreateWithData(info:Dynamic /*Void*/, data:Dynamic /*Dynamic*/, size:Dynamic /*Int*/, releaseData:Dynamic):CGDataProvider;
  @:native("TextToPhonemes") public static function TextToPhonemes(chan:Dynamic /*SpeechChannelRecord*/, textBuf:Dynamic /*Dynamic*/, textBytes:Dynamic /*Int*/, phonemeBuf:Int, phonemeBytes:Dynamic /*Int*/):Int;
  @:native("NSMapInsertIfAbsent") public static function NSMapInsertIfAbsent(table:NSMapTable, key:Dynamic /*Dynamic*/, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("UCConvertSecondsToCFAbsoluteTime") public static function UCConvertSecondsToCFAbsoluteTime(iSeconds:Int, oCFTime:Float):Int;
  @:native("SKSearchResultsCreateWithDocuments") public static function SKSearchResultsCreateWithDocuments(inSearchGroup:Dynamic /*__SKSearchGroup*/, inExampleDocuments:Dynamic, inMaxFoundDocuments:Int, inContext:Dynamic /*Void*/, inFilterCallBack:Dynamic):Dynamic /*__SKSearchResults*/;
  @:native("CFSetAddValue") public static function CFSetAddValue(theSet:Dynamic /*__CFSet*/, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("InvokeDebuggerDisposeThreadUPP") public static function InvokeDebuggerDisposeThreadUPP(threadDeleted:Int, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("NSAllocateMemoryPages") public static function NSAllocateMemoryPages(bytes:Int):Dynamic /*Void*/;
  @:native("CFUUIDCreateWithBytes") public static function CFUUIDCreateWithBytes(alloc:Dynamic, byte0:Int, byte1:Int, byte2:Int, byte3:Int, byte4:Int, byte5:Int, byte6:Int, byte7:Int, byte8:Int, byte9:Int, byte10:Int, byte11:Int, byte12:Int, byte13:Int, byte14:Int, byte15:Int):Dynamic;
  @:native("CGPointCreateDictionaryRepresentation") public static function CGPointCreateDictionaryRepresentation(point:CGPoint):Dynamic;
  @:native("U64Add") public static function U64Add(left:Dynamic, right:Dynamic):Dynamic;
  @:native("S64Add") public static function S64Add(left:Dynamic, right:Dynamic):Dynamic;
  @:native("AECreateDesc") public static function AECreateDesc(typeCode:Int, dataPtr:Dynamic /*Dynamic*/, dataSize:Int, result:Dynamic /*AEDesc*/):Int;
  @:native("CFReadStreamSetDispatchQueue") public static function CFReadStreamSetDispatchQueue(stream:Dynamic /*__CFReadStream*/, q:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CTLineGetPenOffsetForFlush") public static function CTLineGetPenOffsetForFlush(line:Dynamic, flushFactor:Float, flushWidth:Dynamic /*Float*/):Dynamic /*Float*/;
  @:native("CFDateFormatterCreate") public static function CFDateFormatterCreate(allocator:Dynamic, locale:Dynamic, dateStyle:Dynamic /*CFDateFormatterStyle*/, timeStyle:Dynamic /*CFDateFormatterStyle*/):Dynamic /*__CFDateFormatter*/;
  @:native("DebugAssert") public static function DebugAssert(componentSignature:Int, options:Int, assertionString:Dynamic /*Dynamic*/, exceptionLabelString:Dynamic /*Dynamic*/, errorString:Dynamic /*Dynamic*/, fileName:Dynamic /*Dynamic*/, lineNumber:Dynamic /*Int*/, value:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("CFURLCopyPassword") public static function CFURLCopyPassword(anURL:Dynamic):Dynamic;
  @:native("X2Fix") public static function X2Fix(x:Dynamic /*Float*/):Int;
  @:native("PBCreateDirectoryUnicodeSync") public static function PBCreateDirectoryUnicodeSync(paramBlock:Dynamic /*FSRefParam*/):Int;
  @:native("MPAllocate") public static function MPAllocate(size:Int):Void;
  @:native("InvokeSleepQUPP") public static function InvokeSleepQUPP(message:Dynamic /*Int*/, qRecPtr:Dynamic /*SleepQRec*/, userUPP:Dynamic):Dynamic /*Int*/;
  @:native("FSEventStreamRetain") public static function FSEventStreamRetain(streamRef:Dynamic /*__FSEventStream*/):Dynamic /*Void*/;
  @:native("KCFindNextItem") public static function KCFindNextItem(search:Dynamic /*KCSearchRef*/, item:Dynamic /*KCItemRef*/):Int;
  @:native("FSExchangeObjects") public static function FSExchangeObjects(ref:Dynamic /*Dynamic*/, destRef:Dynamic /*Dynamic*/):Int;
  @:native("CFDataDeleteBytes") public static function CFDataDeleteBytes(theData:Dynamic /*__CFData*/, range:Dynamic /*CFRange*/):Dynamic /*Void*/;
  @:native("NSTextAlignmentToCTTextAlignment") public static function NSTextAlignmentToCTTextAlignment(nsTextAlignment:NSTextAlignment):Dynamic /*CTTextAlignment*/;
  @:native("CFNetworkCopySystemProxySettings") public static function CFNetworkCopySystemProxySettings():Dynamic;
  @:native("DASessionCreate") public static function DASessionCreate(allocator:Dynamic):Dynamic /*__DASession*/;
  @:native("NewSleepQUPP") public static function NewSleepQUPP(userRoutine:Dynamic):Dynamic;
  @:native("SecAccessControlCreateWithFlags") public static function SecAccessControlCreateWithFlags(allocator:Dynamic, protection:Dynamic, flags:Dynamic /*SecAccessControlCreateFlags*/, error:Dynamic /*__CFError*/):Dynamic /*__SecAccessControl*/;
  @:native("CFDataCreate") public static function CFDataCreate(allocator:Dynamic, bytes:Dynamic /*Dynamic*/, length:Int):Dynamic;
  @:native("NSDeallocateObject") public static function NSDeallocateObject(object:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("SKIndexCopyDocumentProperties") public static function SKIndexCopyDocumentProperties(inIndex:Dynamic /*__SKIndex*/, inDocument:Dynamic):Dynamic;
  @:native("IsPointerValid") public static function IsPointerValid(p:Int):Int;
  @:native("LMSetResErr") public static function LMSetResErr(value:Int):Dynamic /*Void*/;
  @:native("LSCopyItemInfoForRef") public static function LSCopyItemInfoForRef(inItemRef:Dynamic /*Dynamic*/, inWhichInfo:Dynamic /*LSRequestedInfo*/, outItemInfo:Dynamic /*LSItemInfoRecord*/):Int;
  @:native("FSEventStreamCopyPathsBeingWatched") public static function FSEventStreamCopyPathsBeingWatched(streamRef:Dynamic):Dynamic;
  @:native("UnsignedFixedMulDiv") public static function UnsignedFixedMulDiv(value:Int, multiplier:Int, divisor:Int):Int;
  @:native("ICDeletePref") public static function ICDeletePref(inst:Dynamic /*OpaqueICInstance*/, key:Dynamic):Int;
  @:native("CGPDFContextBeginPage") public static function CGPDFContextBeginPage(context:CGContext, pageInfo:Dynamic):Dynamic /*Void*/;
  @:native("ATSFontGetTable") public static function ATSFontGetTable(iFont:Int, iTag:Int, iOffset:Int, iBufferSize:Int, ioBuffer:Dynamic /*Void*/, oSize:Int):Int;
  @:native("CGImageDestinationAddImage") public static function CGImageDestinationAddImage(idst:CGImageDestination, image:CGImage, properties:Dynamic):Dynamic /*Void*/;
  @:native("MPWaitOnQueue") public static function MPWaitOnQueue(queue:Dynamic /*OpaqueMPQueueID*/, param1:Dynamic /*Dynamic*/, param2:Dynamic /*Dynamic*/, param3:Dynamic /*Dynamic*/, timeout:Int):Int;
  @:native("ICGetConfigName") public static function ICGetConfigName(inst:Dynamic /*OpaqueICInstance*/, longname:Int, name:Dynamic /*Int*/):Int;
  @:native("TestAndClear") public static function TestAndClear(bit:Int, address:Int):Int;
  @:native("CTLineGetImageBounds") public static function CTLineGetImageBounds(line:Dynamic, context:CGContext):CGRect;
  @:native("FSSetForkPosition") public static function FSSetForkPosition(forkRefNum:Int, positionMode:Int, positionOffset:Dynamic):Int;
  @:native("PLstrpbrk") public static function PLstrpbrk(str1:Dynamic, charSet:Dynamic):Int;
  @:native("CGPatternCreate") public static function CGPatternCreate(info:Dynamic /*Void*/, bounds:CGRect, matrix:CGAffineTransform, xStep:Float, yStep:Float, tiling:CGPatternTiling, isColored:Dynamic /*Bool*/, callbacks:Dynamic /*Dynamic*/):CGPattern;
  @:native("CFCopyTypeIDDescription") public static function CFCopyTypeIDDescription(type_id:Int):Dynamic;
  @:native("PMGetCollate") public static function PMGetCollate(printSettings:Dynamic /*OpaquePMPrintSettings*/, collate:Int):Int;
  @:native("CFTimeZoneCopyKnownNames") public static function CFTimeZoneCopyKnownNames():Dynamic;
  @:native("ReplaceIndexedCollectionItem") public static function ReplaceIndexedCollectionItem(c:Dynamic /*OpaqueCollection*/, itemIndex:Int, itemSize:Int, itemData:Dynamic /*Dynamic*/):Int;
  @:native("MDQueryGetBatchingParameters") public static function MDQueryGetBatchingParameters(query:Dynamic /*__MDQuery*/):Dynamic /*MDQueryBatchingParams*/;
  @:native("CGContextPathContainsPoint") public static function CGContextPathContainsPoint(c:CGContext, point:CGPoint, mode:CGPathDrawingMode):Dynamic /*Bool*/;
  @:native("MPBlockClear") public static function MPBlockClear(address:Void, size:Int):Dynamic /*Void*/;
  @:native("CTRubyAnnotationCreateWithAttributes") public static function CTRubyAnnotationCreateWithAttributes(alignment:Dynamic /*CTRubyAlignment*/, overhang:Dynamic /*CTRubyOverhang*/, position:Dynamic /*CTRubyPosition*/, string:Dynamic, attributes:Dynamic):Dynamic;
  @:native("BitOr") public static function BitOr(value1:Dynamic /*Int*/, value2:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("AXUIElementCopyMultipleAttributeValues") public static function AXUIElementCopyMultipleAttributeValues(element:Dynamic, attributes:Dynamic, options:Dynamic /*AXCopyMultipleAttributeOptions*/, values:Dynamic):Dynamic /*AXError*/;
  @:native("CFURLCopyUserName") public static function CFURLCopyUserName(anURL:Dynamic):Dynamic;
  @:native("MPDeleteNotification") public static function MPDeleteNotification(notificationID:Dynamic /*OpaqueMPNotificationID*/):Int;
  @:native("CTRunDraw") public static function CTRunDraw(run:Dynamic, context:CGContext, range:Dynamic /*CFRange*/):Dynamic /*Void*/;
  @:native("FSSetVolumeInfo") public static function FSSetVolumeInfo(volume:Int, whichInfo:Int, info:Dynamic /*Dynamic*/):Int;
  @:native("CFNumberCreate") public static function CFNumberCreate(allocator:Dynamic, theType:Dynamic /*CFNumberType*/, valuePtr:Dynamic /*Dynamic*/):Dynamic;
  @:native("CGRectGetMinX") public static function CGRectGetMinX(rect:CGRect):Float;
  @:native("MPDeleteEvent") public static function MPDeleteEvent(event:Dynamic /*OpaqueMPEventID*/):Int;
  @:native("CFNetDiagnosticCreateWithStreams") public static function CFNetDiagnosticCreateWithStreams(alloc:Dynamic, readStream:Dynamic /*__CFReadStream*/, writeStream:Dynamic /*__CFWriteStream*/):Dynamic /*__CFNetDiagnostic*/;
  @:native("CFBundleLoadExecutable") public static function CFBundleLoadExecutable(bundle:Dynamic /*__CFBundle*/):Int;
  @:native("SecKeyRawSign") public static function SecKeyRawSign(key:Dynamic /*__SecKey*/, padding:Dynamic /*SecPadding*/, dataToSign:Dynamic /*Dynamic*/, dataToSignLen:Dynamic /*Int*/, sig:Dynamic /*UInt*/, sigLen:Dynamic /*Int*/):Int;
  @:native("FracMul") public static function FracMul(x:Int, y:Int):Int;
  @:native("CGPathAddCurveToPoint") public static function CGPathAddCurveToPoint(path:CGPath, m:Dynamic /*Dynamic*/, cp1x:Float, cp1y:Float, cp2x:Float, cp2y:Float, x:Float, y:Float):Dynamic /*Void*/;
  @:native("CGColorSpaceGetNumberOfComponents") public static function CGColorSpaceGetNumberOfComponents(space:CGColorSpace):Dynamic /*Int*/;
  @:native("CGContextAddLines") public static function CGContextAddLines(c:CGContext, points:Dynamic /*Dynamic*/, count:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("HomeResFile") public static function HomeResFile(theResource:Int):Int;
  @:native("ColorSyncDeviceCopyDeviceInfo") public static function ColorSyncDeviceCopyDeviceInfo(deviceClass:Dynamic, devID:Dynamic):Dynamic;
  @:native("BitOrAtomic16") public static function BitOrAtomic16(mask:Int, address:Int):Int;
  @:native("CFStringGetTypeID") public static function CFStringGetTypeID():Int;
  @:native("PMSetScale") public static function PMSetScale(pageFormat:Dynamic /*OpaquePMPageFormat*/, scale:Dynamic /*Float*/):Int;
  @:native("CFBundleGetValueForInfoDictionaryKey") public static function CFBundleGetValueForInfoDictionaryKey(bundle:Dynamic /*__CFBundle*/, key:Dynamic):Dynamic;
  @:native("CFMessagePortSendRequest") public static function CFMessagePortSendRequest(remote:Dynamic /*__CFMessagePort*/, msgid:Int, data:Dynamic, sendTimeout:Float, rcvTimeout:Float, replyMode:Dynamic, returnData:Dynamic):Int;
  @:native("CTFontManagerSetAutoActivationSetting") public static function CTFontManagerSetAutoActivationSetting(bundleIdentifier:Dynamic, setting:Dynamic /*CTFontManagerAutoActivationSetting*/):Dynamic /*Void*/;
  @:native("HIShapeGetTypeID") public static function HIShapeGetTypeID():Int;
  @:native("ColorSyncProfileGetDisplayTransferFormulaFromVCGT") public static function ColorSyncProfileGetDisplayTransferFormulaFromVCGT(profile:Dynamic, redMin:Dynamic /*Float*/, redMax:Dynamic /*Float*/, redGamma:Dynamic /*Float*/, greenMin:Dynamic /*Float*/, greenMax:Dynamic /*Float*/, greenGamma:Dynamic /*Float*/, blueMin:Dynamic /*Float*/, blueMax:Dynamic /*Float*/, blueGamma:Dynamic /*Float*/):Dynamic /*Bool*/;
  @:native("CTFontGetLeading") public static function CTFontGetLeading(font:Dynamic):Float;
  @:native("CFTimeZoneCopyAbbreviationDictionary") public static function CFTimeZoneCopyAbbreviationDictionary():Dynamic;
  @:native("KCNewItem") public static function KCNewItem(itemClass:Int, itemCreator:Int, length:Int, data:Dynamic /*Dynamic*/, item:Dynamic /*KCItemRef*/):Int;
  @:native("NSFullUserName") public static function NSFullUserName():NSString;
  @:native("SSLGetSupportedCiphers") public static function SSLGetSupportedCiphers(context:Dynamic /*SSLContext*/, ciphers:UInt, numCiphers:Dynamic /*Int*/):Int;
  @:native("CATransform3DIsAffine") public static function CATransform3DIsAffine(t:CATransform3D):Dynamic /*Bool*/;
  @:native("U64Multiply") public static function U64Multiply(left:Dynamic, right:Dynamic):Dynamic;
  @:native("PasteboardGetItemIdentifier") public static function PasteboardGetItemIdentifier(inPasteboard:Dynamic /*OpaquePasteboardRef*/, inIndex:Int, outItem:Void):Int;
  @:native("CTGlyphInfoGetCharacterCollection") public static function CTGlyphInfoGetCharacterCollection(glyphInfo:Dynamic):Dynamic /*CTCharacterCollection*/;
  @:native("S64Multiply") public static function S64Multiply(left:Dynamic, right:Dynamic):Dynamic;
  @:native("CFStringGetCharacterAtIndex") public static function CFStringGetCharacterAtIndex(theString:Dynamic, idx:Int):Int;
  @:native("PMCopyPageFormat") public static function PMCopyPageFormat(formatSrc:Dynamic /*OpaquePMPageFormat*/, formatDest:Dynamic /*OpaquePMPageFormat*/):Int;
  @:native("CFArrayGetTypeID") public static function CFArrayGetTypeID():Int;
  @:native("CFBitVectorCreateMutableCopy") public static function CFBitVectorCreateMutableCopy(allocator:Dynamic, capacity:Int, bv:Dynamic):Dynamic /*__CFBitVector*/;
  @:native("InvokeOSLAccessorUPP") public static function InvokeOSLAccessorUPP(desiredClass:Int, container:Dynamic /*Dynamic*/, containerClass:Int, form:Int, selectionData:Dynamic /*Dynamic*/, value:Dynamic /*AEDesc*/, accessorRefcon:Void, userUPP:Dynamic):Int;
  @:native("CGImageMetadataSetValueMatchingImageProperty") public static function CGImageMetadataSetValueMatchingImageProperty(metadata:CGImageMetadata, dictionaryName:Dynamic, propertyName:Dynamic, value:Dynamic):Dynamic /*Bool*/;
  @:native("CFBundleGetAllBundles") public static function CFBundleGetAllBundles():Dynamic;
  @:native("HIShapeCreateUnion") public static function HIShapeCreateUnion(inShape1:Dynamic, inShape2:Dynamic):Dynamic;
  @:native("FSGetForkCBInfo") public static function FSGetForkCBInfo(desiredRefNum:Int, volume:Int, iterator:Dynamic /*Int*/, actualRefNum:Int, forkInfo:Dynamic /*FSForkInfo*/, ref:Dynamic /*FSRef*/, outForkName:Dynamic /*HFSUniStr255*/):Int;
  @:native("CGPointFromString") public static function CGPointFromString(string:NSString):CGPoint;
  @:native("SSLHandshake") public static function SSLHandshake(context:Dynamic /*SSLContext*/):Int;
  @:native("PMPrintSettingsSetJobName") public static function PMPrintSettingsSetJobName(printSettings:Dynamic /*OpaquePMPrintSettings*/, name:Dynamic):Int;
  @:native("FSGetResourceForkName") public static function FSGetResourceForkName(resourceForkName:Dynamic /*HFSUniStr255*/):Int;
  @:native("CFArrayCreateMutableCopy") public static function CFArrayCreateMutableCopy(allocator:Dynamic, capacity:Int, theArray:Dynamic):Dynamic /*__CFArray*/;
  @:native("CTFontGetUnderlineThickness") public static function CTFontGetUnderlineThickness(font:Dynamic):Float;
  @:native("CGContextSetShouldSmoothFonts") public static function CGContextSetShouldSmoothFonts(c:CGContext, shouldSmoothFonts:Dynamic /*Bool*/):Dynamic /*Void*/;
  @:native("NSSwapHostLongLongToLittle") public static function NSSwapHostLongLongToLittle(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("FSFileSecurityGetOwnerUUID") public static function FSFileSecurityGetOwnerUUID(fileSec:Dynamic /*__FSFileSecurity*/, owner:Dynamic /*CFUUIDBytes*/):Int;
  @:native("CFStringGetMostCompatibleMacStringEncoding") public static function CFStringGetMostCompatibleMacStringEncoding(encoding:Int):Int;
  @:native("FSCloseFork") public static function FSCloseFork(forkRefNum:Int):Int;
  @:native("PMSetOrientation") public static function PMSetOrientation(pageFormat:Dynamic /*OpaquePMPageFormat*/, orientation:Int, lock:Int):Int;
  @:native("CGContextConcatCTM") public static function CGContextConcatCTM(c:CGContext, transform:CGAffineTransform):Dynamic /*Void*/;
  @:native("CFURLEnumeratorGetNextURL") public static function CFURLEnumeratorGetNextURL(enumerator:Dynamic, url:Dynamic, error:Dynamic /*__CFError*/):Dynamic /*CFURLEnumeratorResult*/;
  @:native("MDLabelCopyAttribute") public static function MDLabelCopyAttribute(label:Dynamic /*__MDLabel*/, name:Dynamic):Dynamic;
  @:native("PBCloseIteratorAsync") public static function PBCloseIteratorAsync(paramBlock:Dynamic /*FSCatalogBulkParam*/):Dynamic /*Void*/;
  @:native("CFCharacterSetAddCharactersInRange") public static function CFCharacterSetAddCharactersInRange(theSet:Dynamic /*__CFCharacterSet*/, theRange:Dynamic /*CFRange*/):Dynamic /*Void*/;
  @:native("ColorSyncProfileCreateLink") public static function ColorSyncProfileCreateLink(profileInfo:Dynamic, options:Dynamic):Dynamic;
  @:native("RemoveIndexedCollectionItem") public static function RemoveIndexedCollectionItem(c:Dynamic /*OpaqueCollection*/, itemIndex:Int):Int;
  @:native("CFErrorCreate") public static function CFErrorCreate(allocator:Dynamic, domain:Dynamic, code:Int, userInfo:Dynamic):Dynamic /*__CFError*/;
  @:native("NSSwapBigShortToHost") public static function NSSwapBigShortToHost(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("IOSurfaceGetPropertyMaximum") public static function IOSurfaceGetPropertyMaximum(property:Dynamic):Dynamic /*Int*/;
  @:native("UCGetCharProperty") public static function UCGetCharProperty(charPtr:Dynamic /*Dynamic*/, textLength:Int, propType:Int, propValue:Int):Int;
  @:native("PMGetPageFormatPaper") public static function PMGetPageFormatPaper(format:Dynamic /*OpaquePMPageFormat*/, paper:Dynamic /*OpaquePMPaper*/):Int;
  @:native("CFURLCopyScheme") public static function CFURLCopyScheme(anURL:Dynamic):Dynamic;
  @:native("CGImageSourceGetStatus") public static function CGImageSourceGetStatus(isrc:CGImageSource):CGImageSourceStatus;
  @:native("PMSetCopies") public static function PMSetCopies(printSettings:Dynamic /*OpaquePMPrintSettings*/, copies:Int, lock:Int):Int;
  @:native("CFCalendarGetComponentDifference") public static function CFCalendarGetComponentDifference(calendar:Dynamic /*__CFCalendar*/, startingAT:Float, resultAT:Float, options:Int, componentDesc:Dynamic /*Dynamic*/):Int;
  @:native("BitXor") public static function BitXor(value1:Dynamic /*Int*/, value2:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("CaptureComponent") public static function CaptureComponent(capturedComponent:Dynamic /*ComponentRecord*/, capturingComponent:Dynamic /*ComponentRecord*/):Dynamic /*ComponentRecord*/;
  @:native("CGImageSourceGetStatusAtIndex") public static function CGImageSourceGetStatusAtIndex(isrc:CGImageSource, index:Dynamic /*Int*/):CGImageSourceStatus;
  @:native("KCAddCallback") public static function KCAddCallback(callbackProc:Dynamic, eventMask:Int, userContext:Dynamic /*Void*/):Int;
  @:native("ReadPartialResource") public static function ReadPartialResource(theResource:Int, offset:Dynamic /*Int*/, buffer:Dynamic /*Void*/, count:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("CGContextSetStrokePattern") public static function CGContextSetStrokePattern(c:CGContext, pattern:CGPattern, components:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("AXValueGetValue") public static function AXValueGetValue(value:Dynamic, theType:Dynamic /*AXValueType*/, valuePtr:Dynamic /*Void*/):Int;
  @:native("UIGraphicsGetCurrentContext") public static function UIGraphicsGetCurrentContext():CGContext;
  @:native("NSLogPageSize") public static function NSLogPageSize():Int;
  @:native("CGColorSpaceGetColorTable") public static function CGColorSpaceGetColorTable(space:CGColorSpace, table:Dynamic /*UInt*/):Dynamic /*Void*/;
  @:native("CTRunGetTextMatrix") public static function CTRunGetTextMatrix(run:Dynamic):CGAffineTransform;
  @:native("CFBundleCopyResourcesDirectoryURL") public static function CFBundleCopyResourcesDirectoryURL(bundle:Dynamic /*__CFBundle*/):Dynamic;
  @:native("MPTaskIsPreemptive") public static function MPTaskIsPreemptive(taskID:Dynamic /*OpaqueMPTaskID*/):Int;
  @:native("SecTrustGetTypeID") public static function SecTrustGetTypeID():Int;
  @:native("CFReadStreamCopyError") public static function CFReadStreamCopyError(stream:Dynamic /*__CFReadStream*/):Dynamic /*__CFError*/;
  @:native("SKIndexSetDocumentProperties") public static function SKIndexSetDocumentProperties(inIndex:Dynamic /*__SKIndex*/, inDocument:Dynamic, inProperties:Dynamic):Dynamic /*Void*/;
  @:native("ICGetVersion") public static function ICGetVersion(inst:Dynamic /*OpaqueICInstance*/, whichVersion:Dynamic /*Int*/, version:Int):Int;
  @:native("SecTrustGetNetworkFetchAllowed") public static function SecTrustGetNetworkFetchAllowed(trust:Dynamic /*__SecTrust*/, allowFetch:Int):Int;
  @:native("CFURLCreateWithFileSystemPath") public static function CFURLCreateWithFileSystemPath(allocator:Dynamic, filePath:Dynamic, pathStyle:Dynamic /*CFURLPathStyle*/, isDirectory:Int):Dynamic;
  @:native("UCCompareCollationKeys") public static function UCCompareCollationKeys(key1Ptr:Dynamic /*Dynamic*/, key1Length:Int, key2Ptr:Dynamic /*Dynamic*/, key2Length:Int, equivalent:Int, order:Int):Int;
  @:native("CFTreeApplyFunctionToChildren") public static function CFTreeApplyFunctionToChildren(tree:Dynamic /*__CFTree*/, applier:Dynamic, context:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("UIGraphicsBeginImageContext") public static function UIGraphicsBeginImageContext(size:CGSize):Dynamic /*Void*/;
  @:native("CFFileSecurityClearProperties") public static function CFFileSecurityClearProperties(fileSec:Dynamic /*__CFFileSecurity*/, clearPropertyMask:Dynamic /*CFFileSecurityClearOptions*/):Int;
  @:native("PBUnlinkObjectAsync") public static function PBUnlinkObjectAsync(paramBlock:Dynamic /*FSRefParam*/):Dynamic /*Void*/;
  @:native("CFBagApplyFunction") public static function CFBagApplyFunction(theBag:Dynamic, applier:Dynamic, context:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("CTFontCreateWithFontDescriptorAndOptions") public static function CTFontCreateWithFontDescriptorAndOptions(descriptor:Dynamic, size:Float, matrix:Dynamic /*Dynamic*/, options:Dynamic /*CTFontOptions*/):Dynamic;
  @:native("PLstrchr") public static function PLstrchr(str1:Dynamic, ch1:Dynamic /*Int*/):Int;
  @:native("UIGraphicsBeginPDFContextToData") public static function UIGraphicsBeginPDFContextToData(data:NSMutableData, bounds:CGRect, documentInfo:NSDictionary):Dynamic /*Void*/;
  @:native("NewFSVolumeEjectUPP") public static function NewFSVolumeEjectUPP(userRoutine:Dynamic):Dynamic;
  @:native("CGContextSetLineDash") public static function CGContextSetLineDash(c:CGContext, phase:Float, lengths:Dynamic /*Dynamic*/, count:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("PMPrinterGetIndexedPrinterResolution") public static function PMPrinterGetIndexedPrinterResolution(printer:Dynamic /*OpaquePMPrinter*/, index:Int, resolutionP:Dynamic /*PMResolution*/):Int;
  @:native("CountCollectionOwners") public static function CountCollectionOwners(c:Dynamic /*OpaqueCollection*/):Int;
  @:native("CreateTextToUnicodeInfo") public static function CreateTextToUnicodeInfo(iUnicodeMapping:Dynamic, oTextToUnicodeInfo:Dynamic /*OpaqueTextToUnicodeInfo*/):Int;
  @:native("SSLGetEnabledCiphers") public static function SSLGetEnabledCiphers(context:Dynamic /*SSLContext*/, ciphers:UInt, numCiphers:Dynamic /*Int*/):Int;
  @:native("SKIndexSetMaximumBytesBeforeFlush") public static function SKIndexSetMaximumBytesBeforeFlush(inIndex:Dynamic /*__SKIndex*/, inBytesForUpdate:Int):Dynamic /*Void*/;
  @:native("MPFree") public static function MPFree(object:Void):Dynamic /*Void*/;
  @:native("PrimeTime") public static function PrimeTime(tmTaskPtr:Dynamic /*QElem*/, count:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("GetIconRefFromIconFamilyPtr") public static function GetIconRefFromIconFamilyPtr(inIconFamilyPtr:Dynamic /*Dynamic*/, inSize:Int, outIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("CGRectContainsPoint") public static function CGRectContainsPoint(rect:CGRect, point:CGPoint):Dynamic /*Bool*/;
  @:native("CFHostGetReachability") public static function CFHostGetReachability(theHost:Dynamic /*__CFHost*/, hasBeenResolved:Int):Dynamic;
  @:native("CFDataGetMutableBytePtr") public static function CFDataGetMutableBytePtr(theData:Dynamic /*__CFData*/):Int;
  @:native("RegisterComponentResourceFile") public static function RegisterComponentResourceFile(resRefNum:Int, global:Int):Int;
  @:native("PasteboardPutItemFlavor") public static function PasteboardPutItemFlavor(inPasteboard:Dynamic /*OpaquePasteboardRef*/, inItem:Void, inFlavorType:Dynamic, inData:Dynamic, inFlags:Dynamic /*PasteboardFlavorFlags*/):Int;
  @:native("TECCountMailTextEncodings") public static function TECCountMailTextEncodings(locale:Int, numberEncodings:Int):Int;
  @:native("CTFontDescriptorCreateCopyWithSymbolicTraits") public static function CTFontDescriptorCreateCopyWithSymbolicTraits(original:Dynamic, symTraitValue:Dynamic /*CTFontSymbolicTraits*/, symTraitMask:Dynamic /*CTFontSymbolicTraits*/):Dynamic;
  @:native("AEUnflattenDesc") public static function AEUnflattenDesc(buffer:Dynamic /*Dynamic*/, result:Dynamic /*AEDesc*/):Int;
  @:native("InvokeOSLMarkUPP") public static function InvokeOSLMarkUPP(dToken:Dynamic /*Dynamic*/, markToken:Dynamic /*Dynamic*/, index:Dynamic /*Int*/, userUPP:Dynamic):Int;
  @:native("LSSharedFileListItemGetID") public static function LSSharedFileListItemGetID(inItem:Dynamic /*OpaqueLSSharedFileListItemRef*/):Int;
  @:native("CGPDFDocumentGetPage") public static function CGPDFDocumentGetPage(document:CGPDFDocument, pageNumber:Dynamic /*Int*/):CGPDFPage;
  @:native("PLstrcmp") public static function PLstrcmp(str1:Dynamic, str2:Dynamic):Dynamic /*Int*/;
  @:native("SKIndexGetTypeID") public static function SKIndexGetTypeID():Int;
  @:native("DisposeAECoerceDescUPP") public static function DisposeAECoerceDescUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CGDisplayGetDisplayIDFromUUID") public static function CGDisplayGetDisplayIDFromUUID(uuid:Dynamic):Dynamic /*UInt*/;
  @:native("NSCreateHashTableWithZone") public static function NSCreateHashTableWithZone(callBacks:Dynamic /*NSHashTableCallBacks*/, capacity:Int, zone:Dynamic /*_NSZone*/):NSHashTable;
  @:native("CTFontCollectionCopyQueryDescriptors") public static function CTFontCollectionCopyQueryDescriptors(collection:Dynamic):Dynamic;
  @:native("CGFontRetain") public static function CGFontRetain(font:CGFont):CGFont;
  @:native("CGPDFScannerPopDictionary") public static function CGPDFScannerPopDictionary(scanner:CGPDFScanner, value:CGPDFDictionary):Dynamic /*Bool*/;
  @:native("SecTrustCopyCustomAnchorCertificates") public static function SecTrustCopyCustomAnchorCertificates(trust:Dynamic /*__SecTrust*/, anchors:Dynamic):Int;
  @:native("CFHTTPMessageCopySerializedMessage") public static function CFHTTPMessageCopySerializedMessage(message:Dynamic /*__CFHTTPMessage*/):Dynamic;
  @:native("CGPDFDocumentGetBleedBox") public static function CGPDFDocumentGetBleedBox(document:CGPDFDocument, page:Dynamic /*Int*/):CGRect;
  @:native("CGImageSourceGetType") public static function CGImageSourceGetType(isrc:CGImageSource):Dynamic;
  @:native("PBCreateFileAndOpenForkUnicodeAsync") public static function PBCreateFileAndOpenForkUnicodeAsync(paramBlock:Dynamic /*FSRefForkIOParam*/):Dynamic /*Void*/;
  @:native("SetThreadReadyGivenTaskRef") public static function SetThreadReadyGivenTaskRef(threadTRef:Void, threadToSet:Int):Int;
  @:native("CGShadingGetTypeID") public static function CGShadingGetTypeID():Int;
  @:native("ICMapEntriesTypeCreator") public static function ICMapEntriesTypeCreator(inst:Dynamic /*OpaqueICInstance*/, entries:Int, fType:Int, fCreator:Int, filename:Dynamic, entry:Dynamic /*ICMapEntry*/):Int;
  @:native("CVPixelFormatDescriptionCreateWithPixelFormatType") public static function CVPixelFormatDescriptionCreateWithPixelFormatType(allocator:Dynamic, pixelFormat:Int):Dynamic;
  @:native("FSRenameUnicode") public static function FSRenameUnicode(ref:Dynamic /*Dynamic*/, nameLength:Int, name:Dynamic /*Dynamic*/, textEncodingHint:Int, newRef:Dynamic /*FSRef*/):Int;
  @:native("CFBitVectorCreate") public static function CFBitVectorCreate(allocator:Dynamic, bytes:Dynamic /*Dynamic*/, numBits:Int):Dynamic;
  @:native("CGContextSetCMYKStrokeColor") public static function CGContextSetCMYKStrokeColor(c:CGContext, cyan:Float, magenta:Float, yellow:Float, black:Float, alpha:Float):Dynamic /*Void*/;
  @:native("TECCreateConverterFromPath") public static function TECCreateConverterFromPath(newEncodingConverter:Dynamic /*OpaqueTECObjectRef*/, inPath:Dynamic /*Dynamic*/, inEncodings:Int):Int;
  @:native("SKIndexCompact") public static function SKIndexCompact(inIndex:Dynamic /*__SKIndex*/):Int;
  @:native("CGGradientCreateWithColors") public static function CGGradientCreateWithColors(space:CGColorSpace, colors:Dynamic, locations:Dynamic /*Dynamic*/):CGGradient;
  @:native("NewSpeechSyncUPP") public static function NewSpeechSyncUPP(userRoutine:Dynamic):Dynamic;
  @:native("SSLCreateContext") public static function SSLCreateContext(alloc:Dynamic, protocolSide:Dynamic /*SSLProtocolSide*/, connectionType:Dynamic /*SSLConnectionType*/):Dynamic /*SSLContext*/;
  @:native("SecCertificateCreateWithData") public static function SecCertificateCreateWithData(allocator:Dynamic, data:Dynamic):Dynamic /*__SecCertificate*/;
  @:native("CGPathRelease") public static function CGPathRelease(path:Dynamic):Dynamic /*Void*/;
  @:native("PBCreateFileAndOpenForkUnicodeSync") public static function PBCreateFileAndOpenForkUnicodeSync(paramBlock:Dynamic /*FSRefForkIOParam*/):Int;
  @:native("CGRectInset") public static function CGRectInset(rect:CGRect, dx:Float, dy:Float):CGRect;
  @:native("UIRectClip") public static function UIRectClip(rect:CGRect):Dynamic /*Void*/;
  @:native("CFAllocatorSetDefault") public static function CFAllocatorSetDefault(allocator:Dynamic):Dynamic /*Void*/;
  @:native("CGContextSetTextMatrix") public static function CGContextSetTextMatrix(c:CGContext, t:CGAffineTransform):Dynamic /*Void*/;
  @:native("CGColorSpaceIsWideGamutRGB") public static function CGColorSpaceIsWideGamutRGB(_:CGColorSpace):Dynamic /*Bool*/;
  @:native("FSResolveNodeID") public static function FSResolveNodeID(volume:Int, nodeID:Int, newRef:Dynamic /*FSRef*/):Int;
  @:native("PMPrintSettingsCreateWithDataRepresentation") public static function PMPrintSettingsCreateWithDataRepresentation(data:Dynamic, printSettings:Dynamic /*OpaquePMPrintSettings*/):Int;
  @:native("MPDeleteTimer") public static function MPDeleteTimer(timerID:Dynamic /*OpaqueMPTimerID*/):Int;
  @:native("SSLGetNumberSupportedCiphers") public static function SSLGetNumberSupportedCiphers(context:Dynamic /*SSLContext*/, numCiphers:Dynamic /*Int*/):Int;
  @:native("CFNumberFormatterCreate") public static function CFNumberFormatterCreate(allocator:Dynamic, locale:Dynamic, style:Dynamic /*CFNumberFormatterStyle*/):Dynamic /*__CFNumberFormatter*/;
  @:native("UpdateSystemActivity") public static function UpdateSystemActivity(activity:Int):Int;
  @:native("CGImageCreateWithPNGDataProvider") public static function CGImageCreateWithPNGDataProvider(source:CGDataProvider, decode:Dynamic /*Dynamic*/, shouldInterpolate:Dynamic /*Bool*/, intent:CGColorRenderingIntent):CGImage;
  @:native("NewOSLCompareUPP") public static function NewOSLCompareUPP(userRoutine:Dynamic):Dynamic;
  @:native("IOSurfaceSetValues") public static function IOSurfaceSetValues(buffer:Dynamic /*__IOSurface*/, keysAndValues:Dynamic):Dynamic /*Void*/;
  @:native("PMCopyPrintSettings") public static function PMCopyPrintSettings(settingSrc:Dynamic /*OpaquePMPrintSettings*/, settingDest:Dynamic /*OpaquePMPrintSettings*/):Int;
  @:native("U64Mod") public static function U64Mod(dividend:Dynamic, divisor:Dynamic):Dynamic;
  @:native("CFNumberFormatterCreateStringWithValue") public static function CFNumberFormatterCreateStringWithValue(allocator:Dynamic, formatter:Dynamic /*__CFNumberFormatter*/, numberType:Dynamic /*CFNumberType*/, valuePtr:Dynamic /*Dynamic*/):Dynamic;
  @:native("SecKeyCreateEncryptedData") public static function SecKeyCreateEncryptedData(key:Dynamic /*__SecKey*/, algorithm:Dynamic, plaintext:Dynamic, error:Dynamic /*__CFError*/):Dynamic;
  @:native("S64Mod") public static function S64Mod(dividend:Dynamic, divisor:Dynamic):Dynamic;
  @:native("CGContextStrokeRect") public static function CGContextStrokeRect(c:CGContext, rect:CGRect):Dynamic /*Void*/;
  @:native("CFLocaleCopyPreferredLanguages") public static function CFLocaleCopyPreferredLanguages():Dynamic;
  @:native("CGFontGetGlyphBBoxes") public static function CGFontGetGlyphBBoxes(font:CGFont, glyphs:Dynamic /*Dynamic*/, count:Dynamic /*Int*/, bboxes:CGRect):Dynamic /*Bool*/;
  @:native("CFTimeZoneGetTypeID") public static function CFTimeZoneGetTypeID():Int;
  @:native("UnflattenCollectionFromHdl") public static function UnflattenCollectionFromHdl(aCollection:Dynamic /*OpaqueCollection*/, flattened:Int):Int;
  @:native("CFStringGetFileSystemRepresentation") public static function CFStringGetFileSystemRepresentation(string:Dynamic, buffer:Dynamic /*Int*/, maxBufLen:Int):Int;
  @:native("CallComponentFunctionWithStorageProcInfo") public static function CallComponentFunctionWithStorageProcInfo(storage:Int, params:Dynamic /*ComponentParameters*/, func:Dynamic, funcProcInfo:Int):Int;
  @:native("CFStringHasPrefix") public static function CFStringHasPrefix(theString:Dynamic, prefix:Dynamic):Int;
  @:native("CFStreamCreatePairWithPeerSocketSignature") public static function CFStreamCreatePairWithPeerSocketSignature(alloc:Dynamic, signature:Dynamic /*Dynamic*/, readStream:Dynamic /*__CFReadStream*/, writeStream:Dynamic /*__CFWriteStream*/):Dynamic /*Void*/;
  @:native("CFNetServiceMonitorGetTypeID") public static function CFNetServiceMonitorGetTypeID():Int;
  @:native("CGImageMetadataCreateMutable") public static function CGImageMetadataCreateMutable():CGImageMetadata;
  @:native("AEBuildAppleEvent") public static function AEBuildAppleEvent(theClass:Int, theID:Int, addressType:Int, addressData:Dynamic /*Dynamic*/, addressLength:Int, returnID:Int, transactionID:Int, result:Dynamic /*AEDesc*/, error:Dynamic /*AEBuildError*/, paramsFmt:Dynamic /*Dynamic*/):Int;
  @:native("CGRectGetMaxX") public static function CGRectGetMaxX(rect:CGRect):Float;
  @:native("HIShapeCreateCopy") public static function HIShapeCreateCopy(inShape:Dynamic):Dynamic;
  @:native("SecTrustSetAnchorCertificatesOnly") public static function SecTrustSetAnchorCertificatesOnly(trust:Dynamic /*__SecTrust*/, anchorCertificatesOnly:Int):Int;
  @:native("PMPrinterGetName") public static function PMPrinterGetName(printer:Dynamic /*OpaquePMPrinter*/):Dynamic;
  @:native("IsProcessVisible") public static function IsProcessVisible(psn:Dynamic /*Dynamic*/):Int;
  @:native("AEPutPtr") public static function AEPutPtr(theAEDescList:Dynamic /*AEDesc*/, index:Dynamic /*Int*/, typeCode:Int, dataPtr:Dynamic /*Dynamic*/, dataSize:Int):Int;
  @:native("WSMethodInvocationCopyProperty") public static function WSMethodInvocationCopyProperty(invocation:Dynamic /*OpaqueWSMethodInvocationRef*/, propertyName:Dynamic):Dynamic;
  @:native("CGRectCreateDictionaryRepresentation") public static function CGRectCreateDictionaryRepresentation(_:CGRect):Dynamic;
  @:native("SSLSetTrustedRoots") public static function SSLSetTrustedRoots(context:Dynamic /*SSLContext*/, trustedRoots:Dynamic, replaceExisting:Int):Int;
  @:native("CTFontCreateWithPlatformFont") public static function CTFontCreateWithPlatformFont(platformFont:Int, size:Float, matrix:Dynamic /*Dynamic*/, attributes:Dynamic):Dynamic;
  @:native("CFArrayCreateCopy") public static function CFArrayCreateCopy(allocator:Dynamic, theArray:Dynamic):Dynamic;
  @:native("CTGlyphInfoGetGlyphName") public static function CTGlyphInfoGetGlyphName(glyphInfo:Dynamic):Dynamic;
  @:native("ICGetMapEntry") public static function ICGetMapEntry(inst:Dynamic /*OpaqueICInstance*/, entries:Int, pos:Dynamic /*Int*/, entry:Dynamic /*ICMapEntry*/):Int;
  @:native("UIGraphicsBeginPDFContextToFile") public static function UIGraphicsBeginPDFContextToFile(path:NSString, bounds:CGRect, documentInfo:NSDictionary):Dynamic /*Bool*/;
  @:native("DADiskGetTypeID") public static function DADiskGetTypeID():Int;
  @:native("GetProcessBundleLocation") public static function GetProcessBundleLocation(psn:Dynamic /*Dynamic*/, location:Dynamic /*FSRef*/):Int;
  @:native("CSBackupIsItemExcluded") public static function CSBackupIsItemExcluded(item:Dynamic, excludeByPath:Int):Int;
  @:native("LSSharedFileListItemRemove") public static function LSSharedFileListItemRemove(inList:Dynamic /*OpaqueLSSharedFileListRef*/, inItem:Dynamic /*OpaqueLSSharedFileListItemRef*/):Int;
  @:native("CFStringCompareWithOptionsAndLocale") public static function CFStringCompareWithOptionsAndLocale(theString1:Dynamic, theString2:Dynamic, rangeToCompare:Dynamic /*CFRange*/, compareOptions:Dynamic /*CFStringCompareFlags*/, locale:Dynamic):Dynamic /*CFComparisonResult*/;
  @:native("PBAllocateForkSync") public static function PBAllocateForkSync(paramBlock:Dynamic /*FSForkIOParam*/):Int;
  @:native("ConvertFromTextToUnicode") public static function ConvertFromTextToUnicode(iTextToUnicodeInfo:Dynamic /*OpaqueTextToUnicodeInfo*/, iSourceLen:Int, iSourceStr:Dynamic, iControlFlags:Int, iOffsetCount:Int, iOffsetArray:Dynamic /*Dynamic*/, oOffsetCount:Int, oOffsetArray:Int, iOutputBufLen:Int, oSourceRead:Int, oUnicodeLen:Int, oUnicodeStr:Int):Int;
  @:native("CompareAndSwap") public static function CompareAndSwap(oldValue:Int, newValue:Int, address:Int):Int;
  @:native("SecTrustSetOCSPResponse") public static function SecTrustSetOCSPResponse(trust:Dynamic /*__SecTrust*/, responseData:Dynamic):Int;
  @:native("DisposeFMFontCallbackFilterUPP") public static function DisposeFMFontCallbackFilterUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("ColorSyncProfileCopyTagSignatures") public static function ColorSyncProfileCopyTagSignatures(prof:Dynamic):Dynamic;
  @:native("SecIdentityGetTypeID") public static function SecIdentityGetTypeID():Int;
  @:native("CFBitVectorGetFirstIndexOfBit") public static function CFBitVectorGetFirstIndexOfBit(bv:Dynamic, range:Dynamic /*CFRange*/, value:Int):Int;
  @:native("CFArrayGetValues") public static function CFArrayGetValues(theArray:Dynamic, range:Dynamic /*CFRange*/, values:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("SpeakCFString") public static function SpeakCFString(chan:Dynamic /*SpeechChannelRecord*/, aString:Dynamic, options:Dynamic):Int;
  @:native("CreateRangeDescriptor") public static function CreateRangeDescriptor(rangeStart:Dynamic /*AEDesc*/, rangeStop:Dynamic /*AEDesc*/, disposeInputs:Int, theDescriptor:Dynamic /*AEDesc*/):Int;
  @:native("DisposeOSLGetErrDescUPP") public static function DisposeOSLGetErrDescUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("SecKeyCreateWithData") public static function SecKeyCreateWithData(keyData:Dynamic, attributes:Dynamic, error:Dynamic /*__CFError*/):Dynamic /*__SecKey*/;
  @:native("CGPDFDictionaryGetBoolean") public static function CGPDFDictionaryGetBoolean(dict:CGPDFDictionary, key:Dynamic /*Dynamic*/, value:Int):Dynamic /*Bool*/;
  @:native("CTFramesetterSuggestFrameSizeWithConstraints") public static function CTFramesetterSuggestFrameSizeWithConstraints(framesetter:Dynamic, stringRange:Dynamic /*CFRange*/, frameAttributes:Dynamic, constraints:CGSize, fitRange:Dynamic /*CFRange*/):CGSize;
  @:native("MDQueryCopySortingAttributes") public static function MDQueryCopySortingAttributes(query:Dynamic /*__MDQuery*/):Dynamic;
  @:native("CGPDFContextAddDocumentMetadata") public static function CGPDFContextAddDocumentMetadata(context:CGContext, metadata:Dynamic):Dynamic /*Void*/;
  @:native("UIEdgeInsetsFromString") public static function UIEdgeInsetsFromString(string:NSString):UIEdgeInsets;
  @:native("MDItemCreate") public static function MDItemCreate(allocator:Dynamic, path:Dynamic):Dynamic /*__MDItem*/;
  @:native("CFRunLoopGetMain") public static function CFRunLoopGetMain():Dynamic /*__CFRunLoop*/;
  @:native("TECSetBasicOptions") public static function TECSetBasicOptions(encodingConverter:Dynamic /*OpaqueTECObjectRef*/, controlFlags:Int):Int;
  @:native("CFCharacterSetHasMemberInPlane") public static function CFCharacterSetHasMemberInPlane(theSet:Dynamic, thePlane:Int):Int;
  @:native("CGContextCopyPath") public static function CGContextCopyPath(c:CGContext):Dynamic;
  @:native("ColorSyncProfileCopyHeader") public static function ColorSyncProfileCopyHeader(prof:Dynamic):Dynamic;
  @:native("CFSocketUnregister") public static function CFSocketUnregister(nameServerSignature:Dynamic /*Dynamic*/, timeout:Float, name:Dynamic):Dynamic /*CFSocketError*/;
  @:native("CVPixelBufferPoolGetPixelBufferAttributes") public static function CVPixelBufferPoolGetPixelBufferAttributes(pool:Dynamic /*__CVPixelBufferPool*/):Dynamic;
  @:native("CFBagAddValue") public static function CFBagAddValue(theBag:Dynamic /*__CFBag*/, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("SecTrustCopyExceptions") public static function SecTrustCopyExceptions(trust:Dynamic /*__SecTrust*/):Dynamic;
  @:native("CFDictionaryCreate") public static function CFDictionaryCreate(allocator:Dynamic, keys:Dynamic /*Dynamic*/, values:Dynamic /*Dynamic*/, numValues:Int, keyCallBacks:Dynamic /*Dynamic*/, valueCallBacks:Dynamic /*Dynamic*/):Dynamic;
  @:native("CFFileSecurityCopyOwnerUUID") public static function CFFileSecurityCopyOwnerUUID(fileSec:Dynamic /*__CFFileSecurity*/, ownerUUID:Dynamic):Int;
  @:native("InvokeOSLCountUPP") public static function InvokeOSLCountUPP(desiredType:Int, containerClass:Int, container:Dynamic /*Dynamic*/, result:Dynamic /*Int*/, userUPP:Dynamic):Int;
  @:native("GetDebugOptionInfo") public static function GetDebugOptionInfo(itemIndex:Int, componentSignature:Int, optionSelectorNum:Int, optionName:Dynamic /*Int*/, optionSetting:Int):Int;
  @:native("CFConvertFloatSwappedToHost") public static function CFConvertFloatSwappedToHost(used:Dynamic /*Dynamic*/):Dynamic /*Float*/;
  @:native("MPExit") public static function MPExit(status:Int):Dynamic /*Void*/;
  @:native("CFBundleOpenBundleResourceMap") public static function CFBundleOpenBundleResourceMap(bundle:Dynamic /*__CFBundle*/):Int;
  @:native("GetTaggedCollectionItemInfo") public static function GetTaggedCollectionItemInfo(c:Dynamic /*OpaqueCollection*/, tag:Int, whichItem:Int, id:Int, itemIndex:Int, itemSize:Int, attributes:Int):Int;
  @:native("CFTreeInsertSibling") public static function CFTreeInsertSibling(tree:Dynamic /*__CFTree*/, newSibling:Dynamic /*__CFTree*/):Dynamic /*Void*/;
  @:native("SSLSetEnabledCiphers") public static function SSLSetEnabledCiphers(context:Dynamic /*SSLContext*/, ciphers:Dynamic /*Dynamic*/, numCiphers:Dynamic /*Int*/):Int;
  @:native("FracSin") public static function FracSin(x:Int):Int;
  @:native("ICCountMapEntries") public static function ICCountMapEntries(inst:Dynamic /*OpaqueICInstance*/, entries:Int, count:Dynamic /*Int*/):Int;
  @:native("CFStringAppendCharacters") public static function CFStringAppendCharacters(theString:Dynamic /*__CFString*/, chars:Dynamic /*Dynamic*/, numChars:Int):Dynamic /*Void*/;
  @:native("FNNotifyByPath") public static function FNNotifyByPath(path:Dynamic /*Dynamic*/, message:Int, flags:Int):Int;
  @:native("ChangeUnicodeToTextInfo") public static function ChangeUnicodeToTextInfo(ioUnicodeToTextInfo:Dynamic /*OpaqueUnicodeToTextInfo*/, iUnicodeMapping:Dynamic):Int;
  @:native("CGColorSpaceGetModel") public static function CGColorSpaceGetModel(space:CGColorSpace):CGColorSpaceModel;
  @:native("CGAffineTransformMakeRotation") public static function CGAffineTransformMakeRotation(angle:Float):CGAffineTransform;
  @:native("ATSFontGetContainerFromFileReference") public static function ATSFontGetContainerFromFileReference(iFile:Dynamic /*Dynamic*/, iContext:Int, iOptions:Int, oContainer:Int):Int;
  @:native("CGPDFArrayGetObject") public static function CGPDFArrayGetObject(array:CGPDFArray, index:Dynamic /*Int*/, value:CGPDFObject):Dynamic /*Bool*/;
  @:native("ATSFontFamilyIteratorReset") public static function ATSFontFamilyIteratorReset(iContext:Int, iFilter:Dynamic /*Dynamic*/, iRefCon:Dynamic /*Void*/, iOptions:Int, ioIterator:Dynamic /*ATSFontFamilyIterator_*/):Int;
  @:native("PMRelease") public static function PMRelease(object:Dynamic):Int;
  @:native("PMGetPageFormatExtendedData") public static function PMGetPageFormatExtendedData(pageFormat:Dynamic /*OpaquePMPageFormat*/, dataID:Int, size:Int, extendedData:Dynamic /*Void*/):Int;
  @:native("CGContextDrawLayerInRect") public static function CGContextDrawLayerInRect(context:CGContext, rect:CGRect, layer:CGLayer):Dynamic /*Void*/;
  @:native("CFDataReplaceBytes") public static function CFDataReplaceBytes(theData:Dynamic /*__CFData*/, range:Dynamic /*CFRange*/, newBytes:Dynamic /*Dynamic*/, newLength:Int):Dynamic /*Void*/;
  @:native("MPModifyNotification") public static function MPModifyNotification(notificationID:Dynamic /*OpaqueMPNotificationID*/, anID:Dynamic /*OpaqueMPOpaqueID*/, notifyParam1:Dynamic /*Void*/, notifyParam2:Dynamic /*Void*/, notifyParam3:Dynamic /*Void*/):Int;
  @:native("CFBitVectorCreateCopy") public static function CFBitVectorCreateCopy(allocator:Dynamic, bv:Dynamic):Dynamic;
  @:native("CFRunLoopRemoveObserver") public static function CFRunLoopRemoveObserver(rl:Dynamic /*__CFRunLoop*/, observer:Dynamic /*__CFRunLoopObserver*/, mode:Dynamic):Dynamic /*Void*/;
  @:native("FSFileSecurityGetOwner") public static function FSFileSecurityGetOwner(fileSec:Dynamic /*__FSFileSecurity*/, owner:Int):Int;
  @:native("AEGetDescDataSize") public static function AEGetDescDataSize(theAEDesc:Dynamic /*Dynamic*/):Int;
  @:native("PBIterateForksAsync") public static function PBIterateForksAsync(paramBlock:Dynamic /*FSForkIOParam*/):Dynamic /*Void*/;
  @:native("CGColorGetColorSpace") public static function CGColorGetColorSpace(color:CGColor):CGColorSpace;
  @:native("MDItemCopyAttribute") public static function MDItemCopyAttribute(item:Dynamic /*__MDItem*/, name:Dynamic):Dynamic;
  @:native("PMPrinterGetPaperList") public static function PMPrinterGetPaperList(printer:Dynamic /*OpaquePMPrinter*/, paperList:Dynamic):Int;
  @:native("CFCharacterSetGetPredefined") public static function CFCharacterSetGetPredefined(theSetIdentifier:Dynamic /*CFCharacterSetPredefinedSet*/):Dynamic;
  @:native("LocaleRefGetPartString") public static function LocaleRefGetPartString(locale:Dynamic /*OpaqueLocaleRef*/, partMask:Int, maxStringLen:Int, partString:Dynamic /*Int*/):Int;
  @:native("CFWriteStreamOpen") public static function CFWriteStreamOpen(stream:Dynamic /*__CFWriteStream*/):Int;
  @:native("LSCopyItemAttribute") public static function LSCopyItemAttribute(inItem:Dynamic /*Dynamic*/, inRoles:Dynamic /*LSRolesMask*/, inAttributeName:Dynamic, outValue:Dynamic):Int;
  @:native("CGContextSetAllowsFontSubpixelQuantization") public static function CGContextSetAllowsFontSubpixelQuantization(c:CGContext, allowsFontSubpixelQuantization:Dynamic /*Bool*/):Dynamic /*Void*/;
  @:native("CFURLCreateDataAndPropertiesFromResource") public static function CFURLCreateDataAndPropertiesFromResource(alloc:Dynamic, url:Dynamic, resourceData:Dynamic, properties:Dynamic, desiredProperties:Dynamic, errorCode:Int):Int;
  @:native("CFFileSecurityCreateCopy") public static function CFFileSecurityCreateCopy(allocator:Dynamic, fileSec:Dynamic /*__CFFileSecurity*/):Dynamic /*__CFFileSecurity*/;
  @:native("GetDefaultThreadStackSize") public static function GetDefaultThreadStackSize(threadStyle:Int, stackSize:Int):Int;
  @:native("DisposeAVLWalkUPP") public static function DisposeAVLWalkUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CGDataProviderGetTypeID") public static function CGDataProviderGetTypeID():Int;
  @:native("DisposeComponentMPWorkFunctionUPP") public static function DisposeComponentMPWorkFunctionUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("ICGetIndMapEntry") public static function ICGetIndMapEntry(inst:Dynamic /*OpaqueICInstance*/, entries:Int, index:Dynamic /*Int*/, pos:Dynamic /*Int*/, entry:Dynamic /*ICMapEntry*/):Int;
  @:native("NSAllMapTableKeys") public static function NSAllMapTableKeys(table:NSMapTable):NSArray;
  @:native("CFNumberFormatterCopyProperty") public static function CFNumberFormatterCopyProperty(formatter:Dynamic /*__CFNumberFormatter*/, key:Dynamic):Dynamic;
  @:native("CFURLClearResourcePropertyCacheForKey") public static function CFURLClearResourcePropertyCacheForKey(url:Dynamic, key:Dynamic):Dynamic /*Void*/;
  @:native("SetComponentInstanceError") public static function SetComponentInstanceError(aComponentInstance:Dynamic /*ComponentInstanceRecord*/, theError:Int):Dynamic /*Void*/;
  @:native("MPEnterCriticalRegion") public static function MPEnterCriticalRegion(criticalRegion:Dynamic /*OpaqueMPCriticalRegionID*/, timeout:Int):Int;
  @:native("LSCopyApplicationURLsForBundleIdentifier") public static function LSCopyApplicationURLsForBundleIdentifier(inBundleIdentifier:Dynamic, outError:Dynamic /*__CFError*/):Dynamic;
  @:native("CGFontGetFontBBox") public static function CGFontGetFontBBox(font:CGFont):CGRect;
  @:native("ExitToShell") public static function ExitToShell():Dynamic /*Void*/;
  @:native("PMSessionValidatePrintSettings") public static function PMSessionValidatePrintSettings(printSession:Dynamic /*OpaquePMPrintSession*/, printSettings:Dynamic /*OpaquePMPrintSettings*/, changed:Int):Int;
  @:native("ColorSyncProfileCreateMutableCopy") public static function ColorSyncProfileCreateMutableCopy(prof:Dynamic):Dynamic /*ColorSyncProfile*/;
  @:native("CTFontCreateWithFontDescriptor") public static function CTFontCreateWithFontDescriptor(descriptor:Dynamic, size:Float, matrix:Dynamic /*Dynamic*/):Dynamic;
  @:native("PMCreateGenericPrinter") public static function PMCreateGenericPrinter(printer:Dynamic /*OpaquePMPrinter*/):Int;
  @:native("CFURLCreateCopyAppendingPathExtension") public static function CFURLCreateCopyAppendingPathExtension(allocator:Dynamic, url:Dynamic, extension:Dynamic):Dynamic;
  @:native("MPBlockCopy") public static function MPBlockCopy(source:Void, destination:Void, size:Int):Dynamic /*Void*/;
  @:native("IOSurfaceGetID") public static function IOSurfaceGetID(buffer:Dynamic /*__IOSurface*/):UInt;
  @:native("CFAttributedStringGetAttributes") public static function CFAttributedStringGetAttributes(aStr:Dynamic, loc:Int, effectiveRange:Dynamic /*CFRange*/):Dynamic;
  @:native("DCSCopyTextDefinition") public static function DCSCopyTextDefinition(dictionary:Dynamic, textString:Dynamic, range:Dynamic /*CFRange*/):Dynamic;
  @:native("LSGetHandlerOptionsForContentType") public static function LSGetHandlerOptionsForContentType(inContentType:Dynamic):Dynamic /*LSHandlerOptions*/;
  @:native("NSDecimalNormalize") public static function NSDecimalNormalize(number1:Dynamic /*NSDecimal*/, number2:Dynamic /*NSDecimal*/, roundingMode:NSRoundingMode):NSCalculationError;
  @:native("CFHTTPMessageCopyBody") public static function CFHTTPMessageCopyBody(message:Dynamic /*__CFHTTPMessage*/):Dynamic;
  @:native("KCReleaseSearch") public static function KCReleaseSearch(search:Dynamic /*KCSearchRef*/):Int;
  @:native("CGBitmapContextGetColorSpace") public static function CGBitmapContextGetColorSpace(context:CGContext):CGColorSpace;
  @:native("CGImageMetadataCreateFromXMPData") public static function CGImageMetadataCreateFromXMPData(data:Dynamic):Dynamic;
  @:native("UIAccessibilityIsSpeakScreenEnabled") public static function UIAccessibilityIsSpeakScreenEnabled():Dynamic /*Bool*/;
  @:native("CFStringTokenizerGoToTokenAtIndex") public static function CFStringTokenizerGoToTokenAtIndex(tokenizer:Dynamic /*__CFStringTokenizer*/, index:Int):Dynamic /*CFStringTokenizerTokenType*/;
  @:native("GetComponentInstanceError") public static function GetComponentInstanceError(aComponentInstance:Dynamic /*ComponentInstanceRecord*/):Int;
  @:native("CGContextAddLineToPoint") public static function CGContextAddLineToPoint(c:CGContext, x:Float, y:Float):Dynamic /*Void*/;
  @:native("CFURLCreateFromFileSystemRepresentationRelativeToBase") public static function CFURLCreateFromFileSystemRepresentationRelativeToBase(allocator:Dynamic, buffer:Dynamic /*Dynamic*/, bufLen:Int, isDirectory:Int, baseURL:Dynamic):Dynamic;
  @:native("CFURLCreateStringByReplacingPercentEscapesUsingEncoding") public static function CFURLCreateStringByReplacingPercentEscapesUsingEncoding(allocator:Dynamic, origString:Dynamic, charsToLeaveEscaped:Dynamic, encoding:Int):Dynamic;
  @:native("PMPrinterGetLanguageInfo") public static function PMPrinterGetLanguageInfo(printer:Dynamic /*OpaquePMPrinter*/, info:Dynamic /*PMLanguageInfo*/):Int;
  @:native("UIImagePNGRepresentation") public static function UIImagePNGRepresentation(image:UIImage):NSData;
  @:native("WSProtocolHandlerSetSerializationOverride") public static function WSProtocolHandlerSetSerializationOverride(protocol:Dynamic /*OpaqueWSProtocolHandlerRef*/, objType:Int, serializationProc:Dynamic, context:Dynamic /*WSClientContext*/):Dynamic /*Void*/;
  @:native("LSGetApplicationForItem") public static function LSGetApplicationForItem(inItemRef:Dynamic /*Dynamic*/, inRoleMask:Dynamic /*LSRolesMask*/, outAppRef:Dynamic /*FSRef*/, outAppURL:Dynamic):Int;
  @:native("CGContextClipToRect") public static function CGContextClipToRect(c:CGContext, rect:CGRect):Dynamic /*Void*/;
  @:native("CGFontGetLeading") public static function CGFontGetLeading(font:CGFont):Dynamic /*Int*/;
  @:native("CFPropertyListWriteToStream") public static function CFPropertyListWriteToStream(propertyList:Dynamic, stream:Dynamic /*__CFWriteStream*/, format:Dynamic /*CFPropertyListFormat*/, errorString:Dynamic):Int;
  @:native("FSPathFileOperationCopyStatus") public static function FSPathFileOperationCopyStatus(fileOp:Dynamic /*__FSFileOperation*/, currentItem:Dynamic /*Dynamic*/, stage:Int, error:Int, statusDictionary:Dynamic, info:Dynamic /*Dynamic*/):Int;
  @:native("FSPathCopyObjectSync") public static function FSPathCopyObjectSync(sourcePath:Dynamic /*Dynamic*/, destDirPath:Dynamic /*Dynamic*/, destName:Dynamic, targetPath:Dynamic /*Dynamic*/, options:Int):Int;
  @:native("MDQuerySetSortComparator") public static function MDQuerySetSortComparator(query:Dynamic /*__MDQuery*/, comparator:Dynamic, context:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("CGPDFStringCopyTextString") public static function CGPDFStringCopyTextString(string:CGPDFString):Dynamic;
  @:native("CTLineCreateJustifiedLine") public static function CTLineCreateJustifiedLine(line:Dynamic, justificationFactor:Float, justificationWidth:Dynamic /*Float*/):Dynamic;
  @:native("KCMakeAliasFromKCRef") public static function KCMakeAliasFromKCRef(keychain:Dynamic /*KCRef*/, keychainAlias:Dynamic /*AliasRecord*/):Int;
  @:native("TranslationCreate") public static function TranslationCreate(inSourceType:Dynamic, inDestinationType:Dynamic, inTranslationFlags:Int, outTranslation:Dynamic /*OpaqueTranslationRef*/):Int;
  @:native("CFHTTPAuthenticationGetTypeID") public static function CFHTTPAuthenticationGetTypeID():Int;
  @:native("WSMethodInvocationAddSerializationOverride") public static function WSMethodInvocationAddSerializationOverride(invocation:Dynamic /*OpaqueWSMethodInvocationRef*/, objType:Int, serializationProc:Dynamic, context:Dynamic /*WSClientContext*/):Dynamic /*Void*/;
  @:native("LSCopyDisplayNameForRef") public static function LSCopyDisplayNameForRef(inRef:Dynamic /*Dynamic*/, outDisplayName:Dynamic):Int;
  @:native("CGColorSpaceCreateLab") public static function CGColorSpaceCreateLab(whitePoint:Dynamic /*Dynamic*/, blackPoint:Dynamic /*Dynamic*/, range:Dynamic /*Dynamic*/):CGColorSpace;
  @:native("CTRubyAnnotationCreate") public static function CTRubyAnnotationCreate(alignment:Dynamic /*CTRubyAlignment*/, overhang:Dynamic /*CTRubyOverhang*/, sizeFactor:Float, text:Dynamic):Dynamic;
  @:native("FSCompareFSRefs") public static function FSCompareFSRefs(ref1:Dynamic /*Dynamic*/, ref2:Dynamic /*Dynamic*/):Int;
  @:native("MPSignalSemaphore") public static function MPSignalSemaphore(semaphore:Dynamic /*OpaqueMPSemaphoreID*/):Int;
  @:native("CFPropertyListCreateData") public static function CFPropertyListCreateData(allocator:Dynamic, propertyList:Dynamic, format:Dynamic /*CFPropertyListFormat*/, options:Int, error:Dynamic /*__CFError*/):Dynamic;
  @:native("CGRectFromString") public static function CGRectFromString(string:NSString):CGRect;
  @:native("PMPrintSettingsCopyAsDictionary") public static function PMPrintSettingsCopyAsDictionary(printSettings:Dynamic /*OpaquePMPrintSettings*/, settingsDictionary:Dynamic):Int;
  @:native("CFURLCopyNetLocation") public static function CFURLCopyNetLocation(anURL:Dynamic):Dynamic;
  @:native("CFURLEnumeratorGetSourceDidChange") public static function CFURLEnumeratorGetSourceDidChange(enumerator:Dynamic):Int;
  @:native("GetFolderNameUnicode") public static function GetFolderNameUnicode(vRefNum:Int, foldType:Int, foundVRefNum:Int, name:Dynamic /*HFSUniStr255*/):Int;
  @:native("NSFreeMapTable") public static function NSFreeMapTable(table:NSMapTable):Dynamic /*Void*/;
  @:native("CGContextSetCharacterSpacing") public static function CGContextSetCharacterSpacing(c:CGContext, spacing:Float):Dynamic /*Void*/;
  @:native("CFBundleLoadExecutableAndReturnError") public static function CFBundleLoadExecutableAndReturnError(bundle:Dynamic /*__CFBundle*/, error:Dynamic /*__CFError*/):Int;
  @:native("UCTypeSelectWouldResetBuffer") public static function UCTypeSelectWouldResetBuffer(inRef:Dynamic /*OpaqueUCTypeSelectRef*/, inText:Dynamic, inEventTime:Dynamic /*Float*/):Int;
  @:native("CFNetServiceMonitorCreate") public static function CFNetServiceMonitorCreate(alloc:Dynamic, theService:Dynamic /*__CFNetService*/, clientCB:Dynamic, clientContext:Dynamic /*CFNetServiceClientContext*/):Dynamic /*__CFNetServiceMonitor*/;
  @:native("GetIndResource") public static function GetIndResource(theType:Int, itemIndex:Int):Int;
  @:native("ATSFontGetGeneration") public static function ATSFontGetGeneration(iFont:Int):Int;
  @:native("PMSessionCopyDestinationFormat") public static function PMSessionCopyDestinationFormat(printSession:Dynamic /*OpaquePMPrintSession*/, printSettings:Dynamic /*OpaquePMPrintSettings*/, destFormatP:Dynamic):Int;
  @:native("CFURLCreateFileReferenceURL") public static function CFURLCreateFileReferenceURL(allocator:Dynamic, url:Dynamic, error:Dynamic /*__CFError*/):Dynamic;
  @:native("IOSurfaceGetElementHeight") public static function IOSurfaceGetElementHeight(buffer:Dynamic /*__IOSurface*/):Dynamic /*Int*/;
  @:native("CGSizeEqualToSize") public static function CGSizeEqualToSize(size1:CGSize, size2:CGSize):Dynamic /*Bool*/;
  @:native("CFReadStreamCreateWithBytesNoCopy") public static function CFReadStreamCreateWithBytesNoCopy(alloc:Dynamic, bytes:Dynamic /*Dynamic*/, length:Int, bytesDeallocator:Dynamic):Dynamic /*__CFReadStream*/;
  @:native("NSMakeCollectable") public static function NSMakeCollectable(cf:Dynamic, used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("FSMoveObjectToTrashAsync") public static function FSMoveObjectToTrashAsync(fileOp:Dynamic /*__FSFileOperation*/, source:Dynamic /*Dynamic*/, flags:Int, callback:Dynamic, statusChangeInterval:Float, clientContext:Dynamic /*FSFileOperationClientContext*/):Int;
  @:native("LMSetTmpResLoad") public static function LMSetTmpResLoad(value:Int):Dynamic /*Void*/;
  @:native("PMSessionGetCGGraphicsContext") public static function PMSessionGetCGGraphicsContext(printSession:Dynamic /*OpaquePMPrintSession*/, context:CGContext):Int;
  @:native("AddCollectionItem") public static function AddCollectionItem(c:Dynamic /*OpaqueCollection*/, tag:Int, id:Int, itemSize:Int, itemData:Dynamic /*Dynamic*/):Int;
  @:native("CTRubyAnnotationGetAlignment") public static function CTRubyAnnotationGetAlignment(rubyAnnotation:Dynamic):Dynamic /*CTRubyAlignment*/;
  @:native("CFDateFormatterGetFormat") public static function CFDateFormatterGetFormat(formatter:Dynamic /*__CFDateFormatter*/):Dynamic;
  @:native("CVPixelBufferGetBaseAddress") public static function CVPixelBufferGetBaseAddress(pixelBuffer:Dynamic /*__CVBuffer*/):Dynamic /*Void*/;
  @:native("SetCollectionExceptionProc") public static function SetCollectionExceptionProc(c:Dynamic /*OpaqueCollection*/, exceptionProc:Dynamic):Dynamic /*Void*/;
  @:native("DisposeComponentFunctionUPP") public static function DisposeComponentFunctionUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("SKDocumentCreate") public static function SKDocumentCreate(inScheme:Dynamic, inParent:Dynamic, inName:Dynamic):Dynamic;
  @:native("PMPrinterPrintWithProvider") public static function PMPrinterPrintWithProvider(printer:Dynamic /*OpaquePMPrinter*/, settings:Dynamic /*OpaquePMPrintSettings*/, format:Dynamic /*OpaquePMPageFormat*/, mimeType:Dynamic, provider:CGDataProvider):Int;
  @:native("CFStringFindWithOptions") public static function CFStringFindWithOptions(theString:Dynamic, stringToFind:Dynamic, rangeToSearch:Dynamic /*CFRange*/, searchOptions:Dynamic /*CFStringCompareFlags*/, result:Dynamic /*CFRange*/):Int;
  @:native("CFWriteStreamSetClient") public static function CFWriteStreamSetClient(stream:Dynamic /*__CFWriteStream*/, streamEvents:Int, clientCB:Dynamic, clientContext:Dynamic /*CFStreamClientContext*/):Int;
  @:native("GetTextEncodingBase") public static function GetTextEncodingBase(encoding:Int):Int;
  @:native("FSResolveAliasFileWithMountFlags") public static function FSResolveAliasFileWithMountFlags(theRef:Dynamic /*FSRef*/, resolveAliasChains:Int, targetIsFolder:Int, wasAliased:Int, mountFlags:Dynamic /*Int*/):Int;
  @:native("CGPDFOperatorTableSetCallback") public static function CGPDFOperatorTableSetCallback(table:CGPDFOperatorTable, name:Dynamic /*Dynamic*/, callback:Dynamic):Dynamic /*Void*/;
  @:native("NewSpeechWordUPP") public static function NewSpeechWordUPP(userRoutine:Dynamic):Dynamic;
  @:native("DisposeFSVolumeMountUPP") public static function DisposeFSVolumeMountUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("MDSchemaCopyAttributesForContentType") public static function MDSchemaCopyAttributesForContentType(contentTypeUTI:Dynamic):Dynamic;
  @:native("CTFontCopyVariation") public static function CTFontCopyVariation(font:Dynamic):Dynamic;
  @:native("UIAccessibilityIsMonoAudioEnabled") public static function UIAccessibilityIsMonoAudioEnabled():Dynamic /*Bool*/;
  @:native("CFBundleGetVersionNumber") public static function CFBundleGetVersionNumber(bundle:Dynamic /*__CFBundle*/):Int;
  @:native("CFWriteStreamCanAcceptBytes") public static function CFWriteStreamCanAcceptBytes(stream:Dynamic /*__CFWriteStream*/):Int;
  @:native("CFURLSetResourcePropertiesForKeys") public static function CFURLSetResourcePropertiesForKeys(url:Dynamic, keyedPropertyValues:Dynamic, error:Dynamic /*__CFError*/):Int;
  @:native("AERemoveObjectAccessor") public static function AERemoveObjectAccessor(desiredClass:Int, containerType:Int, theAccessor:Dynamic, isSysHandler:Int):Int;
  @:native("NewFMFontCallbackFilterUPP") public static function NewFMFontCallbackFilterUPP(userRoutine:Dynamic):Dynamic;
  @:native("ICLaunchURL") public static function ICLaunchURL(inst:Dynamic /*OpaqueICInstance*/, hint:Dynamic, data:Dynamic /*Dynamic*/, len:Dynamic /*Int*/, selStart:Dynamic /*Int*/, selEnd:Dynamic /*Int*/):Int;
  @:native("CFFileDescriptorGetContext") public static function CFFileDescriptorGetContext(f:Dynamic /*__CFFileDescriptor*/, context:Dynamic /*CFFileDescriptorContext*/):Dynamic /*Void*/;
  @:native("ColorSyncTransformSetProperty") public static function ColorSyncTransformSetProperty(transform:Dynamic /*ColorSyncTransform*/, key:Dynamic, property:Dynamic):Dynamic /*Void*/;
  @:native("InvokeComponentMPWorkFunctionUPP") public static function InvokeComponentMPWorkFunctionUPP(globalRefCon:Dynamic /*Void*/, header:Dynamic /*ComponentMPWorkFunctionHeaderRecord*/, userUPP:Dynamic):Int;
  @:native("GetCollectionExceptionProc") public static function GetCollectionExceptionProc(c:Dynamic /*OpaqueCollection*/):Dynamic;
  @:native("SInt64ToUInt64") public static function SInt64ToUInt64(value:Dynamic):Dynamic;
  @:native("CGContextSetRGBStrokeColor") public static function CGContextSetRGBStrokeColor(c:CGContext, red:Float, green:Float, blue:Float, alpha:Float):Dynamic /*Void*/;
  @:native("CFBundleCopyLocalizedString") public static function CFBundleCopyLocalizedString(bundle:Dynamic /*__CFBundle*/, key:Dynamic, value:Dynamic, tableName:Dynamic):Dynamic;
  @:native("SSLGetAllowsAnyRoot") public static function SSLGetAllowsAnyRoot(context:Dynamic /*SSLContext*/, anyRoot:Int):Int;
  @:native("DisposeSpeechErrorUPP") public static function DisposeSpeechErrorUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CGPathCreateCopyByDashingPath") public static function CGPathCreateCopyByDashingPath(path:Dynamic, transform:Dynamic /*Dynamic*/, phase:Float, lengths:Dynamic /*Dynamic*/, count:Dynamic /*Int*/):Dynamic;
  @:native("CFStringTokenizerCopyBestStringLanguage") public static function CFStringTokenizerCopyBestStringLanguage(string:Dynamic, range:Dynamic /*CFRange*/):Dynamic;
  @:native("AEPutParamDesc") public static function AEPutParamDesc(theAppleEvent:Dynamic /*AEDesc*/, theAEKeyword:Int, theAEDesc:Dynamic /*Dynamic*/):Int;
  @:native("CFSocketRegisterValue") public static function CFSocketRegisterValue(nameServerSignature:Dynamic /*Dynamic*/, timeout:Float, name:Dynamic, value:Dynamic):Dynamic /*CFSocketError*/;
  @:native("U64Eor") public static function U64Eor(left:Dynamic, right:Dynamic):Int;
  @:native("NewAECoerceDescUPP") public static function NewAECoerceDescUPP(userRoutine:Dynamic):Dynamic;
  @:native("CFNetDiagnosticDiagnoseProblemInteractively") public static function CFNetDiagnosticDiagnoseProblemInteractively(details:Dynamic /*__CFNetDiagnostic*/):Int;
  @:native("S64Eor") public static function S64Eor(left:Dynamic, right:Dynamic):Int;
  @:native("ATSFontActivateFromMemory") public static function ATSFontActivateFromMemory(iData:Void, iLength:Int, iContext:Int, iFormat:Int, iReserved:Dynamic /*Void*/, iOptions:Int, oContainer:Int):Int;
  @:native("AEDisposeDesc") public static function AEDisposeDesc(theAEDesc:Dynamic /*AEDesc*/):Int;
  @:native("ICGetDefaultPref") public static function ICGetDefaultPref(inst:Dynamic /*OpaqueICInstance*/, key:Dynamic, prefH:Int):Int;
  @:native("ResolveComponentAlias") public static function ResolveComponentAlias(aComponent:Dynamic /*ComponentRecord*/):Dynamic /*ComponentRecord*/;
  @:native("FSResolveAliasWithMountFlags") public static function FSResolveAliasWithMountFlags(fromFile:Dynamic /*Dynamic*/, inAlias:Dynamic /*AliasRecord*/, target:Dynamic /*FSRef*/, wasChanged:Int, mountFlags:Dynamic /*Int*/):Int;
  @:native("MPCauseNotification") public static function MPCauseNotification(notificationID:Dynamic /*OpaqueMPNotificationID*/):Int;
  @:native("FSEventStreamGetLatestEventId") public static function FSEventStreamGetLatestEventId(streamRef:Dynamic):Dynamic;
  @:native("Debugger") public static function Debugger():Dynamic /*Void*/;
  @:native("TranslationPerformForData") public static function TranslationPerformForData(inTranslation:Dynamic /*OpaqueTranslationRef*/, inSourceData:Dynamic, outDestinationData:Dynamic):Int;
  @:native("CSDiskSpaceStartRecovery") public static function CSDiskSpaceStartRecovery(volumeURL:Dynamic, bytesNeeded:Dynamic, options:Int, outOperationUUID:Dynamic, callbackQueue:Dynamic /*Dynamic*/, callback:Dynamic):Dynamic /*Void*/;
  @:native("CFFTPCreateParsedResourceListing") public static function CFFTPCreateParsedResourceListing(alloc:Dynamic, buffer:Dynamic /*Dynamic*/, bufferLength:Int, parsed:Dynamic):Int;
  @:native("CGContextShowTextAtPoint") public static function CGContextShowTextAtPoint(c:CGContext, x:Float, y:Float, string:Dynamic /*Dynamic*/, length:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("CFBundleCreateBundlesFromDirectory") public static function CFBundleCreateBundlesFromDirectory(allocator:Dynamic, directoryURL:Dynamic, bundleType:Dynamic):Dynamic;
  @:native("CFAllocatorAllocate") public static function CFAllocatorAllocate(allocator:Dynamic, size:Int, hint:Int):Dynamic /*Void*/;
  @:native("PMSessionSetDestination") public static function PMSessionSetDestination(printSession:Dynamic /*OpaquePMPrintSession*/, printSettings:Dynamic /*OpaquePMPrintSettings*/, destType:Int, destFormat:Dynamic, destLocation:Dynamic):Int;
  @:native("CFStringCreateWithCharacters") public static function CFStringCreateWithCharacters(alloc:Dynamic, chars:Dynamic /*Dynamic*/, numChars:Int):Dynamic;
  @:native("MDLabelDelete") public static function MDLabelDelete(label:Dynamic /*__MDLabel*/):Int;
  @:native("CTFontGetAscent") public static function CTFontGetAscent(font:Dynamic):Float;
  @:native("CFStringTokenizerGetCurrentTokenRange") public static function CFStringTokenizerGetCurrentTokenRange(tokenizer:Dynamic /*__CFStringTokenizer*/):Dynamic /*CFRange*/;
  @:native("CTFontManagerRegisterFontsForURL") public static function CTFontManagerRegisterFontsForURL(fontURL:Dynamic, scope:Dynamic /*CTFontManagerScope*/, error:Dynamic /*__CFError*/):Dynamic /*Bool*/;
  @:native("GetCPUSpeed") public static function GetCPUSpeed():Dynamic /*Int*/;
  @:native("MPSetTaskWeight") public static function MPSetTaskWeight(task:Dynamic /*OpaqueMPTaskID*/, weight:Int):Int;
  @:native("WSMethodInvocationSetParameters") public static function WSMethodInvocationSetParameters(invocation:Dynamic /*OpaqueWSMethodInvocationRef*/, parameters:Dynamic, parameterOrder:Dynamic):Dynamic /*Void*/;
  @:native("TECClearSnifferContextInfo") public static function TECClearSnifferContextInfo(encodingSniffer:Dynamic /*OpaqueTECSnifferObjectRef*/):Int;
  @:native("MDQuerySetSortOrder") public static function MDQuerySetSortOrder(query:Dynamic /*__MDQuery*/, sortingAttrs:Dynamic):Int;
  @:native("CTLineGetBoundsWithOptions") public static function CTLineGetBoundsWithOptions(line:Dynamic, options:Dynamic /*CTLineBoundsOptions*/):CGRect;
  @:native("CFRunLoopSourceIsValid") public static function CFRunLoopSourceIsValid(source:Dynamic /*__CFRunLoopSource*/):Int;
  @:native("NSRoundDownToMultipleOfPageSize") public static function NSRoundDownToMultipleOfPageSize(bytes:Int):Int;
  @:native("NSHomeDirectory") public static function NSHomeDirectory():NSString;
  @:native("LMSetBootDrive") public static function LMSetBootDrive(value:Int):Dynamic /*Void*/;
  @:native("CFReadStreamSetClient") public static function CFReadStreamSetClient(stream:Dynamic /*__CFReadStream*/, streamEvents:Int, clientCB:Dynamic, clientContext:Dynamic /*CFStreamClientContext*/):Int;
  @:native("CFSocketStreamSOCKSGetError") public static function CFSocketStreamSOCKSGetError(used:Dynamic /*Dynamic*/):Int;
  @:native("CTFontGetBoundingRectsForGlyphs") public static function CTFontGetBoundingRectsForGlyphs(font:Dynamic, orientation:Dynamic /*CTFontOrientation*/, glyphs:Dynamic /*Dynamic*/, boundingRects:CGRect, count:Int):CGRect;
  @:native("CFArrayGetLastIndexOfValue") public static function CFArrayGetLastIndexOfValue(theArray:Dynamic, range:Dynamic /*CFRange*/, value:Dynamic /*Dynamic*/):Int;
  @:native("CFMessagePortGetTypeID") public static function CFMessagePortGetTypeID():Int;
  @:native("CTFontManagerIsSupportedFont") public static function CTFontManagerIsSupportedFont(fontURL:Dynamic):Dynamic /*Bool*/;
  @:native("CFFileDescriptorGetTypeID") public static function CFFileDescriptorGetTypeID():Int;
  @:native("InvokeAECoerceDescUPP") public static function InvokeAECoerceDescUPP(fromDesc:Dynamic /*Dynamic*/, toType:Int, handlerRefcon:Void, toDesc:Dynamic /*AEDesc*/, userUPP:Dynamic):Int;
  @:native("CTFontCopyFeatureSettings") public static function CTFontCopyFeatureSettings(font:Dynamic):Dynamic;
  @:native("CFAttributedStringCreateMutableCopy") public static function CFAttributedStringCreateMutableCopy(alloc:Dynamic, maxLength:Int, aStr:Dynamic):Dynamic /*__CFAttributedString*/;
  @:native("Get1IndType") public static function Get1IndType(theType:Int, itemIndex:Int):Dynamic /*Void*/;
  @:native("CFPropertyListCreateFromXMLData") public static function CFPropertyListCreateFromXMLData(allocator:Dynamic, xmlData:Dynamic, mutabilityOption:Int, errorString:Dynamic):Dynamic;
  @:native("CGColorCreateCopyWithAlpha") public static function CGColorCreateCopyWithAlpha(color:CGColor, alpha:Float):CGColor;
  @:native("CFRelease") public static function CFRelease(cf:Dynamic):Dynamic /*Void*/;
  @:native("NSSwapLittleLongLongToHost") public static function NSSwapLittleLongLongToHost(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("CGFunctionRetain") public static function CGFunctionRetain(func:CGFunction):CGFunction;
  @:native("CGImageSourceCopyMetadataAtIndex") public static function CGImageSourceCopyMetadataAtIndex(isrc:CGImageSource, index:Dynamic /*Int*/, options:Dynamic):Dynamic;
  @:native("LSGetExtensionInfo") public static function LSGetExtensionInfo(inNameLen:Int, inNameBuffer:Dynamic /*Dynamic*/, outExtStartIndex:Int):Int;
  @:native("CFBitVectorSetBitAtIndex") public static function CFBitVectorSetBitAtIndex(bv:Dynamic /*__CFBitVector*/, idx:Int, value:Int):Dynamic /*Void*/;
  @:native("CFCalendarGetRangeOfUnit") public static function CFCalendarGetRangeOfUnit(calendar:Dynamic /*__CFCalendar*/, smallerUnit:Dynamic /*CFCalendarUnit*/, biggerUnit:Dynamic /*CFCalendarUnit*/, at:Float):Dynamic /*CFRange*/;
  @:native("CTFontCopyName") public static function CTFontCopyName(font:Dynamic, nameKey:Dynamic):Dynamic;
  @:native("SysBreakStr") public static function SysBreakStr(debuggerMsg:Dynamic):Dynamic /*Void*/;
  @:native("ResetUnicodeToTextRunInfo") public static function ResetUnicodeToTextRunInfo(ioUnicodeToTextRunInfo:Dynamic /*OpaqueUnicodeToTextRunInfo*/):Int;
  @:native("CountCollectionTags") public static function CountCollectionTags(c:Dynamic /*OpaqueCollection*/):Int;
  @:native("MDItemCopyAttributes") public static function MDItemCopyAttributes(item:Dynamic /*__MDItem*/, names:Dynamic):Dynamic;
  @:native("PMPrinterCopyState") public static function PMPrinterCopyState(printer:Dynamic /*OpaquePMPrinter*/, stateDict:Dynamic):Int;
  @:native("UIRectFill") public static function UIRectFill(rect:CGRect):Dynamic /*Void*/;
  @:native("CFPlugInInstanceGetInterfaceFunctionTable") public static function CFPlugInInstanceGetInterfaceFunctionTable(instance:Dynamic /*__CFPlugInInstance*/, interfaceName:Dynamic, ftbl:Dynamic /*Dynamic*/):Int;
  @:native("CGSizeCreateDictionaryRepresentation") public static function CGSizeCreateDictionaryRepresentation(size:CGSize):Dynamic;
  @:native("MDSchemaCopyAllAttributes") public static function MDSchemaCopyAllAttributes():Dynamic;
  @:native("CVImageBufferGetEncodedSize") public static function CVImageBufferGetEncodedSize(imageBuffer:Dynamic /*__CVBuffer*/):CGSize;
  @:native("CGImageGetHeight") public static function CGImageGetHeight(image:CGImage):Dynamic /*Int*/;
  @:native("CTFontCollectionSetExclusionDescriptors") public static function CTFontCollectionSetExclusionDescriptors(collection:Dynamic /*__CTFontCollection*/, descriptors:Dynamic):Dynamic /*Void*/;
  @:native("CFBitVectorGetLastIndexOfBit") public static function CFBitVectorGetLastIndexOfBit(bv:Dynamic, range:Dynamic /*CFRange*/, value:Int):Int;
  @:native("CFURLCopyResourceSpecifier") public static function CFURLCopyResourceSpecifier(anURL:Dynamic):Dynamic;
  @:native("CFStringSetExternalCharactersNoCopy") public static function CFStringSetExternalCharactersNoCopy(theString:Dynamic /*__CFString*/, chars:Int, length:Int, capacity:Int):Dynamic /*Void*/;
  @:native("CFNumberGetValue") public static function CFNumberGetValue(number:Dynamic, theType:Dynamic /*CFNumberType*/, valuePtr:Dynamic /*Void*/):Int;
  @:native("DADiskCopyWholeDisk") public static function DADiskCopyWholeDisk(disk:Dynamic /*__DADisk*/):Dynamic /*__DADisk*/;
  @:native("ShowHideProcess") public static function ShowHideProcess(psn:Dynamic /*Dynamic*/, visible:Int):Int;
  @:native("CFStringGetNameOfEncoding") public static function CFStringGetNameOfEncoding(encoding:Int):Dynamic;
  @:native("CGFontCreatePostScriptEncoding") public static function CGFontCreatePostScriptEncoding(font:CGFont, encoding:Dynamic /*Dynamic*/):Dynamic;
  @:native("UIImageJPEGRepresentation") public static function UIImageJPEGRepresentation(image:UIImage, compressionQuality:Float):NSData;
  @:native("CFRunLoopTimerGetContext") public static function CFRunLoopTimerGetContext(timer:Dynamic /*__CFRunLoopTimer*/, context:Dynamic /*CFRunLoopTimerContext*/):Dynamic /*Void*/;
  @:native("UIGraphicsBeginPDFPage") public static function UIGraphicsBeginPDFPage():Dynamic /*Void*/;
  @:native("UCConvertCFAbsoluteTimeToSeconds") public static function UCConvertCFAbsoluteTimeToSeconds(iCFTime:Float, oSeconds:Int):Int;
  @:native("FNNotifyAll") public static function FNNotifyAll(message:Int, flags:Int):Int;
  @:native("CSIdentityCreateGroupMembershipQuery") public static function CSIdentityCreateGroupMembershipQuery(allocator:Dynamic, group:Dynamic /*__CSIdentity*/):Dynamic /*__CSIdentityQuery*/;
  @:native("CFSetGetValue") public static function CFSetGetValue(theSet:Dynamic, value:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("NSSetZoneName") public static function NSSetZoneName(zone:Dynamic /*_NSZone*/, name:NSString):Dynamic /*Void*/;
  @:native("CGDataConsumerGetTypeID") public static function CGDataConsumerGetTypeID():Int;
  @:native("CreateUnicodeToTextRunInfoByEncoding") public static function CreateUnicodeToTextRunInfoByEncoding(iNumberOfEncodings:Int, iEncodings:Dynamic /*Dynamic*/, oUnicodeToTextInfo:Dynamic /*OpaqueUnicodeToTextRunInfo*/):Int;
  @:native("SKIndexGetDocumentID") public static function SKIndexGetDocumentID(inIndex:Dynamic /*__SKIndex*/, inDocument:Dynamic):Int;
  @:native("CFPreferencesCopyValue") public static function CFPreferencesCopyValue(key:Dynamic, applicationID:Dynamic, userName:Dynamic, hostName:Dynamic):Dynamic;
  @:native("SKIndexRemoveDocument") public static function SKIndexRemoveDocument(inIndex:Dynamic /*__SKIndex*/, inDocument:Dynamic):Int;
  @:native("CGImageMetadataSetTagWithPath") public static function CGImageMetadataSetTagWithPath(metadata:CGImageMetadata, parent:CGImageMetadataTag, path:Dynamic, tag:CGImageMetadataTag):Dynamic /*Bool*/;
  @:native("NewComponentMPWorkFunctionUPP") public static function NewComponentMPWorkFunctionUPP(userRoutine:Dynamic):Dynamic;
  @:native("KCGetKeychain") public static function KCGetKeychain(item:Dynamic /*KCItemRef*/, keychain:Dynamic /*KCRef*/):Int;
  @:native("CFDictionaryAddValue") public static function CFDictionaryAddValue(theDict:Dynamic /*__CFDictionary*/, key:Dynamic /*Dynamic*/, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("HandToHand") public static function HandToHand(theHndl:Int):Int;
  @:native("CFBitVectorGetTypeID") public static function CFBitVectorGetTypeID():Int;
  @:native("NewOSLCountUPP") public static function NewOSLCountUPP(userRoutine:Dynamic):Dynamic;
  @:native("CGColorCreateGenericGray") public static function CGColorCreateGenericGray(gray:Float, alpha:Float):CGColor;
  @:native("U64Not") public static function U64Not(value:Dynamic):Int;
  @:native("CFNetServiceGetTypeID") public static function CFNetServiceGetTypeID():Int;
  @:native("CTFontCopyDisplayName") public static function CTFontCopyDisplayName(font:Dynamic):Dynamic;
  @:native("CGAffineTransformInvert") public static function CGAffineTransformInvert(t:CGAffineTransform):CGAffineTransform;
  @:native("CGContextClipToRects") public static function CGContextClipToRects(c:CGContext, rects:Dynamic /*Dynamic*/, count:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("SecTrustCopyPublicKey") public static function SecTrustCopyPublicKey(trust:Dynamic /*__SecTrust*/):Dynamic /*__SecKey*/;
  @:native("S64Not") public static function S64Not(value:Dynamic):Int;
  @:native("FSAllocateFork") public static function FSAllocateFork(forkRefNum:Int, flags:Int, positionMode:Int, positionOffset:Dynamic, requestCount:Dynamic, actualCount:Dynamic):Int;
  @:native("PMPrinterGetOutputResolution") public static function PMPrinterGetOutputResolution(printer:Dynamic /*OpaquePMPrinter*/, printSettings:Dynamic /*OpaquePMPrintSettings*/, resolutionP:Dynamic /*PMResolution*/):Int;
  @:native("CGFontCreateWithPlatformFont") public static function CGFontCreateWithPlatformFont(platformFontReference:Dynamic /*Void*/):CGFont;
  @:native("BitOrAtomic") public static function BitOrAtomic(mask:Int, address:Int):Int;
  @:native("FSEventStreamSetExclusionPaths") public static function FSEventStreamSetExclusionPaths(streamRef:Dynamic /*__FSEventStream*/, pathsToExclude:Dynamic):Int;
  @:native("NanosecondsToDuration") public static function NanosecondsToDuration(theNanoseconds:Dynamic /*UnsignedWide*/):Int;
  @:native("ReallocateHandle") public static function ReallocateHandle(h:Int, byteCount:Int):Dynamic /*Void*/;
  @:native("LSCopyKindStringForTypeInfo") public static function LSCopyKindStringForTypeInfo(inType:Int, inCreator:Int, inExtension:Dynamic, outKindString:Dynamic):Int;
  @:native("CTTextTabGetAlignment") public static function CTTextTabGetAlignment(tab:Dynamic):Dynamic /*CTTextAlignment*/;
  @:native("CVMetalTextureGetTexture") public static function CVMetalTextureGetTexture(image:Dynamic /*__CVBuffer*/):Dynamic /*MTLTexture*/;
  @:native("CGColorConversionInfoCreateFromList") public static function CGColorConversionInfoCreateFromList(options:Dynamic, _:CGColorSpace, _:CGColorConversionInfoTransformType, _:CGColorRenderingIntent):Dynamic;
  @:native("CFTreeGetChildCount") public static function CFTreeGetChildCount(tree:Dynamic /*__CFTree*/):Int;
  @:native("CTLineGetOffsetForStringIndex") public static function CTLineGetOffsetForStringIndex(line:Dynamic, charIndex:Int, secondaryOffset:Float):Float;
  @:native("CFStreamCreatePairWithSocketToHost") public static function CFStreamCreatePairWithSocketToHost(alloc:Dynamic, host:Dynamic, port:Int, readStream:Dynamic /*__CFReadStream*/, writeStream:Dynamic /*__CFWriteStream*/):Dynamic /*Void*/;
  @:native("UAZoomChangeFocus") public static function UAZoomChangeFocus(inRect:Dynamic /*Dynamic*/, inHighlightRect:Dynamic /*Dynamic*/, inType:Int):Int;
  @:native("CGImageMetadataRegisterNamespaceForPrefix") public static function CGImageMetadataRegisterNamespaceForPrefix(metadata:CGImageMetadata, xmlns:Dynamic, prefix:Dynamic, err:Dynamic /*__CFError*/):Dynamic /*Bool*/;
  @:native("SKSummaryGetSentenceCount") public static function SKSummaryGetSentenceCount(summary:Dynamic /*__SKSummary*/):Int;
  @:native("FSVolumeMount") public static function FSVolumeMount(buffer:Int, mountedVolume:Int):Int;
  @:native("SecCertificateGetTypeID") public static function SecCertificateGetTypeID():Int;
  @:native("CFBundleOpenBundleResourceFiles") public static function CFBundleOpenBundleResourceFiles(bundle:Dynamic /*__CFBundle*/, refNum:Int, localizedRefNum:Int):Int;
  @:native("FSGetHFSUniStrFromString") public static function FSGetHFSUniStrFromString(theString:Dynamic, uniStr:Dynamic /*HFSUniStr255*/):Int;
  @:native("DAApprovalSessionCreate") public static function DAApprovalSessionCreate(allocator:Dynamic):Dynamic /*__DASession*/;
  @:native("SSLSetAllowsAnyRoot") public static function SSLSetAllowsAnyRoot(context:Dynamic /*SSLContext*/, anyRoot:Int):Int;
  @:native("AXUIElementGetTypeID") public static function AXUIElementGetTypeID():Int;
  @:native("CGPDFDocumentGetInfo") public static function CGPDFDocumentGetInfo(document:CGPDFDocument):CGPDFDictionary;
  @:native("SetIconFamilyData") public static function SetIconFamilyData(iconFamily:Dynamic /*IconFamilyResource*/, iconType:Int, h:Int):Int;
  @:native("CFTreeRemoveAllChildren") public static function CFTreeRemoveAllChildren(tree:Dynamic /*__CFTree*/):Dynamic /*Void*/;
  @:native("CGColorCreate") public static function CGColorCreate(space:CGColorSpace, components:Dynamic /*Dynamic*/):CGColor;
  @:native("CGDataConsumerRelease") public static function CGDataConsumerRelease(consumer:CGDataConsumer):Dynamic /*Void*/;
  @:native("CTRunGetTypeID") public static function CTRunGetTypeID():Int;
  @:native("CFStringCreateFromExternalRepresentation") public static function CFStringCreateFromExternalRepresentation(alloc:Dynamic, data:Dynamic, encoding:Int):Dynamic;
  @:native("CFBundleGetTypeID") public static function CFBundleGetTypeID():Int;
  @:native("SetFallbackUnicodeToTextRun") public static function SetFallbackUnicodeToTextRun(iUnicodeToTextRunInfo:Dynamic /*OpaqueUnicodeToTextRunInfo*/, iFallback:Dynamic, iControlFlags:Int, iInfoPtr:Void):Int;
  @:native("GetIndexedCollectionItemHdl") public static function GetIndexedCollectionItemHdl(aCollection:Dynamic /*OpaqueCollection*/, itemIndex:Int, itemData:Int):Int;
  @:native("NSCreateHashTable") public static function NSCreateHashTable(callBacks:Dynamic /*NSHashTableCallBacks*/, capacity:Int):NSHashTable;
  @:native("CGLayerRetain") public static function CGLayerRetain(layer:CGLayer):CGLayer;
  @:native("CFNetServiceBrowserCreate") public static function CFNetServiceBrowserCreate(alloc:Dynamic, clientCB:Dynamic, clientContext:Dynamic /*CFNetServiceClientContext*/):Dynamic /*__CFNetServiceBrowser*/;
  @:native("PMServerLaunchPrinterBrowser") public static function PMServerLaunchPrinterBrowser(server:Dynamic /*OpaquePMServer*/, options:Dynamic):Int;
  @:native("CFStringCreateWithFileSystemRepresentation") public static function CFStringCreateWithFileSystemRepresentation(alloc:Dynamic, buffer:Dynamic /*Dynamic*/):Dynamic;
  @:native("PBExchangeObjectsSync") public static function PBExchangeObjectsSync(paramBlock:Dynamic /*FSRefParam*/):Int;
  @:native("ColorSyncIterateInstalledCMMs") public static function ColorSyncIterateInstalledCMMs(callBack:Dynamic, userInfo:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("CFURLEnumeratorGetTypeID") public static function CFURLEnumeratorGetTypeID():Int;
  @:native("GetIconFamilyData") public static function GetIconFamilyData(iconFamily:Dynamic /*IconFamilyResource*/, iconType:Int, h:Int):Int;
  @:native("LocaleOperationCountLocales") public static function LocaleOperationCountLocales(opClass:Int, localeCount:Int):Int;
  @:native("SSLGetNumberEnabledCiphers") public static function SSLGetNumberEnabledCiphers(context:Dynamic /*SSLContext*/, numCiphers:Dynamic /*Int*/):Int;
  @:native("GetMacOSStatusCommentString") public static function GetMacOSStatusCommentString(err:Int):Dynamic /*Dynamic*/;
  @:native("CTFontCreateWithNameAndOptions") public static function CTFontCreateWithNameAndOptions(name:Dynamic, size:Float, matrix:Dynamic /*Dynamic*/, options:Dynamic /*CTFontOptions*/):Dynamic;
  @:native("CFDataCreateMutable") public static function CFDataCreateMutable(allocator:Dynamic, capacity:Int):Dynamic /*__CFData*/;
  @:native("CTFontCollectionCreateMutableCopy") public static function CTFontCollectionCreateMutableCopy(original:Dynamic):Dynamic /*__CTFontCollection*/;
  @:native("CFSocketGetNative") public static function CFSocketGetNative(s:Dynamic /*__CFSocket*/):Int;
  @:native("CTFramesetterCreateWithAttributedString") public static function CTFramesetterCreateWithAttributedString(string:Dynamic):Dynamic;
  @:native("CGImageSourceCreateWithData") public static function CGImageSourceCreateWithData(data:Dynamic, options:Dynamic):CGImageSource;
  @:native("CTFontDescriptorCopyAttributes") public static function CTFontDescriptorCopyAttributes(descriptor:Dynamic):Dynamic;
  @:native("CFNotificationCenterGetTypeID") public static function CFNotificationCenterGetTypeID():Int;
  @:native("HLockHi") public static function HLockHi(h:Int):Dynamic /*Void*/;
  @:native("CFNumberFormatterGetTypeID") public static function CFNumberFormatterGetTypeID():Int;
  @:native("CFRunLoopTimerCreate") public static function CFRunLoopTimerCreate(allocator:Dynamic, fireDate:Float, interval:Float, flags:Int, order:Int, callout:Dynamic, context:Dynamic /*CFRunLoopTimerContext*/):Dynamic /*__CFRunLoopTimer*/;
  @:native("CGPDFOperatorTableRelease") public static function CGPDFOperatorTableRelease(table:CGPDFOperatorTable):Dynamic /*Void*/;
  @:native("CFSocketGetContext") public static function CFSocketGetContext(s:Dynamic /*__CFSocket*/, context:Dynamic /*CFSocketContext*/):Dynamic /*Void*/;
  @:native("CGContextGetTypeID") public static function CGContextGetTypeID():Int;
  @:native("NSSwapHostIntToBig") public static function NSSwapHostIntToBig(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("CFAbsoluteTimeGetDifferenceAsGregorianUnits") public static function CFAbsoluteTimeGetDifferenceAsGregorianUnits(at1:Float, at2:Float, tz:Dynamic, unitFlags:Int):Dynamic /*CFGregorianUnits*/;
  @:native("CGContextFillRects") public static function CGContextFillRects(c:CGContext, rects:Dynamic /*Dynamic*/, count:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("WideAdd") public static function WideAdd(target:Dynamic /*Dynamic*/, source:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("PBSetForkPositionSync") public static function PBSetForkPositionSync(paramBlock:Dynamic /*FSForkIOParam*/):Int;
  @:native("LSCopyDefaultApplicationURLForContentType") public static function LSCopyDefaultApplicationURLForContentType(inContentType:Dynamic, inRoleMask:Dynamic /*LSRolesMask*/, outError:Dynamic /*__CFError*/):Dynamic;
  @:native("CGImageMetadataCopyTagWithPath") public static function CGImageMetadataCopyTagWithPath(metadata:Dynamic, parent:CGImageMetadataTag, path:Dynamic):CGImageMetadataTag;
  @:native("CFBundleCopyPreferredLocalizationsFromArray") public static function CFBundleCopyPreferredLocalizationsFromArray(locArray:Dynamic):Dynamic;
  @:native("CFFileSecurityGetOwner") public static function CFFileSecurityGetOwner(fileSec:Dynamic /*__CFFileSecurity*/, owner:Dynamic /*Dynamic*/):Int;
  @:native("AESetObjectCallbacks") public static function AESetObjectCallbacks(myCompareProc:Dynamic, myCountProc:Dynamic, myDisposeTokenProc:Dynamic, myGetMarkTokenProc:Dynamic, myMarkProc:Dynamic, myAdjustMarksProc:Dynamic, myGetErrDescProcPtr:Dynamic):Int;
  @:native("ATSFontIteratorReset") public static function ATSFontIteratorReset(iContext:Int, iFilter:Dynamic /*Dynamic*/, iRefCon:Dynamic /*Void*/, iOptions:Int, ioIterator:Dynamic /*ATSFontIterator_*/):Int;
  @:native("GetTextEncodingName") public static function GetTextEncodingName(iEncoding:Int, iNamePartSelector:Int, iPreferredRegion:Int, iPreferredEncoding:Int, iOutputBufLen:Int, oNameLength:Int, oActualRegion:Int, oActualEncoding:Int, oEncodingName:Int):Int;
  @:native("CFWriteStreamClose") public static function CFWriteStreamClose(stream:Dynamic /*__CFWriteStream*/):Dynamic /*Void*/;
  @:native("ICSetCurrentProfile") public static function ICSetCurrentProfile(inst:Dynamic /*OpaqueICInstance*/, newID:Int):Int;
  @:native("OpenComponentResFile") public static function OpenComponentResFile(aComponent:Dynamic /*ComponentRecord*/):Int;
  @:native("InsTime") public static function InsTime(tmTaskPtr:Dynamic /*QElem*/):Dynamic /*Void*/;
  @:native("Get1IndResource") public static function Get1IndResource(theType:Int, itemIndex:Int):Int;
  @:native("CFSocketSetDefaultNameRegistryPortNumber") public static function CFSocketSetDefaultNameRegistryPortNumber(port:Int):Dynamic /*Void*/;
  @:native("CTFrameGetLines") public static function CTFrameGetLines(frame:Dynamic):Dynamic;
  @:native("LSOpenURLsWithRole") public static function LSOpenURLsWithRole(inURLs:Dynamic, inRole:Dynamic /*LSRolesMask*/, inAEParam:Dynamic /*Dynamic*/, inAppParams:Dynamic /*Dynamic*/, outPSNs:Dynamic /*ProcessSerialNumber*/, inMaxPSNCount:Int):Int;
  @:native("CFDictionaryCreateMutableCopy") public static function CFDictionaryCreateMutableCopy(allocator:Dynamic, capacity:Int, theDict:Dynamic):Dynamic /*__CFDictionary*/;
  @:native("CFNetDiagnosticCopyNetworkStatusPassively") public static function CFNetDiagnosticCopyNetworkStatusPassively(details:Dynamic /*__CFNetDiagnostic*/, description:Dynamic):Int;
  @:native("CGBitmapContextGetAlphaInfo") public static function CGBitmapContextGetAlphaInfo(context:CGContext):CGImageAlphaInfo;
  @:native("AEDecodeMessage") public static function AEDecodeMessage(header:Dynamic /*Dynamic*/, event:Dynamic /*AEDesc*/, reply:Dynamic /*AEDesc*/):Int;
  @:native("CGSizeFromString") public static function CGSizeFromString(string:NSString):CGSize;
  @:native("PBGetForkSizeAsync") public static function PBGetForkSizeAsync(paramBlock:Dynamic /*FSForkIOParam*/):Dynamic /*Void*/;
  @:native("LocaleOperationCountNames") public static function LocaleOperationCountNames(opClass:Int, nameCount:Int):Int;
  @:native("SKIndexGetDocumentTermFrequency") public static function SKIndexGetDocumentTermFrequency(inIndex:Dynamic /*__SKIndex*/, inDocumentID:Int, inTermID:Int):Int;
  @:native("CFHTTPMessageCreateResponse") public static function CFHTTPMessageCreateResponse(alloc:Dynamic, statusCode:Int, statusDescription:Dynamic, httpVersion:Dynamic):Dynamic /*__CFHTTPMessage*/;
  @:native("CGColorSpaceCreatePattern") public static function CGColorSpaceCreatePattern(baseSpace:CGColorSpace):CGColorSpace;
  @:native("AXUIElementGetAttributeValueCount") public static function AXUIElementGetAttributeValueCount(element:Dynamic, attribute:Dynamic, count:Int):Dynamic /*AXError*/;
  @:native("CGPathCreateWithEllipseInRect") public static function CGPathCreateWithEllipseInRect(rect:CGRect, transform:Dynamic /*Dynamic*/):Dynamic;
  @:native("MDCopyLabelsWithKind") public static function MDCopyLabelsWithKind(kind:Dynamic):Dynamic;
  @:native("SKIndexGetTermIDForTermString") public static function SKIndexGetTermIDForTermString(inIndex:Dynamic /*__SKIndex*/, inTermString:Dynamic):Int;
  @:native("DebugStr") public static function DebugStr(debuggerMsg:Dynamic):Dynamic /*Void*/;
  @:native("FSEventStreamGetDeviceBeingWatched") public static function FSEventStreamGetDeviceBeingWatched(streamRef:Dynamic):Dynamic /*Dynamic*/;
  @:native("ATSFontFindFromName") public static function ATSFontFindFromName(iName:Dynamic, iOptions:Int):Int;
  @:native("CFNetServiceBrowserStopSearch") public static function CFNetServiceBrowserStopSearch(browser:Dynamic /*__CFNetServiceBrowser*/, error:Dynamic /*CFStreamError*/):Dynamic /*Void*/;
  @:native("CGContextShowGlyphsAtPoint") public static function CGContextShowGlyphsAtPoint(c:CGContext, x:Float, y:Float, glyphs:Dynamic /*Dynamic*/, count:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("AbsoluteToNanoseconds") public static function AbsoluteToNanoseconds(absoluteTime:Dynamic /*UnsignedWide*/):Dynamic /*UnsignedWide*/;
  @:native("SecPolicyCreateSSL") public static function SecPolicyCreateSSL(server:Int, hostname:Dynamic):Dynamic /*__SecPolicy*/;
  @:native("CGContextBeginPage") public static function CGContextBeginPage(c:CGContext, mediaBox:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CTFontCollectionCopyFontAttributes") public static function CTFontCollectionCopyFontAttributes(collection:Dynamic, attributeNames:Dynamic, options:Dynamic /*CTFontCollectionCopyOptions*/):Dynamic;
  @:native("CTFontManagerCreateFontDescriptorFromData") public static function CTFontManagerCreateFontDescriptorFromData(data:Dynamic):Dynamic;
  @:native("ReplaceIndexedCollectionItemHdl") public static function ReplaceIndexedCollectionItemHdl(aCollection:Dynamic /*OpaqueCollection*/, itemIndex:Int, itemData:Int):Int;
  @:native("InvokeAVLItemSizeUPP") public static function InvokeAVLItemSizeUPP(tree:Dynamic /*AVLTreeStruct*/, itemPtr:Dynamic /*Dynamic*/, userUPP:Dynamic):Int;
  @:native("CSIdentityGetCertificate") public static function CSIdentityGetCertificate(user:Dynamic /*__CSIdentity*/):Dynamic /*__SecCertificate*/;
  @:native("CGColorGetPattern") public static function CGColorGetPattern(color:CGColor):CGPattern;
  @:native("CGPDFArrayGetBoolean") public static function CGPDFArrayGetBoolean(array:CGPDFArray, index:Dynamic /*Int*/, value:Int):Dynamic /*Bool*/;
  @:native("CVPixelBufferGetBaseAddressOfPlane") public static function CVPixelBufferGetBaseAddressOfPlane(pixelBuffer:Dynamic /*__CVBuffer*/, planeIndex:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("InvokeFolderManagerNotificationUPP") public static function InvokeFolderManagerNotificationUPP(message:Int, arg:Dynamic /*Void*/, userRefCon:Dynamic /*Void*/, userUPP:Dynamic):Int;
  @:native("LSFindApplicationForInfo") public static function LSFindApplicationForInfo(inCreator:Int, inBundleID:Dynamic, inName:Dynamic, outAppRef:Dynamic /*FSRef*/, outAppURL:Dynamic):Int;
  @:native("CFTimeZoneCreateWithTimeIntervalFromGMT") public static function CFTimeZoneCreateWithTimeIntervalFromGMT(allocator:Dynamic, ti:Float):Dynamic;
  @:native("CFNetServiceCreateTXTDataWithDictionary") public static function CFNetServiceCreateTXTDataWithDictionary(alloc:Dynamic, keyValuePairs:Dynamic):Dynamic;
  @:native("CFURLGetFileSystemRepresentation") public static function CFURLGetFileSystemRepresentation(url:Dynamic, resolveAgainstBase:Int, buffer:Int, maxBufLen:Int):Int;
  @:native("ATSFontFamilyGetQuickDrawName") public static function ATSFontFamilyGetQuickDrawName(iFamily:Int, oName:Dynamic /*Int*/):Int;
  @:native("CVImageBufferCreateColorSpaceFromAttachments") public static function CVImageBufferCreateColorSpaceFromAttachments(attachments:Dynamic):CGColorSpace;
  @:native("LMSetSysFontSize") public static function LMSetSysFontSize(value:Int):Dynamic /*Void*/;
  @:native("PMPrintSettingsCopyKeys") public static function PMPrintSettingsCopyKeys(printSettings:Dynamic /*OpaquePMPrintSettings*/, settingsKeys:Dynamic):Int;
  @:native("NewFolderManagerNotificationUPP") public static function NewFolderManagerNotificationUPP(userRoutine:Dynamic):Dynamic;
  @:native("CFAttributedStringSetAttribute") public static function CFAttributedStringSetAttribute(aStr:Dynamic /*__CFAttributedString*/, range:Dynamic /*CFRange*/, attrName:Dynamic, value:Dynamic):Dynamic /*Void*/;
  @:native("SecTrustSetKeychains") public static function SecTrustSetKeychains(trust:Dynamic /*__SecTrust*/, keychainOrArray:Dynamic):Int;
  @:native("GetProcessPID") public static function GetProcessPID(psn:Dynamic /*Dynamic*/, pid:Dynamic /*Dynamic*/):Int;
  @:native("OSWriteSwapInt32") public static function OSWriteSwapInt32(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("WSMethodInvocationUnscheduleFromRunLoop") public static function WSMethodInvocationUnscheduleFromRunLoop(invocation:Dynamic /*OpaqueWSMethodInvocationRef*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("PMSessionGetCurrentPrinter") public static function PMSessionGetCurrentPrinter(printSession:Dynamic /*OpaquePMPrintSession*/, currentPrinter:Dynamic /*OpaquePMPrinter*/):Int;
  @:native("KCGetIndKeychain") public static function KCGetIndKeychain(index:Int, keychain:Dynamic /*KCRef*/):Int;
  @:native("PMCGImageCreateWithEPSDataProvider") public static function PMCGImageCreateWithEPSDataProvider(epsDataProvider:CGDataProvider, epsPreview:CGImage):CGImage;
  @:native("MDItemCopyLabels") public static function MDItemCopyLabels(item:Dynamic /*__MDItem*/):Dynamic;
  @:native("CFURLCopyFileSystemPath") public static function CFURLCopyFileSystemPath(anURL:Dynamic, pathStyle:Dynamic /*CFURLPathStyle*/):Dynamic;
  @:native("WSGetCFTypeIDFromWSTypeID") public static function WSGetCFTypeIDFromWSTypeID(typeID:Dynamic /*WSTypeID*/):Int;
  @:native("AEDuplicateDesc") public static function AEDuplicateDesc(theAEDesc:Dynamic /*Dynamic*/, result:Dynamic /*AEDesc*/):Int;
  @:native("NSPageSize") public static function NSPageSize():Int;
  @:native("NSClassFromString") public static function NSClassFromString(aClassName:NSString):Dynamic;
  @:native("MPGetAllocatedBlockSize") public static function MPGetAllocatedBlockSize(object:Void):Int;
  @:native("HIShapeCreateMutableCopy") public static function HIShapeCreateMutableCopy(inOrig:Dynamic):Dynamic /*__HIShape*/;
  @:native("UIDeviceOrientationIsLandscape") public static function UIDeviceOrientationIsLandscape(used:Dynamic /*Dynamic*/):Dynamic /*Bool*/;
  @:native("SecTrustCopyPolicies") public static function SecTrustCopyPolicies(trust:Dynamic /*__SecTrust*/, policies:Dynamic):Int;
  @:native("CGContextSetAllowsFontSmoothing") public static function CGContextSetAllowsFontSmoothing(c:CGContext, allowsFontSmoothing:Dynamic /*Bool*/):Dynamic /*Void*/;
  @:native("OpenAComponentResFile") public static function OpenAComponentResFile(aComponent:Dynamic /*ComponentRecord*/, resRef:Int):Int;
  @:native("CFMachPortInvalidate") public static function CFMachPortInvalidate(port:Dynamic /*__CFMachPort*/):Dynamic /*Void*/;
  @:native("AXUIElementCopyAttributeValues") public static function AXUIElementCopyAttributeValues(element:Dynamic, attribute:Dynamic, index:Int, maxValues:Int, values:Dynamic):Dynamic /*AXError*/;
  @:native("CFRunLoopTimerCreateWithHandler") public static function CFRunLoopTimerCreateWithHandler(allocator:Dynamic, fireDate:Float, interval:Float, flags:Int, order:Int, block:Dynamic /*Dynamic*/):Dynamic /*__CFRunLoopTimer*/;
  @:native("InvokeThreadSwitchUPP") public static function InvokeThreadSwitchUPP(threadBeingSwitched:Int, switchProcParam:Dynamic /*Void*/, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CSIdentityIsMemberOfGroup") public static function CSIdentityIsMemberOfGroup(identity:Dynamic /*__CSIdentity*/, group:Dynamic /*__CSIdentity*/):Int;
  @:native("CFStringGetIntValue") public static function CFStringGetIntValue(str:Dynamic):Int;
  @:native("MDQueryCreateSubset") public static function MDQueryCreateSubset(allocator:Dynamic, query:Dynamic /*__MDQuery*/, queryString:Dynamic, valueListAttrs:Dynamic, sortingAttrs:Dynamic):Dynamic /*__MDQuery*/;
  @:native("CTFontManagerRegisterGraphicsFont") public static function CTFontManagerRegisterGraphicsFont(font:CGFont, error:Dynamic /*__CFError*/):Dynamic /*Bool*/;
  @:native("NewDebuggerDisposeThreadUPP") public static function NewDebuggerDisposeThreadUPP(userRoutine:Dynamic):Dynamic;
  @:native("ATSFontGetGlobalAutoActivationSetting") public static function ATSFontGetGlobalAutoActivationSetting():Int;
  @:native("AEStreamWriteKey") public static function AEStreamWriteKey(ref:Dynamic /*OpaqueAEStreamRef*/, key:Int):Int;
  @:native("CATransform3DMakeRotation") public static function CATransform3DMakeRotation(angle:Float, x:Float, y:Float, z:Float):CATransform3D;
  @:native("TranslationGetTypeID") public static function TranslationGetTypeID():Int;
  @:native("SetCollectionItemInfo") public static function SetCollectionItemInfo(c:Dynamic /*OpaqueCollection*/, tag:Int, id:Int, whichAttributes:Int, newAttributes:Int):Int;
  @:native("IncrementAtomic16") public static function IncrementAtomic16(address:Int):Int;
  @:native("CFHostUnscheduleFromRunLoop") public static function CFHostUnscheduleFromRunLoop(theHost:Dynamic /*__CFHost*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("CGPathRetain") public static function CGPathRetain(path:Dynamic):Dynamic;
  @:native("UCIsSurrogateHighCharacter") public static function UCIsSurrogateHighCharacter(used:Dynamic /*Dynamic*/):Int;
  @:native("DAApprovalSessionUnscheduleFromRunLoop") public static function DAApprovalSessionUnscheduleFromRunLoop(session:Dynamic /*__DASession*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("DisposeThreadEntryUPP") public static function DisposeThreadEntryUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("SetThreadState") public static function SetThreadState(threadToSet:Int, newState:Int, suggestedThread:Int):Int;
  @:native("GetCollectionRetainCount") public static function GetCollectionRetainCount(c:Dynamic /*OpaqueCollection*/):Int;
  @:native("AXUIElementGetPid") public static function AXUIElementGetPid(element:Dynamic, pid:Dynamic /*Dynamic*/):Dynamic /*AXError*/;
  @:native("CGContextBeginPath") public static function CGContextBeginPath(c:CGContext):Dynamic /*Void*/;
  @:native("DisposeATSUDirectLayoutOperationOverrideUPP") public static function DisposeATSUDirectLayoutOperationOverrideUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CTFontCollectionGetTypeID") public static function CTFontCollectionGetTypeID():Int;
  @:native("CFStringGetSystemEncoding") public static function CFStringGetSystemEncoding():Int;
  @:native("DurationToNanoseconds") public static function DurationToNanoseconds(theDuration:Int):Dynamic /*UnsignedWide*/;
  @:native("AEStreamWriteAEDesc") public static function AEStreamWriteAEDesc(ref:Dynamic /*OpaqueAEStreamRef*/, desc:Dynamic /*Dynamic*/):Int;
  @:native("SKIndexCopyDocumentIDArrayForTermID") public static function SKIndexCopyDocumentIDArrayForTermID(inIndex:Dynamic /*__SKIndex*/, inTermID:Int):Dynamic;
  @:native("IOSurfaceGetTypeID") public static function IOSurfaceGetTypeID():Int;
  @:native("GetCollectionItemInfo") public static function GetCollectionItemInfo(c:Dynamic /*OpaqueCollection*/, tag:Int, id:Int, itemIndex:Int, itemSize:Int, attributes:Int):Int;
  @:native("FSCreateFork") public static function FSCreateFork(ref:Dynamic /*Dynamic*/, forkNameLength:Int, forkName:Dynamic /*Dynamic*/):Int;
  @:native("CATransform3DScale") public static function CATransform3DScale(t:CATransform3D, sx:Float, sy:Float, sz:Float):CATransform3D;
  @:native("AERemoveSpecialHandler") public static function AERemoveSpecialHandler(functionClass:Int, handler:Dynamic, isSysHandler:Int):Int;
  @:native("HIShapeContainsPoint") public static function HIShapeContainsPoint(inShape:Dynamic, inPoint:Dynamic /*Dynamic*/):Int;
  @:native("PMCreatePrintSettings") public static function PMCreatePrintSettings(printSettings:Dynamic /*OpaquePMPrintSettings*/):Int;
  @:native("CFBundleGetLocalInfoDictionary") public static function CFBundleGetLocalInfoDictionary(bundle:Dynamic /*__CFBundle*/):Dynamic;
  @:native("FSGetCatalogInfo") public static function FSGetCatalogInfo(ref:Dynamic /*Dynamic*/, whichInfo:Int, catalogInfo:Dynamic /*FSCatalogInfo*/, outName:Dynamic /*HFSUniStr255*/, fsSpec:Dynamic /*FSSpec*/, parentRef:Dynamic /*FSRef*/):Int;
  @:native("PMPrinterPrintWithFile") public static function PMPrinterPrintWithFile(printer:Dynamic /*OpaquePMPrinter*/, settings:Dynamic /*OpaquePMPrintSettings*/, format:Dynamic /*OpaquePMPageFormat*/, mimeType:Dynamic, fileURL:Dynamic):Int;
  @:native("InstallTimeTask") public static function InstallTimeTask(tmTaskPtr:Dynamic /*QElem*/):Int;
  @:native("InvokeThreadSchedulerUPP") public static function InvokeThreadSchedulerUPP(schedulerInfo:Dynamic /*SchedulerInfoRec*/, userUPP:Dynamic):Int;
  @:native("CFNetServiceCreateCopy") public static function CFNetServiceCreateCopy(alloc:Dynamic, service:Dynamic /*__CFNetService*/):Dynamic /*__CFNetService*/;
  @:native("GetThreadState") public static function GetThreadState(threadToGet:Int, threadState:Int):Int;
  @:native("TruncateForUnicodeToText") public static function TruncateForUnicodeToText(iUnicodeToTextInfo:Dynamic, iSourceLen:Int, iSourceStr:Dynamic /*Dynamic*/, iControlFlags:Int, iMaxLen:Int, oTruncatedLen:Int):Int;
  @:native("CFPlugInAddInstanceForFactory") public static function CFPlugInAddInstanceForFactory(factoryID:Dynamic):Dynamic /*Void*/;
  @:native("CFSocketCopyPeerAddress") public static function CFSocketCopyPeerAddress(s:Dynamic /*__CFSocket*/):Dynamic;
  @:native("DurationToAbsolute") public static function DurationToAbsolute(duration:Int):Dynamic /*UnsignedWide*/;
  @:native("CGContextSetPatternPhase") public static function CGContextSetPatternPhase(c:CGContext, phase:CGSize):Dynamic /*Void*/;
  @:native("CFRunLoopContainsObserver") public static function CFRunLoopContainsObserver(rl:Dynamic /*__CFRunLoop*/, observer:Dynamic /*__CFRunLoopObserver*/, mode:Dynamic):Int;
  @:native("CGPathAddLineToPoint") public static function CGPathAddLineToPoint(path:CGPath, m:Dynamic /*Dynamic*/, x:Float, y:Float):Dynamic /*Void*/;
  @:native("CFEqual") public static function CFEqual(cf1:Dynamic, cf2:Dynamic):Int;
  @:native("FSPathReplaceObject") public static function FSPathReplaceObject(originalObjectPath:Dynamic /*Dynamic*/, replacementObjectPath:Dynamic /*Dynamic*/, newName:Dynamic, temporaryName:Dynamic, temporaryDirectoryPath:Dynamic /*Dynamic*/, flags:Int):Int;
  @:native("CGShadingCreateAxial") public static function CGShadingCreateAxial(space:CGColorSpace, start:CGPoint, end:CGPoint, func:CGFunction, extendStart:Dynamic /*Bool*/, extendEnd:Dynamic /*Bool*/):CGShading;
  @:native("PLstrspn") public static function PLstrspn(str1:Dynamic, charSet:Dynamic):Dynamic /*Int*/;
  @:native("DisposeDebugAssertOutputHandlerUPP") public static function DisposeDebugAssertOutputHandlerUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("U64Set") public static function U64Set(value:Int):Dynamic;
  @:native("CFURLSetTemporaryResourcePropertyForKey") public static function CFURLSetTemporaryResourcePropertyForKey(url:Dynamic, key:Dynamic, propertyValue:Dynamic):Dynamic /*Void*/;
  @:native("CFRunLoopSourceGetTypeID") public static function CFRunLoopSourceGetTypeID():Int;
  @:native("CFDataIncreaseLength") public static function CFDataIncreaseLength(theData:Dynamic /*__CFData*/, extraLength:Int):Dynamic /*Void*/;
  @:native("CFDateFormatterCopyProperty") public static function CFDateFormatterCopyProperty(formatter:Dynamic /*__CFDateFormatter*/, key:Dynamic):Dynamic;
  @:native("CFPreferencesSetMultiple") public static function CFPreferencesSetMultiple(keysToSet:Dynamic, keysToRemove:Dynamic, applicationID:Dynamic, userName:Dynamic, hostName:Dynamic):Dynamic /*Void*/;
  @:native("S64Set") public static function S64Set(value:Int):Dynamic;
  @:native("CVMetalTextureGetCleanTexCoords") public static function CVMetalTextureGetCleanTexCoords(image:Dynamic /*__CVBuffer*/, lowerLeft:Dynamic /*Float*/, lowerRight:Dynamic /*Float*/, upperRight:Dynamic /*Float*/, upperLeft:Dynamic /*Float*/):Dynamic /*Void*/;
  @:native("CFURLCopyPath") public static function CFURLCopyPath(anURL:Dynamic):Dynamic;
  @:native("CGFontGetAscent") public static function CGFontGetAscent(font:CGFont):Dynamic /*Int*/;
  @:native("CFArrayBSearchValues") public static function CFArrayBSearchValues(theArray:Dynamic, range:Dynamic /*CFRange*/, value:Dynamic /*Dynamic*/, comparator:Dynamic, context:Dynamic /*Void*/):Int;
  @:native("PasteboardResolvePromises") public static function PasteboardResolvePromises(inPasteboard:Dynamic /*OpaquePasteboardRef*/):Int;
  @:native("PMSessionError") public static function PMSessionError(printSession:Dynamic /*OpaquePMPrintSession*/):Int;
  @:native("CFLocaleGetSystem") public static function CFLocaleGetSystem():Dynamic;
  @:native("InvokeTimerUPP") public static function InvokeTimerUPP(tmTaskPtr:Dynamic /*TMTask*/, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CSIdentitySetImageURL") public static function CSIdentitySetImageURL(identity:Dynamic /*__CSIdentity*/, url:Dynamic):Dynamic /*Void*/;
  @:native("PMSessionCopyDestinationLocation") public static function PMSessionCopyDestinationLocation(printSession:Dynamic /*OpaquePMPrintSession*/, printSettings:Dynamic /*OpaquePMPrintSettings*/, destLocationP:Dynamic):Int;
  @:native("CFURLCreateBookmarkDataFromAliasRecord") public static function CFURLCreateBookmarkDataFromAliasRecord(allocatorRef:Dynamic, aliasRecordDataRef:Dynamic):Dynamic;
  @:native("CFURLHasDirectoryPath") public static function CFURLHasDirectoryPath(anURL:Dynamic):Int;
  @:native("CFURLCreateFromFSRef") public static function CFURLCreateFromFSRef(allocator:Dynamic, fsRef:Dynamic /*Dynamic*/):Dynamic;
  @:native("NSCopyObject") public static function NSCopyObject(object:Dynamic /*Dynamic*/, extraBytes:Int, zone:Dynamic /*_NSZone*/):Dynamic /*Dynamic*/;
  @:native("CFCalendarGetFirstWeekday") public static function CFCalendarGetFirstWeekday(calendar:Dynamic /*__CFCalendar*/):Int;
  @:native("CFPreferencesAppSynchronize") public static function CFPreferencesAppSynchronize(applicationID:Dynamic):Int;
  @:native("DisposeFNSubscriptionUPP") public static function DisposeFNSubscriptionUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("MDItemsCreateWithURLs") public static function MDItemsCreateWithURLs(allocator:Dynamic, urls:Dynamic):Dynamic;
  @:native("SKIndexGetDocumentState") public static function SKIndexGetDocumentState(inIndex:Dynamic /*__SKIndex*/, inDocument:Dynamic):Dynamic /*SKDocumentIndexState*/;
  @:native("SetAliasUserType") public static function SetAliasUserType(alias:Dynamic /*AliasRecord*/, userType:Int):Dynamic /*Void*/;
  @:native("EAGLGetVersion") public static function EAGLGetVersion(major:Dynamic /*Int*/, minor:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("CTLineCreateTruncatedLine") public static function CTLineCreateTruncatedLine(line:Dynamic, width:Dynamic /*Float*/, truncationType:Dynamic /*CTLineTruncationType*/, truncationToken:Dynamic):Dynamic;
  @:native("UCConvertCFAbsoluteTimeToUTCDateTime") public static function UCConvertCFAbsoluteTimeToUTCDateTime(iCFTime:Float, oUTCDate:Dynamic /*UTCDateTime*/):Int;
  @:native("CFNetServiceBrowserUnscheduleFromRunLoop") public static function CFNetServiceBrowserUnscheduleFromRunLoop(browser:Dynamic /*__CFNetServiceBrowser*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("CFHTTPMessageSetBody") public static function CFHTTPMessageSetBody(message:Dynamic /*__CFHTTPMessage*/, bodyData:Dynamic):Dynamic /*Void*/;
  @:native("CFGregorianDateGetAbsoluteTime") public static function CFGregorianDateGetAbsoluteTime(gdate:Dynamic /*CFGregorianDate*/, tz:Dynamic):Float;
  @:native("CGDataConsumerRetain") public static function CGDataConsumerRetain(consumer:CGDataConsumer):CGDataConsumer;
  @:native("CFStringGetLength") public static function CFStringGetLength(theString:Dynamic):Int;
  @:native("KCRemoveCallback") public static function KCRemoveCallback(callbackProc:Dynamic):Int;
  @:native("CFURLEnumeratorCreateForDirectoryURL") public static function CFURLEnumeratorCreateForDirectoryURL(alloc:Dynamic, directoryURL:Dynamic, option:Dynamic /*CFURLEnumeratorOptions*/, propertyKeys:Dynamic):Dynamic;
  @:native("CGBitmapContextGetBitsPerComponent") public static function CGBitmapContextGetBitsPerComponent(context:CGContext):Dynamic /*Int*/;
  @:native("ColorSyncProfileInstall") public static function ColorSyncProfileInstall(profile:Dynamic, domain:Dynamic, subpath:Dynamic, error:Dynamic /*__CFError*/):Dynamic /*Bool*/;
  @:native("SecTrustCopyAnchorCertificates") public static function SecTrustCopyAnchorCertificates(anchors:Dynamic):Int;
  @:native("RemoveCollectionItem") public static function RemoveCollectionItem(c:Dynamic /*OpaqueCollection*/, tag:Int, id:Int):Int;
  @:native("HSetRBit") public static function HSetRBit(h:Int):Dynamic /*Void*/;
  @:native("UIFloatRangeIsEqualToRange") public static function UIFloatRangeIsEqualToRange(range:Dynamic /*UIFloatRange*/, otherRange:Dynamic /*UIFloatRange*/):Dynamic /*Bool*/;
  @:native("CFDictionaryContainsValue") public static function CFDictionaryContainsValue(theDict:Dynamic, value:Dynamic /*Dynamic*/):Int;
  @:native("GetAliasUserType") public static function GetAliasUserType(alias:Dynamic /*AliasRecord*/):Int;
  @:native("DisposeExceptionHandlerUPP") public static function DisposeExceptionHandlerUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("KCFindInternetPassword") public static function KCFindInternetPassword(serverName:Dynamic, securityDomain:Dynamic, accountName:Dynamic, port:Int, protocol:Int, authType:Int, maxLength:Int, passwordData:Dynamic /*Void*/, actualLength:Int, item:Dynamic /*KCItemRef*/):Int;
  @:native("CVBufferGetAttachments") public static function CVBufferGetAttachments(buffer:Dynamic /*__CVBuffer*/, attachmentMode:Dynamic /*CVAttachmentMode*/):Dynamic;
  @:native("CTFontCreatePathForGlyph") public static function CTFontCreatePathForGlyph(font:Dynamic, glyph:Int, matrix:Dynamic /*Dynamic*/):Dynamic;
  @:native("NSEnumerateHashTable") public static function NSEnumerateHashTable(table:NSHashTable):Dynamic /*NSHashEnumerator*/;
  @:native("HIShapeGetAsQDRgn") public static function HIShapeGetAsQDRgn(inShape:Dynamic, outRgn:Dynamic /*OpaqueRgnHandle*/):Int;
  @:native("SSLClose") public static function SSLClose(context:Dynamic /*SSLContext*/):Int;
  @:native("CFArrayAppendValue") public static function CFArrayAppendValue(theArray:Dynamic /*__CFArray*/, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CGImageSourceCopyPropertiesAtIndex") public static function CGImageSourceCopyPropertiesAtIndex(isrc:CGImageSource, index:Dynamic /*Int*/, options:Dynamic):Dynamic;
  @:native("PBDeleteForkSync") public static function PBDeleteForkSync(paramBlock:Dynamic /*FSForkIOParam*/):Int;
  @:native("UAZoomEnabled") public static function UAZoomEnabled():Int;
  @:native("FSFileSecurityGetGroupUUID") public static function FSFileSecurityGetGroupUUID(fileSec:Dynamic /*__FSFileSecurity*/, group:Dynamic /*CFUUIDBytes*/):Int;
  @:native("CFMachPortGetContext") public static function CFMachPortGetContext(port:Dynamic /*__CFMachPort*/, context:Dynamic /*CFMachPortContext*/):Dynamic /*Void*/;
  @:native("GetIndType") public static function GetIndType(theType:Int, itemIndex:Int):Dynamic /*Void*/;
  @:native("CFStringGetPascalStringPtr") public static function CFStringGetPascalStringPtr(theString:Dynamic, encoding:Int):Dynamic;
  @:native("NSSwapBigDoubleToHost") public static function NSSwapBigDoubleToHost(used:Dynamic /*Dynamic*/):Dynamic /*Float*/;
  @:native("CFArrayRemoveAllValues") public static function CFArrayRemoveAllValues(theArray:Dynamic /*__CFArray*/):Dynamic /*Void*/;
  @:native("CFURLCreateResourcePropertiesForKeysFromBookmarkData") public static function CFURLCreateResourcePropertiesForKeysFromBookmarkData(allocator:Dynamic, resourcePropertiesToReturn:Dynamic, bookmark:Dynamic):Dynamic;
  @:native("NSHomeDirectoryForUser") public static function NSHomeDirectoryForUser(userName:NSString):NSString;
  @:native("CFURLCreateData") public static function CFURLCreateData(allocator:Dynamic, url:Dynamic, encoding:Int, escapeWhitespace:Int):Dynamic;
  @:native("CFURLCreateByResolvingBookmarkData") public static function CFURLCreateByResolvingBookmarkData(allocator:Dynamic, bookmark:Dynamic, options:Dynamic /*CFURLBookmarkResolutionOptions*/, relativeToURL:Dynamic, resourcePropertiesToInclude:Dynamic, isStale:Int, error:Dynamic /*__CFError*/):Dynamic;
  @:native("AERemoteProcessResolverGetProcesses") public static function AERemoteProcessResolverGetProcesses(ref:Dynamic /*AERemoteProcessResolver*/, outError:Dynamic /*CFStreamError*/):Dynamic;
  @:native("GetNextProcess") public static function GetNextProcess(PSN:Dynamic /*ProcessSerialNumber*/):Int;
  @:native("CopyCollection") public static function CopyCollection(srcCollection:Dynamic /*OpaqueCollection*/, dstCollection:Dynamic /*OpaqueCollection*/):Dynamic /*OpaqueCollection*/;
  @:native("SetGestaltValue") public static function SetGestaltValue(selector:Int, newValue:Int):Int;
  @:native("NSAllHashTableObjects") public static function NSAllHashTableObjects(table:NSHashTable):NSArray;
  @:native("NSMapInsertKnownAbsent") public static function NSMapInsertKnownAbsent(table:NSMapTable, key:Dynamic /*Dynamic*/, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CallComponentRegister") public static function CallComponentRegister(ci:Dynamic /*ComponentInstanceRecord*/):Int;
  @:native("FSEventStreamCreateRelativeToDevice") public static function FSEventStreamCreateRelativeToDevice(allocator:Dynamic, callback:Dynamic, context:Dynamic /*FSEventStreamContext*/, deviceToWatch:Dynamic /*Dynamic*/, pathsToWatchRelativeToDevice:Dynamic, sinceWhen:Dynamic, latency:Float, flags:Int):Dynamic /*__FSEventStream*/;
  @:native("ColorSyncProfileCopyData") public static function ColorSyncProfileCopyData(prof:Dynamic, error:Dynamic /*__CFError*/):Dynamic;
  @:native("CFURLGetTypeID") public static function CFURLGetTypeID():Int;
  @:native("KCGetKeychainName") public static function KCGetKeychainName(keychain:Dynamic /*KCRef*/, keychainName:Int):Int;
  @:native("SSLSetDatagramHelloCookie") public static function SSLSetDatagramHelloCookie(dtlsContext:Dynamic /*SSLContext*/, cookie:Dynamic /*Dynamic*/, cookieLen:Dynamic /*Int*/):Int;
  @:native("DisposeOSLDisposeTokenUPP") public static function DisposeOSLDisposeTokenUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CFBagGetValue") public static function CFBagGetValue(theBag:Dynamic, value:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("DisposeIOCompletionUPP") public static function DisposeIOCompletionUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CFBitVectorSetBits") public static function CFBitVectorSetBits(bv:Dynamic /*__CFBitVector*/, range:Dynamic /*CFRange*/, value:Int):Dynamic /*Void*/;
  @:native("SetResPurge") public static function SetResPurge(install:Int):Dynamic /*Void*/;
  @:native("CGPatternRelease") public static function CGPatternRelease(pattern:CGPattern):Dynamic /*Void*/;
  @:native("CFSocketCopyRegisteredValue") public static function CFSocketCopyRegisteredValue(nameServerSignature:Dynamic /*Dynamic*/, timeout:Float, name:Dynamic, value:Dynamic, nameServerAddress:Dynamic):Dynamic /*CFSocketError*/;
  @:native("SKSearchCreate") public static function SKSearchCreate(inIndex:Dynamic /*__SKIndex*/, inQuery:Dynamic, inSearchOptions:Int):Dynamic /*__SKSearch*/;
  @:native("CGColorRetain") public static function CGColorRetain(color:CGColor):CGColor;
  @:native("ColorSyncRegisterDevice") public static function ColorSyncRegisterDevice(deviceClass:Dynamic, deviceID:Dynamic, deviceInfo:Dynamic):Dynamic /*Bool*/;
  @:native("CFArrayGetValueAtIndex") public static function CFArrayGetValueAtIndex(theArray:Dynamic, idx:Int):Dynamic /*Dynamic*/;
  @:native("CFAttributedStringRemoveAttribute") public static function CFAttributedStringRemoveAttribute(aStr:Dynamic /*__CFAttributedString*/, range:Dynamic /*CFRange*/, attrName:Dynamic):Dynamic /*Void*/;
  @:native("FSCreateFileUnicode") public static function FSCreateFileUnicode(parentRef:Dynamic /*Dynamic*/, nameLength:Int, name:Dynamic /*Dynamic*/, whichInfo:Int, catalogInfo:Dynamic /*Dynamic*/, newRef:Dynamic /*FSRef*/, newSpec:Dynamic /*FSSpec*/):Int;
  @:native("LMGetResLoad") public static function LMGetResLoad():Int;
  @:native("SKIndexCopyInfoForDocumentIDs") public static function SKIndexCopyInfoForDocumentIDs(inIndex:Dynamic /*__SKIndex*/, inCount:Int, inDocumentIDsArray:Int, outNamesArray:Dynamic, outParentIDsArray:Int):Dynamic /*Void*/;
  @:native("CGAffineTransformMakeScale") public static function CGAffineTransformMakeScale(sx:Float, sy:Float):CGAffineTransform;
  @:native("ThreadEndCritical") public static function ThreadEndCritical():Int;
  @:native("AEReplaceDescData") public static function AEReplaceDescData(typeCode:Int, dataPtr:Dynamic /*Dynamic*/, dataSize:Int, theAEDesc:Dynamic /*AEDesc*/):Int;
  @:native("CGContextSetLineJoin") public static function CGContextSetLineJoin(c:CGContext, join:CGLineJoin):Dynamic /*Void*/;
  @:native("CopyProcessName") public static function CopyProcessName(psn:Dynamic /*Dynamic*/, name:Dynamic):Int;
  @:native("AXUIElementCopyParameterizedAttributeNames") public static function AXUIElementCopyParameterizedAttributeNames(element:Dynamic, names:Dynamic):Dynamic /*AXError*/;
  @:native("CGContextReplacePathWithStrokedPath") public static function CGContextReplacePathWithStrokedPath(c:CGContext):Dynamic /*Void*/;
  @:native("CFRunLoopAddSource") public static function CFRunLoopAddSource(rl:Dynamic /*__CFRunLoop*/, source:Dynamic /*__CFRunLoopSource*/, mode:Dynamic):Dynamic /*Void*/;
  @:native("FSGetCatalogInfoBulk") public static function FSGetCatalogInfoBulk(iterator:Dynamic /*OpaqueFSIterator*/, maximumObjects:Int, actualObjects:Int, containerChanged:Int, whichInfo:Int, catalogInfos:Dynamic /*FSCatalogInfo*/, refs:Dynamic /*FSRef*/, specs:Dynamic /*FSSpec*/, names:Dynamic /*HFSUniStr255*/):Int;
  @:native("CFStringCreateByCombiningStrings") public static function CFStringCreateByCombiningStrings(alloc:Dynamic, theArray:Dynamic, separatorString:Dynamic):Dynamic;
  @:native("CFCalendarSetMinimumDaysInFirstWeek") public static function CFCalendarSetMinimumDaysInFirstWeek(calendar:Dynamic /*__CFCalendar*/, mwd:Int):Dynamic /*Void*/;
  @:native("SetHandleSize") public static function SetHandleSize(h:Int, newSize:Int):Dynamic /*Void*/;
  @:native("FSGetVolumeMountInfoSize") public static function FSGetVolumeMountInfoSize(volume:Int, size:Int):Int;
  @:native("AEDeleteItem") public static function AEDeleteItem(theAEDescList:Dynamic /*AEDesc*/, index:Dynamic /*Int*/):Int;
  @:native("HIShapeCreateWithRect") public static function HIShapeCreateWithRect(inRect:Dynamic /*Dynamic*/):Dynamic;
  @:native("DADiskCreateFromVolumePath") public static function DADiskCreateFromVolumePath(allocator:Dynamic, session:Dynamic /*__DASession*/, path:Dynamic):Dynamic /*__DADisk*/;
  @:native("CFAbsoluteTimeGetDayOfYear") public static function CFAbsoluteTimeGetDayOfYear(at:Float, tz:Dynamic):Int;
  @:native("LSOpenItemsWithRole") public static function LSOpenItemsWithRole(inItems:Dynamic /*Dynamic*/, inItemCount:Int, inRole:Dynamic /*LSRolesMask*/, inAEParam:Dynamic /*Dynamic*/, inAppParams:Dynamic /*Dynamic*/, outPSNs:Dynamic /*ProcessSerialNumber*/, inMaxPSNCount:Int):Int;
  @:native("CTFontGetTypeID") public static function CTFontGetTypeID():Int;
  @:native("PasteboardSetPasteLocation") public static function PasteboardSetPasteLocation(inPasteboard:Dynamic /*OpaquePasteboardRef*/, inPasteLocation:Dynamic):Int;
  @:native("CGPDFPageGetTypeID") public static function CGPDFPageGetTypeID():Int;
  @:native("CSBackupSetItemExcluded") public static function CSBackupSetItemExcluded(item:Dynamic, exclude:Int, excludeByPath:Int):Int;
  @:native("CGPathAddEllipseInRect") public static function CGPathAddEllipseInRect(path:CGPath, m:Dynamic /*Dynamic*/, rect:CGRect):Dynamic /*Void*/;
  @:native("CGPDFArrayGetInteger") public static function CGPDFArrayGetInteger(array:CGPDFArray, index:Dynamic /*Int*/, value:Int):Dynamic /*Bool*/;
  @:native("CGColorCreateGenericCMYK") public static function CGColorCreateGenericCMYK(cyan:Float, magenta:Float, yellow:Float, black:Float, alpha:Float):CGColor;
  @:native("CFPlugInRegisterFactoryFunctionByName") public static function CFPlugInRegisterFactoryFunctionByName(factoryUUID:Dynamic, plugIn:Dynamic /*__CFBundle*/, functionName:Dynamic):Int;
  @:native("CSIdentityQueryGetTypeID") public static function CSIdentityQueryGetTypeID():Int;
  @:native("LocaleRefFromLocaleString") public static function LocaleRefFromLocaleString(localeString:Dynamic /*Dynamic*/, locale:Dynamic /*OpaqueLocaleRef*/):Int;
  @:native("CFPreferencesSetAppValue") public static function CFPreferencesSetAppValue(key:Dynamic, value:Dynamic, applicationID:Dynamic):Dynamic /*Void*/;
  @:native("GetHandleSize") public static function GetHandleSize(h:Int):Int;
  @:native("U64BitwiseOr") public static function U64BitwiseOr(left:Dynamic, right:Dynamic):Dynamic;
  @:native("CFArrayCreate") public static function CFArrayCreate(allocator:Dynamic, values:Dynamic /*Dynamic*/, numValues:Int, callBacks:Dynamic /*Dynamic*/):Dynamic;
  @:native("KCSetAttribute") public static function KCSetAttribute(item:Dynamic /*KCItemRef*/, attr:Dynamic /*KCAttribute*/):Int;
  @:native("SSLGetProtocolVersionMax") public static function SSLGetProtocolVersionMax(context:Dynamic /*SSLContext*/, maxVersion:Dynamic /*SSLProtocol*/):Int;
  @:native("PMSetFirstPage") public static function PMSetFirstPage(printSettings:Dynamic /*OpaquePMPrintSettings*/, first:Int, lock:Int):Int;
  @:native("S64BitwiseOr") public static function S64BitwiseOr(left:Dynamic, right:Dynamic):Dynamic;
  @:native("YieldToAnyThread") public static function YieldToAnyThread():Int;
  @:native("AddAtomic16") public static function AddAtomic16(amount:Int, address:Int):Int;
  @:native("MPAllocateAligned") public static function MPAllocateAligned(size:Int, alignment:Int, options:Int):Void;
  @:native("CFLocaleGetLanguageLineDirection") public static function CFLocaleGetLanguageLineDirection(isoLangCode:Dynamic):Dynamic /*CFLocaleLanguageDirection*/;
  @:native("ColorSyncProfileCopyTag") public static function ColorSyncProfileCopyTag(prof:Dynamic, signature:Dynamic):Dynamic;
  @:native("GetIconRefVariant") public static function GetIconRefVariant(inIconRef:Dynamic /*OpaqueIconRef*/, inVariant:Int, outTransform:Int):Dynamic /*OpaqueIconRef*/;
  @:native("UCKeyTranslate") public static function UCKeyTranslate(keyLayoutPtr:Dynamic /*Dynamic*/, virtualKeyCode:Int, keyAction:Int, modifierKeyState:Int, keyboardType:Int, keyTranslateOptions:Int, deadKeyState:Int, maxStringLength:Int, actualStringLength:Int, unicodeString:Int):Int;
  @:native("CFTreeSetContext") public static function CFTreeSetContext(tree:Dynamic /*__CFTree*/, context:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CFHTTPMessageSetHeaderFieldValue") public static function CFHTTPMessageSetHeaderFieldValue(message:Dynamic /*__CFHTTPMessage*/, headerField:Dynamic, value:Dynamic):Dynamic /*Void*/;
  @:native("NSRealMemoryAvailable") public static function NSRealMemoryAvailable():Int;
  @:native("FSRefMakePath") public static function FSRefMakePath(ref:Dynamic /*Dynamic*/, path:Int, pathBufferSize:Int):Int;
  @:native("NSDeallocateMemoryPages") public static function NSDeallocateMemoryPages(ptr:Dynamic /*Void*/, bytes:Int):Dynamic /*Void*/;
  @:native("SecCreateSharedWebCredentialPassword") public static function SecCreateSharedWebCredentialPassword():Dynamic;
  @:native("CTFramesetterGetTypeID") public static function CTFramesetterGetTypeID():Int;
  @:native("CFRunLoopObserverGetOrder") public static function CFRunLoopObserverGetOrder(observer:Dynamic /*__CFRunLoopObserver*/):Int;
  @:native("KCDeleteItem") public static function KCDeleteItem(item:Dynamic /*KCItemRef*/):Int;
  @:native("CGPathCloseSubpath") public static function CGPathCloseSubpath(path:CGPath):Dynamic /*Void*/;
  @:native("SecKeyCopyExternalRepresentation") public static function SecKeyCopyExternalRepresentation(key:Dynamic /*__SecKey*/, error:Dynamic /*__CFError*/):Dynamic;
  @:native("SSLGetPeerID") public static function SSLGetPeerID(context:Dynamic /*SSLContext*/, peerID:Dynamic /*Dynamic*/, peerIDLen:Dynamic /*Int*/):Int;
  @:native("CSIdentityGetClass") public static function CSIdentityGetClass(identity:Dynamic /*__CSIdentity*/):Int;
  @:native("SecTrustGetCertificateAtIndex") public static function SecTrustGetCertificateAtIndex(trust:Dynamic /*__SecTrust*/, ix:Int):Dynamic /*__SecCertificate*/;
  @:native("UTTypeCreatePreferredIdentifierForTag") public static function UTTypeCreatePreferredIdentifierForTag(inTagClass:Dynamic, inTag:Dynamic, inConformingToUTI:Dynamic):Dynamic;
  @:native("CVPixelBufferGetBytesPerRow") public static function CVPixelBufferGetBytesPerRow(pixelBuffer:Dynamic /*__CVBuffer*/):Dynamic /*Int*/;
  @:native("CFStringTokenizerCopyCurrentTokenAttribute") public static function CFStringTokenizerCopyCurrentTokenAttribute(tokenizer:Dynamic /*__CFStringTokenizer*/, attribute:Int):Dynamic;
  @:native("NSHashInsertKnownAbsent") public static function NSHashInsertKnownAbsent(table:NSHashTable, pointer:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("AXMakeProcessTrusted") public static function AXMakeProcessTrusted(executablePath:Dynamic):Dynamic /*AXError*/;
  @:native("U64ShiftLeft") public static function U64ShiftLeft(value:Dynamic, shift:Int):Dynamic;
  @:native("InvalidateFolderDescriptorCache") public static function InvalidateFolderDescriptorCache(vRefNum:Int, dirID:Int):Int;
  @:native("CFStringGetLongCharacterForSurrogatePair") public static function CFStringGetLongCharacterForSurrogatePair(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Int;
  @:native("CFPlugInIsLoadOnDemand") public static function CFPlugInIsLoadOnDemand(plugIn:Dynamic /*__CFBundle*/):Int;
  @:native("S64ShiftLeft") public static function S64ShiftLeft(value:Dynamic, shift:Int):Dynamic;
  @:native("UniqueID") public static function UniqueID(theType:Int):Int;
  @:native("GetTaggedCollectionItem") public static function GetTaggedCollectionItem(c:Dynamic /*OpaqueCollection*/, tag:Int, whichItem:Int, itemSize:Int, itemData:Dynamic /*Void*/):Int;
  @:native("CVBufferRemoveAllAttachments") public static function CVBufferRemoveAllAttachments(buffer:Dynamic /*__CVBuffer*/):Dynamic /*Void*/;
  @:native("CFURLGetString") public static function CFURLGetString(anURL:Dynamic):Dynamic;
  @:native("CFStringFindCharacterFromSet") public static function CFStringFindCharacterFromSet(theString:Dynamic, theSet:Dynamic, rangeToSearch:Dynamic /*CFRange*/, searchOptions:Dynamic /*CFStringCompareFlags*/, result:Dynamic /*CFRange*/):Int;
  @:native("IconRefIntersectsCGRect") public static function IconRefIntersectsCGRect(testRect:Dynamic /*Dynamic*/, iconRect:Dynamic /*Dynamic*/, align:Int, iconServicesUsageFlags:Int, theIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("ICGetIndPref") public static function ICGetIndPref(inst:Dynamic /*OpaqueICInstance*/, index:Dynamic /*Int*/, key:Dynamic /*Int*/):Int;
  @:native("CFNetServiceGetProtocolSpecificInformation") public static function CFNetServiceGetProtocolSpecificInformation(theService:Dynamic /*__CFNetService*/):Dynamic;
  @:native("CGRectGetHeight") public static function CGRectGetHeight(rect:CGRect):Float;
  @:native("MDLabelSetAttributes") public static function MDLabelSetAttributes(label:Dynamic /*__MDLabel*/, attrs:Dynamic):Int;
  @:native("CGPDFArrayGetArray") public static function CGPDFArrayGetArray(array:CGPDFArray, index:Dynamic /*Int*/, value:CGPDFArray):Dynamic /*Bool*/;
  @:native("SleepQInstall") public static function SleepQInstall(qRecPtr:Dynamic /*SleepQRec*/):Dynamic /*Void*/;
  @:native("CGRectIsNull") public static function CGRectIsNull(rect:CGRect):Dynamic /*Bool*/;
  @:native("LMGetResErr") public static function LMGetResErr():Int;
  @:native("SKIndexCopyDocumentURLsForDocumentIDs") public static function SKIndexCopyDocumentURLsForDocumentIDs(inIndex:Dynamic /*__SKIndex*/, inCount:Int, inDocumentIDsArray:Int, outDocumentURLsArray:Dynamic):Dynamic /*Void*/;
  @:native("ICDeleteProfile") public static function ICDeleteProfile(inst:Dynamic /*OpaqueICInstance*/, thisID:Int):Int;
  @:native("CFUUIDCreateFromString") public static function CFUUIDCreateFromString(alloc:Dynamic, uuidStr:Dynamic):Dynamic;
  @:native("DecrementAtomic16") public static function DecrementAtomic16(address:Int):Int;
  @:native("CGAffineTransformMakeTranslation") public static function CGAffineTransformMakeTranslation(tx:Float, ty:Float):CGAffineTransform;
  @:native("CFBundleGetPackageInfoInDirectory") public static function CFBundleGetPackageInfoInDirectory(url:Dynamic, packageType:Int, packageCreator:Int):Int;
  @:native("FSEventStreamFlushAsync") public static function FSEventStreamFlushAsync(streamRef:Dynamic /*__FSEventStream*/):Dynamic;
  @:native("LongDoubleToUInt64") public static function LongDoubleToUInt64(value:Dynamic /*Dynamic*/):Dynamic;
  @:native("CFDataSetLength") public static function CFDataSetLength(theData:Dynamic /*__CFData*/, length:Int):Dynamic /*Void*/;
  @:native("SKIndexAddDocument") public static function SKIndexAddDocument(inIndex:Dynamic /*__SKIndex*/, inDocument:Dynamic, inMIMETypeHint:Dynamic, inCanReplace:Int):Int;
  @:native("CTLineGetTypeID") public static function CTLineGetTypeID():Int;
  @:native("NewThreadEntryUPP") public static function NewThreadEntryUPP(userRoutine:Dynamic):Dynamic;
  @:native("FSGetForkPosition") public static function FSGetForkPosition(forkRefNum:Int, position:Dynamic):Int;
  @:native("LMSetSysMap") public static function LMSetSysMap(value:Int):Dynamic /*Void*/;
  @:native("CFStringHasSuffix") public static function CFStringHasSuffix(theString:Dynamic, suffix:Dynamic):Int;
  @:native("CFLocaleGetTypeID") public static function CFLocaleGetTypeID():Int;
  @:native("CFUUIDCreate") public static function CFUUIDCreate(alloc:Dynamic):Dynamic;
  @:native("CGPDFContextEndPage") public static function CGPDFContextEndPage(context:CGContext):Dynamic /*Void*/;
  @:native("CFStringAppendFormat") public static function CFStringAppendFormat(theString:Dynamic /*__CFString*/, formatOptions:Dynamic, format:Dynamic):Dynamic /*Void*/;
  @:native("AEGetParamPtr") public static function AEGetParamPtr(theAppleEvent:Dynamic /*Dynamic*/, theAEKeyword:Int, desiredType:Int, actualType:Int, dataPtr:Dynamic /*Void*/, maximumSize:Int, actualSize:Int):Int;
  @:native("CGLayerGetSize") public static function CGLayerGetSize(layer:CGLayer):CGSize;
  @:native("AddResource") public static function AddResource(theData:Int, theType:Int, theID:Int, name:Dynamic):Dynamic /*Void*/;
  @:native("FlattenCollection") public static function FlattenCollection(c:Dynamic /*OpaqueCollection*/, flattenProc:Dynamic, refCon:Dynamic /*Void*/):Int;
  @:native("FSGetVolumeInfo") public static function FSGetVolumeInfo(volume:Int, volumeIndex:Int, actualVolume:Int, whichInfo:Int, info:Dynamic /*FSVolumeInfo*/, volumeName:Dynamic /*HFSUniStr255*/, rootDirectory:Dynamic /*FSRef*/):Int;
  @:native("CFMessagePortSetName") public static function CFMessagePortSetName(ms:Dynamic /*__CFMessagePort*/, newName:Dynamic):Int;
  @:native("PBCatalogSearchAsync") public static function PBCatalogSearchAsync(paramBlock:Dynamic /*FSCatalogBulkParam*/):Dynamic /*Void*/;
  @:native("ContinueSpeech") public static function ContinueSpeech(chan:Dynamic /*SpeechChannelRecord*/):Int;
  @:native("CVMetalTextureCacheCreate") public static function CVMetalTextureCacheCreate(allocator:Dynamic, cacheAttributes:Dynamic, metalDevice:Dynamic /*MTLDevice*/, textureAttributes:Dynamic, cacheOut:Dynamic /*__CVMetalTextureCache*/):Int;
  @:native("CFDictionaryApplyFunction") public static function CFDictionaryApplyFunction(theDict:Dynamic, applier:Dynamic, context:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("MPExitCriticalRegion") public static function MPExitCriticalRegion(criticalRegion:Dynamic /*OpaqueMPCriticalRegionID*/):Int;
  @:native("DAApprovalSessionGetTypeID") public static function DAApprovalSessionGetTypeID():Int;
  @:native("MPTerminateTask") public static function MPTerminateTask(task:Dynamic /*OpaqueMPTaskID*/, terminationStatus:Int):Int;
  @:native("CSIdentityAuthorityGetTypeID") public static function CSIdentityAuthorityGetTypeID():Int;
  @:native("CFBinaryHeapGetCountOfValue") public static function CFBinaryHeapGetCountOfValue(heap:Dynamic /*__CFBinaryHeap*/, value:Dynamic /*Dynamic*/):Int;
  @:native("CTRunGetTypographicBounds") public static function CTRunGetTypographicBounds(run:Dynamic, range:Dynamic /*CFRange*/, ascent:Float, descent:Float, leading:Float):Dynamic /*Float*/;
  @:native("IconRefContainsCGPoint") public static function IconRefContainsCGPoint(testPt:Dynamic /*Dynamic*/, iconRect:Dynamic /*Dynamic*/, align:Int, iconServicesUsageFlags:Int, theIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("FSFileSecuritySetOwnerUUID") public static function FSFileSecuritySetOwnerUUID(fileSec:Dynamic /*__FSFileSecurity*/, owner:Dynamic /*Dynamic*/):Int;
  @:native("PMGetScale") public static function PMGetScale(pageFormat:Dynamic /*OpaquePMPageFormat*/, scale:Dynamic /*Float*/):Int;
  @:native("CFTreeGetFirstChild") public static function CFTreeGetFirstChild(tree:Dynamic /*__CFTree*/):Dynamic /*__CFTree*/;
  @:native("TECGetDirectTextEncodingConversions") public static function TECGetDirectTextEncodingConversions(availableConversions:Dynamic /*TECConversionInfo*/, maxAvailableConversions:Int, actualAvailableConversions:Int):Int;
  @:native("NewSpeechTextDoneUPP") public static function NewSpeechTextDoneUPP(userRoutine:Dynamic):Dynamic;
  @:native("CFCharacterSetIsSupersetOfSet") public static function CFCharacterSetIsSupersetOfSet(theSet:Dynamic, theOtherset:Dynamic):Int;
  @:native("CFURLCreateCopyAppendingPathComponent") public static function CFURLCreateCopyAppendingPathComponent(allocator:Dynamic, url:Dynamic, pathComponent:Dynamic, isDirectory:Int):Dynamic;
  @:native("FSCopyObjectSync") public static function FSCopyObjectSync(source:Dynamic /*Dynamic*/, destDir:Dynamic /*Dynamic*/, destName:Dynamic, target:Dynamic /*FSRef*/, options:Int):Int;
  @:native("CTFontCreateWithName") public static function CTFontCreateWithName(name:Dynamic, size:Float, matrix:Dynamic /*Dynamic*/):Dynamic;
  @:native("CFCalendarCopyTimeZone") public static function CFCalendarCopyTimeZone(calendar:Dynamic /*__CFCalendar*/):Dynamic;
  @:native("FSIsAliasFile") public static function FSIsAliasFile(fileRef:Dynamic /*Dynamic*/, aliasFileFlag:Int, folderFlag:Int):Int;
  @:native("AEGetArray") public static function AEGetArray(theAEDescList:Dynamic /*Dynamic*/, arrayType:Dynamic, arrayPtr:Dynamic, maximumSize:Int, itemType:Int, itemSize:Int, itemCount:Dynamic /*Int*/):Int;
  @:native("CGContextSetGrayStrokeColor") public static function CGContextSetGrayStrokeColor(c:CGContext, gray:Float, alpha:Float):Dynamic /*Void*/;
  @:native("CFNumberFormatterSetProperty") public static function CFNumberFormatterSetProperty(formatter:Dynamic /*__CFNumberFormatter*/, key:Dynamic, value:Dynamic):Dynamic /*Void*/;
  @:native("UCTypeSelectReleaseSelector") public static function UCTypeSelectReleaseSelector(ref:Dynamic /*OpaqueUCTypeSelectRef*/):Int;
  @:native("SleepQRemove") public static function SleepQRemove(qRecPtr:Dynamic /*SleepQRec*/):Dynamic /*Void*/;
  @:native("NSCountMapTable") public static function NSCountMapTable(table:NSMapTable):Int;
  @:native("LSSharedFileListCopyProperty") public static function LSSharedFileListCopyProperty(inList:Dynamic /*OpaqueLSSharedFileListRef*/, inPropertyName:Dynamic):Dynamic;
  @:native("SSLGetConnection") public static function SSLGetConnection(context:Dynamic /*SSLContext*/, connection:Dynamic):Int;
  @:native("RemoveTimeTask") public static function RemoveTimeTask(tmTaskPtr:Dynamic /*QElem*/):Int;
  @:native("CGContextSetFlatness") public static function CGContextSetFlatness(c:CGContext, flatness:Float):Dynamic /*Void*/;
  @:native("CGImageDestinationCreateWithData") public static function CGImageDestinationCreateWithData(data:Dynamic /*__CFData*/, type:Dynamic, count:Dynamic /*Int*/, options:Dynamic):CGImageDestination;
  @:native("CFNotificationCenterRemoveObserver") public static function CFNotificationCenterRemoveObserver(center:Dynamic /*__CFNotificationCenter*/, observer:Dynamic /*Dynamic*/, name:Dynamic, object:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("UIGraphicsGetImageFromCurrentImageContext") public static function UIGraphicsGetImageFromCurrentImageContext():UIImage;
  @:native("CFConvertFloat64SwappedToHost") public static function CFConvertFloat64SwappedToHost(used:Dynamic /*Dynamic*/):Float;
  @:native("FlattenPartialCollection") public static function FlattenPartialCollection(c:Dynamic /*OpaqueCollection*/, flattenProc:Dynamic, refCon:Dynamic /*Void*/, whichAttributes:Int, matchingAttributes:Int):Int;
  @:native("MPRemoteCall") public static function MPRemoteCall(remoteProc:Dynamic, parameter:Dynamic /*Void*/, context:Int):Dynamic /*Void*/;
  @:native("PMGetOrientation") public static function PMGetOrientation(pageFormat:Dynamic /*OpaquePMPageFormat*/, orientation:Int):Int;
  @:native("InvokeKCCallbackUPP") public static function InvokeKCCallbackUPP(keychainEvent:Int, info:Dynamic /*KCCallbackInfo*/, userContext:Dynamic /*Void*/, userUPP:Dynamic):Int;
  @:native("CFStringConvertEncodingToIANACharSetName") public static function CFStringConvertEncodingToIANACharSetName(encoding:Int):Dynamic;
  @:native("PBDeleteForkAsync") public static function PBDeleteForkAsync(paramBlock:Dynamic /*FSForkIOParam*/):Dynamic /*Void*/;
  @:native("CGPDFArrayGetCount") public static function CGPDFArrayGetCount(array:CGPDFArray):Dynamic /*Int*/;
  @:native("CTRunGetPositionsPtr") public static function CTRunGetPositionsPtr(run:Dynamic):Dynamic /*Dynamic*/;
  @:native("CFCharacterSetGetTypeID") public static function CFCharacterSetGetTypeID():Int;
  @:native("NewAVLDisposeItemUPP") public static function NewAVLDisposeItemUPP(userRoutine:Dynamic):Dynamic;
  @:native("PBFSResolveNodeIDSync") public static function PBFSResolveNodeIDSync(paramBlock:Dynamic /*FSRefParam*/):Int;
  @:native("CTFontGetCapHeight") public static function CTFontGetCapHeight(font:Dynamic):Float;
  @:native("AERemoveEventHandler") public static function AERemoveEventHandler(theAEEventClass:Int, theAEEventID:Int, handler:Dynamic, isSysHandler:Int):Int;
  @:native("CGPDFDocumentCreateWithProvider") public static function CGPDFDocumentCreateWithProvider(provider:CGDataProvider):CGPDFDocument;
  @:native("CFStreamCreatePairWithSocketToNetService") public static function CFStreamCreatePairWithSocketToNetService(alloc:Dynamic, service:Dynamic /*__CFNetService*/, readStream:Dynamic /*__CFReadStream*/, writeStream:Dynamic /*__CFWriteStream*/):Dynamic /*Void*/;
  @:native("SecTrustGetVerifyTime") public static function SecTrustGetVerifyTime(trust:Dynamic /*__SecTrust*/):Float;
  @:native("ReleaseCollection") public static function ReleaseCollection(c:Dynamic /*OpaqueCollection*/):Int;
  @:native("ATSFontFindFromContainer") public static function ATSFontFindFromContainer(iContainer:Int, iOptions:Int, iCount:Int, ioArray:Int, oCount:Int):Int;
  @:native("PMSessionValidatePageFormat") public static function PMSessionValidatePageFormat(printSession:Dynamic /*OpaquePMPrintSession*/, pageFormat:Dynamic /*OpaquePMPageFormat*/, changed:Int):Int;
  @:native("MPUnregisterDebugger") public static function MPUnregisterDebugger(queue:Dynamic /*OpaqueMPQueueID*/):Int;
  @:native("PMGetCopies") public static function PMGetCopies(printSettings:Dynamic /*OpaquePMPrintSettings*/, copies:Int):Int;
  @:native("CFDateGetTypeID") public static function CFDateGetTypeID():Int;
  @:native("AECreateList") public static function AECreateList(factoringPtr:Dynamic /*Dynamic*/, factoredSize:Int, isRecord:Int, resultList:Dynamic /*AEDesc*/):Int;
  @:native("CFReadStreamCreateWithFile") public static function CFReadStreamCreateWithFile(alloc:Dynamic, fileURL:Dynamic):Dynamic /*__CFReadStream*/;
  @:native("BitXorAtomic") public static function BitXorAtomic(mask:Int, address:Int):Int;
  @:native("CFNetServiceScheduleWithRunLoop") public static function CFNetServiceScheduleWithRunLoop(theService:Dynamic /*__CFNetService*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("CGContextFlush") public static function CGContextFlush(c:CGContext):Dynamic /*Void*/;
  @:native("UCConvertLongDateTimeToCFAbsoluteTime") public static function UCConvertLongDateTimeToCFAbsoluteTime(iLongTime:Dynamic, oCFTime:Float):Int;
  @:native("TECFlushMultipleEncodings") public static function TECFlushMultipleEncodings(encodingConverter:Dynamic /*OpaqueTECObjectRef*/, outputBuffer:Int, outputBufferLength:Int, actualOutputLength:Int, outEncodingsBuffer:Dynamic /*TextEncodingRun*/, maxOutEncodingRuns:Int, actualOutEncodingRuns:Int):Int;
  @:native("SSLSetProtocolVersionMax") public static function SSLSetProtocolVersionMax(context:Dynamic /*SSLContext*/, maxVersion:Dynamic /*SSLProtocol*/):Int;
  @:native("AEInstallObjectAccessor") public static function AEInstallObjectAccessor(desiredClass:Int, containerType:Int, theAccessor:Dynamic, accessorRefcon:Void, isSysHandler:Int):Int;
  @:native("CFNetServiceSetTXTData") public static function CFNetServiceSetTXTData(theService:Dynamic /*__CFNetService*/, txtRecord:Dynamic):Int;
  @:native("LSOpenFSRef") public static function LSOpenFSRef(inRef:Dynamic /*Dynamic*/, outLaunchedRef:Dynamic /*FSRef*/):Int;
  @:native("DisposeSleepQUPP") public static function DisposeSleepQUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("SKSummaryCopyParagraphSummaryString") public static function SKSummaryCopyParagraphSummaryString(summary:Dynamic /*__SKSummary*/, numParagraphs:Int):Dynamic;
  @:native("CGPDFOperatorTableCreate") public static function CGPDFOperatorTableCreate():CGPDFOperatorTable;
  @:native("CFTimeZoneGetSecondsFromGMT") public static function CFTimeZoneGetSecondsFromGMT(tz:Dynamic, at:Float):Float;
  @:native("FSFileSecurityGetGroup") public static function FSFileSecurityGetGroup(fileSec:Dynamic /*__FSFileSecurity*/, group:Int):Int;
  @:native("CGFontGetGlyphWithGlyphName") public static function CGFontGetGlyphWithGlyphName(font:CGFont, name:Dynamic):Int;
  @:native("CTRunGetStringIndicesPtr") public static function CTRunGetStringIndicesPtr(run:Dynamic):Dynamic /*Dynamic*/;
  @:native("NewSpeechDoneUPP") public static function NewSpeechDoneUPP(userRoutine:Dynamic):Dynamic;
  @:native("UIRectFillUsingBlendMode") public static function UIRectFillUsingBlendMode(rect:CGRect, blendMode:CGBlendMode):Dynamic /*Void*/;
  @:native("CFURLGetFSRef") public static function CFURLGetFSRef(url:Dynamic, fsRef:Dynamic /*FSRef*/):Int;
  @:native("CGContextStrokePath") public static function CGContextStrokePath(c:CGContext):Dynamic /*Void*/;
  @:native("IOSurfaceRemoveAllValues") public static function IOSurfaceRemoveAllValues(buffer:Dynamic /*__IOSurface*/):Dynamic /*Void*/;
  @:native("CFBundleCopyLocalizationsForPreferences") public static function CFBundleCopyLocalizationsForPreferences(locArray:Dynamic, prefArray:Dynamic):Dynamic;
  @:native("CloseComponent") public static function CloseComponent(aComponentInstance:Dynamic /*ComponentInstanceRecord*/):Int;
  @:native("IOSurfaceGetBaseAddressOfPlane") public static function IOSurfaceGetBaseAddressOfPlane(buffer:Dynamic /*__IOSurface*/, planeIndex:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("CFNetServiceBrowserGetTypeID") public static function CFNetServiceBrowserGetTypeID():Int;
  @:native("FNNotify") public static function FNNotify(ref:Dynamic /*Dynamic*/, message:Int, flags:Int):Int;
  @:native("FSCopyURLForVolume") public static function FSCopyURLForVolume(vRefNum:Int, url:Dynamic):Int;
  @:native("CGLayerGetContext") public static function CGLayerGetContext(layer:CGLayer):CGContext;
  @:native("SSLSetPeerID") public static function SSLSetPeerID(context:Dynamic /*SSLContext*/, peerID:Dynamic /*Dynamic*/, peerIDLen:Dynamic /*Int*/):Int;
  @:native("CFNumberGetByteSize") public static function CFNumberGetByteSize(number:Dynamic):Int;
  @:native("CFPreferencesAddSuitePreferencesToApp") public static function CFPreferencesAddSuitePreferencesToApp(applicationID:Dynamic, suiteID:Dynamic):Dynamic /*Void*/;
  @:native("NSSwapLittleDoubleToHost") public static function NSSwapLittleDoubleToHost(used:Dynamic /*Dynamic*/):Dynamic /*Float*/;
  @:native("NewPtr") public static function NewPtr(byteCount:Int):Int;
  @:native("CGPathAddPath") public static function CGPathAddPath(path1:CGPath, m:Dynamic /*Dynamic*/, path2:Dynamic):Dynamic /*Void*/;
  @:native("MDQuerySetSortComparatorBlock") public static function MDQuerySetSortComparatorBlock(query:Dynamic /*__MDQuery*/, comparator:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CGColorSpaceCreateDeviceRGB") public static function CGColorSpaceCreateDeviceRGB():CGColorSpace;
  @:native("CFSocketStreamSOCKSGetErrorSubdomain") public static function CFSocketStreamSOCKSGetErrorSubdomain(used:Dynamic /*Dynamic*/):Int;
  @:native("MPCreateCriticalRegion") public static function MPCreateCriticalRegion(criticalRegion:Dynamic /*OpaqueMPCriticalRegionID*/):Int;
  @:native("U64Subtract") public static function U64Subtract(left:Dynamic, right:Dynamic):Dynamic;
  @:native("RegisterIconRefFromFSRef") public static function RegisterIconRefFromFSRef(creator:Int, iconType:Int, iconFile:Dynamic /*Dynamic*/, theIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("UCGetCollationKey") public static function UCGetCollationKey(collatorRef:Dynamic /*OpaqueCollatorRef*/, textPtr:Dynamic /*Dynamic*/, textLength:Int, maxKeySize:Int, actualKeySize:Int, collationKey:Int):Int;
  @:native("KCCountKeychains") public static function KCCountKeychains():Int;
  @:native("S64Subtract") public static function S64Subtract(left:Dynamic, right:Dynamic):Dynamic;
  @:native("ATSFontFamilyFindFromName") public static function ATSFontFamilyFindFromName(iName:Dynamic, iOptions:Int):Int;
  @:native("NewSpeechErrorUPP") public static function NewSpeechErrorUPP(userRoutine:Dynamic):Dynamic;
  @:native("CFStringUppercase") public static function CFStringUppercase(theString:Dynamic /*__CFString*/, locale:Dynamic):Dynamic /*Void*/;
  @:native("PMSessionCreatePrinterList") public static function PMSessionCreatePrinterList(printSession:Dynamic /*OpaquePMPrintSession*/, printerList:Dynamic, currentIndex:Int, currentPrinter:Dynamic /*OpaquePMPrinter*/):Int;
  @:native("MPCurrentTaskID") public static function MPCurrentTaskID():Dynamic /*OpaqueMPTaskID*/;
  @:native("LSCopyKindStringForMIMEType") public static function LSCopyKindStringForMIMEType(inMIMEType:Dynamic, outKindString:Dynamic):Int;
  @:native("CGPDFDictionaryGetDictionary") public static function CGPDFDictionaryGetDictionary(dict:CGPDFDictionary, key:Dynamic /*Dynamic*/, value:CGPDFDictionary):Dynamic /*Bool*/;
  @:native("PBCloseIteratorSync") public static function PBCloseIteratorSync(paramBlock:Dynamic /*FSCatalogBulkParam*/):Int;
  @:native("CFConvertFloat32HostToSwapped") public static function CFConvertFloat32HostToSwapped(used:Dynamic /*Dynamic*/):Dynamic /*CFSwappedFloat32*/;
  @:native("CFURLCreateAbsoluteURLWithBytes") public static function CFURLCreateAbsoluteURLWithBytes(alloc:Dynamic, relativeURLBytes:Dynamic /*Dynamic*/, length:Int, encoding:Int, baseURL:Dynamic, useCompatibilityMode:Int):Dynamic;
  @:native("CFAttributedStringGetString") public static function CFAttributedStringGetString(aStr:Dynamic):Dynamic;
  @:native("HIShapeUnionWithRect") public static function HIShapeUnionWithRect(inShape:Dynamic /*__HIShape*/, inRect:Dynamic /*Dynamic*/):Int;
  @:native("CFRunLoopAddCommonMode") public static function CFRunLoopAddCommonMode(rl:Dynamic /*__CFRunLoop*/, mode:Dynamic):Dynamic /*Void*/;
  @:native("NSCopyMemoryPages") public static function NSCopyMemoryPages(source:Dynamic /*Dynamic*/, dest:Dynamic /*Void*/, bytes:Int):Dynamic /*Void*/;
  @:native("CTFontCollectionCreateFromAvailableFonts") public static function CTFontCollectionCreateFromAvailableFonts(options:Dynamic):Dynamic;
  @:native("CFDataAppendBytes") public static function CFDataAppendBytes(theData:Dynamic /*__CFData*/, bytes:Dynamic /*Dynamic*/, length:Int):Dynamic /*Void*/;
  @:native("CGPathContainsPoint") public static function CGPathContainsPoint(path:Dynamic, m:Dynamic /*Dynamic*/, point:CGPoint, eoFill:Dynamic /*Bool*/):Dynamic /*Bool*/;
  @:native("ColorSyncProfileGetTypeID") public static function ColorSyncProfileGetTypeID():Int;
  @:native("Gestalt") public static function Gestalt(selector:Int, response:Int):Int;
  @:native("PMPrinterCopyPresets") public static function PMPrinterCopyPresets(printer:Dynamic /*OpaquePMPrinter*/, presetList:Dynamic):Int;
  @:native("SKSearchGroupGetTypeID") public static function SKSearchGroupGetTypeID():Int;
  @:native("ATSFontGetFileReference") public static function ATSFontGetFileReference(iFont:Int, oFile:Dynamic /*FSRef*/):Int;
  @:native("ICEditPreferences") public static function ICEditPreferences(inst:Dynamic /*OpaqueICInstance*/, key:Dynamic):Int;
  @:native("CGPathEqualToPath") public static function CGPathEqualToPath(path1:Dynamic, path2:Dynamic):Dynamic /*Bool*/;
  @:native("CFArraySortValues") public static function CFArraySortValues(theArray:Dynamic /*__CFArray*/, range:Dynamic /*CFRange*/, comparator:Dynamic, context:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("CallComponentGetPublicResource") public static function CallComponentGetPublicResource(ci:Dynamic /*ComponentInstanceRecord*/, resourceType:Int, resourceID:Int, resource:Int):Int;
  @:native("WSMethodInvocationAddDeserializationOverride") public static function WSMethodInvocationAddDeserializationOverride(invocation:Dynamic /*OpaqueWSMethodInvocationRef*/, typeNamespace:Dynamic, typeName:Dynamic, deserializationProc:Dynamic, context:Dynamic /*WSClientContext*/):Dynamic /*Void*/;
  @:native("CGPDFObjectGetValue") public static function CGPDFObjectGetValue(object:CGPDFObject, type:CGPDFObjectType, value:Dynamic /*Void*/):Dynamic /*Bool*/;
  @:native("FSMountLocalVolumeAsync") public static function FSMountLocalVolumeAsync(diskID:Dynamic, mountDir:Dynamic, volumeOp:Dynamic /*OpaqueFSVolumeOperation*/, clientData:Dynamic /*Void*/, flags:Int, callback:Dynamic, runloop:Dynamic /*__CFRunLoop*/, runloopMode:Dynamic):Int;
  @:native("LSOpenFromURLSpec") public static function LSOpenFromURLSpec(inLaunchSpec:Dynamic /*Dynamic*/, outLaunchedURL:Dynamic):Int;
  @:native("BitXorAtomic16") public static function BitXorAtomic16(mask:Int, address:Int):Int;
  @:native("ConvertFromPStringToUnicode") public static function ConvertFromPStringToUnicode(iTextToUnicodeInfo:Dynamic /*OpaqueTextToUnicodeInfo*/, iPascalStr:Dynamic, iOutputBufLen:Int, oUnicodeLen:Int, oUnicodeStr:Int):Int;
  @:native("CFNumberFormatterGetFormat") public static function CFNumberFormatterGetFormat(formatter:Dynamic /*__CFNumberFormatter*/):Dynamic;
  @:native("CFSetContainsValue") public static function CFSetContainsValue(theSet:Dynamic, value:Dynamic /*Dynamic*/):Int;
  @:native("CTFontGetLigatureCaretPositions") public static function CTFontGetLigatureCaretPositions(font:Dynamic, glyph:Int, positions:Float, maxPositions:Int):Int;
  @:native("FSCreateDirectoryUnicode") public static function FSCreateDirectoryUnicode(parentRef:Dynamic /*Dynamic*/, nameLength:Int, name:Dynamic /*Dynamic*/, whichInfo:Int, catalogInfo:Dynamic /*Dynamic*/, newRef:Dynamic /*FSRef*/, newSpec:Dynamic /*FSSpec*/, newDirID:Int):Int;
  @:native("CallComponentFunction") public static function CallComponentFunction(params:Dynamic /*ComponentParameters*/, func:Dynamic):Int;
  @:native("BitAndAtomic8") public static function BitAndAtomic8(mask:Int, address:Int):Int;
  @:native("CGContextSetFont") public static function CGContextSetFont(c:CGContext, font:CGFont):Dynamic /*Void*/;
  @:native("MDLabelCreate") public static function MDLabelCreate(allocator:Dynamic, displayName:Dynamic, kind:Dynamic, domain:Dynamic /*MDLabelDomain*/):Dynamic /*__MDLabel*/;
  @:native("CFHTTPMessageCopyResponseStatusLine") public static function CFHTTPMessageCopyResponseStatusLine(response:Dynamic /*__CFHTTPMessage*/):Dynamic;
  @:native("LSSetExtensionHiddenForURL") public static function LSSetExtensionHiddenForURL(inURL:Dynamic, inHide:Int):Int;
  @:native("IOSurfaceGetHeightOfPlane") public static function IOSurfaceGetHeightOfPlane(buffer:Dynamic /*__IOSurface*/, planeIndex:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("CFStringConvertEncodingToWindowsCodepage") public static function CFStringConvertEncodingToWindowsCodepage(encoding:Int):Int;
  @:native("LocaleGetIndName") public static function LocaleGetIndName(locale:Dynamic /*OpaqueLocaleRef*/, opVariant:Int, nameMask:Int, nameIndex:Int, maxNameLen:Int, actualNameLen:Int, displayName:Int, displayLocale:Dynamic /*OpaqueLocaleRef*/):Int;
  @:native("CFWriteStreamGetTypeID") public static function CFWriteStreamGetTypeID():Int;
  @:native("AcquireIconRef") public static function AcquireIconRef(theIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("CFLocaleCopyDisplayNameForPropertyValue") public static function CFLocaleCopyDisplayNameForPropertyValue(displayLocale:Dynamic, key:Dynamic, value:Dynamic):Dynamic;
  @:native("LSSharedFileListCopySnapshot") public static function LSSharedFileListCopySnapshot(inList:Dynamic /*OpaqueLSSharedFileListRef*/, outSnapshotSeed:Int):Dynamic;
  @:native("CFMessagePortInvalidate") public static function CFMessagePortInvalidate(ms:Dynamic /*__CFMessagePort*/):Dynamic /*Void*/;
  @:native("IOSurfaceGetBaseAddress") public static function IOSurfaceGetBaseAddress(buffer:Dynamic /*__IOSurface*/):Dynamic /*Void*/;
  @:native("UInt64ToSInt64") public static function UInt64ToSInt64(value:Dynamic):Dynamic;
  @:native("CGPDFScannerRelease") public static function CGPDFScannerRelease(scanner:CGPDFScanner):Dynamic /*Void*/;
  @:native("AEDeleteParam") public static function AEDeleteParam(theAppleEvent:Dynamic /*AEDesc*/, theAEKeyword:Int):Int;
  @:native("LSGetApplicationForInfo") public static function LSGetApplicationForInfo(inType:Int, inCreator:Int, inExtension:Dynamic, inRoleMask:Dynamic /*LSRolesMask*/, outAppRef:Dynamic /*FSRef*/, outAppURL:Dynamic):Int;
  @:native("LSCopyItemAttributes") public static function LSCopyItemAttributes(inItem:Dynamic /*Dynamic*/, inRoles:Dynamic /*LSRolesMask*/, inAttributeNames:Dynamic, outValues:Dynamic):Int;
  @:native("CSIdentityQueryStop") public static function CSIdentityQueryStop(query:Dynamic /*__CSIdentityQuery*/):Dynamic /*Void*/;
  @:native("SKIndexCopyTermIDArrayForDocumentID") public static function SKIndexCopyTermIDArrayForDocumentID(inIndex:Dynamic /*__SKIndex*/, inDocumentID:Int):Dynamic;
  @:native("CFNotificationCenterPostNotificationWithOptions") public static function CFNotificationCenterPostNotificationWithOptions(center:Dynamic /*__CFNotificationCenter*/, name:Dynamic, object:Dynamic /*Dynamic*/, userInfo:Dynamic, options:Int):Dynamic /*Void*/;
  @:native("SecTrustGetTrustResult") public static function SecTrustGetTrustResult(trust:Dynamic /*__SecTrust*/, result:Dynamic /*SecTrustResultType*/):Int;
  @:native("CFNetServiceRegisterWithOptions") public static function CFNetServiceRegisterWithOptions(theService:Dynamic /*__CFNetService*/, options:Int, error:Dynamic /*CFStreamError*/):Int;
  @:native("CGDataProviderCreateWithCFData") public static function CGDataProviderCreateWithCFData(data:Dynamic):CGDataProvider;
  @:native("UIOffsetFromString") public static function UIOffsetFromString(string:NSString):UIOffset;
  @:native("CGPDFContextSetDestinationForRect") public static function CGPDFContextSetDestinationForRect(context:CGContext, name:Dynamic, rect:CGRect):Dynamic /*Void*/;
  @:native("LSSharedFileListItemCopyDisplayName") public static function LSSharedFileListItemCopyDisplayName(inItem:Dynamic /*OpaqueLSSharedFileListItemRef*/):Dynamic;
  @:native("CGContextDrawLayerAtPoint") public static function CGContextDrawLayerAtPoint(context:CGContext, point:CGPoint, layer:CGLayer):Dynamic /*Void*/;
  @:native("CFSetRemoveValue") public static function CFSetRemoveValue(theSet:Dynamic /*__CFSet*/, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("ATSGetGeneration") public static function ATSGetGeneration():Int;
  @:native("CFNumberFormatterGetStyle") public static function CFNumberFormatterGetStyle(formatter:Dynamic /*__CFNumberFormatter*/):Dynamic /*CFNumberFormatterStyle*/;
  @:native("SysError") public static function SysError(errorCode:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("CFNumberFormatterSetFormat") public static function CFNumberFormatterSetFormat(formatter:Dynamic /*__CFNumberFormatter*/, formatString:Dynamic):Dynamic /*Void*/;
  @:native("U64BitwiseNot") public static function U64BitwiseNot(value:Dynamic):Dynamic;
  @:native("PLstrncat") public static function PLstrncat(str1:Int, append:Dynamic, num:Dynamic /*Int*/):Int;
  @:native("CFHTTPMessageApplyCredentialDictionary") public static function CFHTTPMessageApplyCredentialDictionary(request:Dynamic /*__CFHTTPMessage*/, auth:Dynamic /*_CFHTTPAuthentication*/, dict:Dynamic, error:Dynamic /*CFStreamError*/):Int;
  @:native("DisposeTextToUnicodeInfo") public static function DisposeTextToUnicodeInfo(ioTextToUnicodeInfo:Dynamic /*OpaqueTextToUnicodeInfo*/):Int;
  @:native("CSIdentityRemoveMember") public static function CSIdentityRemoveMember(group:Dynamic /*__CSIdentity*/, member:Dynamic /*__CSIdentity*/):Dynamic /*Void*/;
  @:native("SSLSetConnection") public static function SSLSetConnection(context:Dynamic /*SSLContext*/, connection:Dynamic):Int;
  @:native("CTFramesetterGetTypesetter") public static function CTFramesetterGetTypesetter(framesetter:Dynamic):Dynamic;
  @:native("S64BitwiseNot") public static function S64BitwiseNot(value:Dynamic):Dynamic;
  @:native("CTFontManagerCreateFontRequestRunLoopSource") public static function CTFontManagerCreateFontRequestRunLoopSource(sourceOrder:Int, createMatchesCallback:Dynamic /*Dynamic*/):Dynamic /*__CFRunLoopSource*/;
  @:native("CFDictionaryReplaceValue") public static function CFDictionaryReplaceValue(theDict:Dynamic /*__CFDictionary*/, key:Dynamic /*Dynamic*/, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CTFontManagerUnregisterFontsForURLs") public static function CTFontManagerUnregisterFontsForURLs(fontURLs:Dynamic, scope:Dynamic /*CTFontManagerScope*/, errors:Dynamic):Dynamic /*Bool*/;
  @:native("CFHostGetTypeID") public static function CFHostGetTypeID():Int;
  @:native("NSStringFromHashTable") public static function NSStringFromHashTable(table:NSHashTable):NSString;
  @:native("CGImageGetShouldInterpolate") public static function CGImageGetShouldInterpolate(image:CGImage):Dynamic /*Bool*/;
  @:native("GetVoiceInfo") public static function GetVoiceInfo(voice:Dynamic /*Dynamic*/, selector:Int, voiceInfo:Dynamic /*Void*/):Int;
  @:native("CVPixelBufferCreateWithBytes") public static function CVPixelBufferCreateWithBytes(allocator:Dynamic, width:Dynamic /*Int*/, height:Dynamic /*Int*/, pixelFormatType:Int, baseAddress:Dynamic /*Void*/, bytesPerRow:Dynamic /*Int*/, releaseCallback:Dynamic, releaseRefCon:Dynamic /*Void*/, pixelBufferAttributes:Dynamic, pixelBufferOut:Dynamic /*__CVBuffer*/):Int;
  @:native("AERemoteProcessResolverScheduleWithRunLoop") public static function AERemoteProcessResolverScheduleWithRunLoop(ref:Dynamic /*AERemoteProcessResolver*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic, callback:Dynamic, ctx:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CFHTTPMessageCopyRequestMethod") public static function CFHTTPMessageCopyRequestMethod(request:Dynamic /*__CFHTTPMessage*/):Dynamic;
  @:native("CGImageGetBytesPerRow") public static function CGImageGetBytesPerRow(image:CGImage):Dynamic /*Int*/;
  @:native("CFAttributedStringCreateCopy") public static function CFAttributedStringCreateCopy(alloc:Dynamic, aStr:Dynamic):Dynamic;
  @:native("PBOpenIteratorSync") public static function PBOpenIteratorSync(paramBlock:Dynamic /*FSCatalogBulkParam*/):Int;
  @:native("CFRunLoopObserverCreateWithHandler") public static function CFRunLoopObserverCreateWithHandler(allocator:Dynamic, activities:Int, repeats:Int, order:Int, block:Dynamic /*Dynamic*/):Dynamic /*__CFRunLoopObserver*/;
  @:native("CFReadStreamGetBuffer") public static function CFReadStreamGetBuffer(stream:Dynamic /*__CFReadStream*/, maxBytesToRead:Int, numBytesRead:Int):Dynamic /*Dynamic*/;
  @:native("CTFontCopyFullName") public static function CTFontCopyFullName(font:Dynamic):Dynamic;
  @:native("CountComponentInstances") public static function CountComponentInstances(aComponent:Dynamic /*ComponentRecord*/):Dynamic /*Int*/;
  @:native("CVPixelBufferRetain") public static function CVPixelBufferRetain(texture:Dynamic /*__CVBuffer*/):Dynamic /*__CVBuffer*/;
  @:native("CVPixelBufferGetBytesPerRowOfPlane") public static function CVPixelBufferGetBytesPerRowOfPlane(pixelBuffer:Dynamic /*__CVBuffer*/, planeIndex:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("CFStringGetPascalString") public static function CFStringGetPascalString(theString:Dynamic, buffer:Int, bufferSize:Int, encoding:Int):Int;
  @:native("DisposeHandle") public static function DisposeHandle(h:Int):Dynamic /*Void*/;
  @:native("NewAVLItemSizeUPP") public static function NewAVLItemSizeUPP(userRoutine:Dynamic):Dynamic;
  @:native("CSIdentityGetAuthority") public static function CSIdentityGetAuthority(identity:Dynamic /*__CSIdentity*/):Dynamic /*__CSIdentityAuthority*/;
  @:native("CFPropertyListCreateWithStream") public static function CFPropertyListCreateWithStream(allocator:Dynamic, stream:Dynamic /*__CFReadStream*/, streamLength:Int, options:Int, format:Dynamic /*CFPropertyListFormat*/, error:Dynamic /*__CFError*/):Dynamic;
  @:native("ICCountPref") public static function ICCountPref(inst:Dynamic /*OpaqueICInstance*/, count:Dynamic /*Int*/):Int;
  @:native("U64SetU") public static function U64SetU(value:Int):Dynamic;
  @:native("MPCreateNotification") public static function MPCreateNotification(notificationID:Dynamic /*OpaqueMPNotificationID*/):Int;
  @:native("CFBundleCopySupportFilesDirectoryURL") public static function CFBundleCopySupportFilesDirectoryURL(bundle:Dynamic /*__CFBundle*/):Dynamic;
  @:native("S64SetU") public static function S64SetU(value:Int):Dynamic;
  @:native("FSNewAliasUnicode") public static function FSNewAliasUnicode(fromFile:Dynamic /*Dynamic*/, targetParentRef:Dynamic /*Dynamic*/, targetNameLength:Int, targetName:Dynamic /*Dynamic*/, inAlias:Dynamic /*AliasRecord*/, isDirectory:Int):Int;
  @:native("CGFontGetTypeID") public static function CGFontGetTypeID():Int;
  @:native("TransformProcessType") public static function TransformProcessType(psn:Dynamic /*Dynamic*/, transformState:Int):Int;
  @:native("IOSurfaceCopyValue") public static function IOSurfaceCopyValue(buffer:Dynamic /*__IOSurface*/, key:Dynamic):Dynamic;
  @:native("CFDateFormatterGetTypeID") public static function CFDateFormatterGetTypeID():Int;
  @:native("MPCreateEvent") public static function MPCreateEvent(event:Dynamic /*OpaqueMPEventID*/):Int;
  @:native("CTFontGetBoundingBox") public static function CTFontGetBoundingBox(font:Dynamic):CGRect;
  @:native("AEDisposeToken") public static function AEDisposeToken(theToken:Dynamic /*AEDesc*/):Int;
  @:native("CFTreeGetChildren") public static function CFTreeGetChildren(tree:Dynamic /*__CFTree*/, children:Dynamic /*__CFTree*/):Dynamic /*Void*/;
  @:native("FSCopyObjectAsync") public static function FSCopyObjectAsync(fileOp:Dynamic /*__FSFileOperation*/, source:Dynamic /*Dynamic*/, destDir:Dynamic /*Dynamic*/, destName:Dynamic, flags:Int, callback:Dynamic, statusChangeInterval:Float, clientContext:Dynamic /*FSFileOperationClientContext*/):Int;
  @:native("AbsoluteToDuration") public static function AbsoluteToDuration(absoluteTime:Dynamic /*UnsignedWide*/):Int;
  @:native("RemoveIconRefOverride") public static function RemoveIconRefOverride(theIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("TECGetWebTextEncodings") public static function TECGetWebTextEncodings(locale:Int, availableEncodings:Int, maxAvailableEncodings:Int, actualAvailableEncodings:Int):Int;
  @:native("AEStreamOptionalParam") public static function AEStreamOptionalParam(ref:Dynamic /*OpaqueAEStreamRef*/, key:Int):Int;
  @:native("CGImageMetadataTagCopyName") public static function CGImageMetadataTagCopyName(tag:CGImageMetadataTag):Dynamic;
  @:native("SecKeyCopyAttributes") public static function SecKeyCopyAttributes(key:Dynamic /*__SecKey*/):Dynamic;
  @:native("GetThreadStateGivenTaskRef") public static function GetThreadStateGivenTaskRef(threadTRef:Void, threadToGet:Int, threadState:Int):Int;
  @:native("CGRectGetMidX") public static function CGRectGetMidX(rect:CGRect):Float;
  @:native("CFURLEnumeratorSkipDescendents") public static function CFURLEnumeratorSkipDescendents(enumerator:Dynamic):Dynamic /*Void*/;
  @:native("UCTypeSelectFindItem") public static function UCTypeSelectFindItem(ref:Dynamic /*OpaqueUCTypeSelectRef*/, listSize:Int, listDataPtr:Dynamic /*Void*/, refcon:Dynamic /*Void*/, userUPP:Dynamic, closestItem:Int):Int;
  @:native("FSFileSecuritySetOwner") public static function FSFileSecuritySetOwner(fileSec:Dynamic /*__FSFileSecurity*/, owner:Int):Int;
  @:native("DisposeFolderManagerNotificationUPP") public static function DisposeFolderManagerNotificationUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("UpgradeScriptInfoToTextEncoding") public static function UpgradeScriptInfoToTextEncoding(iTextScriptID:Int, iTextLanguageID:Int, iRegionID:Int, iTextFontname:Dynamic, oEncoding:Int):Int;
  @:native("CGPDFScannerPopName") public static function CGPDFScannerPopName(scanner:CGPDFScanner, value:Dynamic /*Dynamic*/):Dynamic /*Bool*/;
  @:native("NewHandleClear") public static function NewHandleClear(byteCount:Int):Int;
  @:native("CFHTTPAuthenticationRequiresUserNameAndPassword") public static function CFHTTPAuthenticationRequiresUserNameAndPassword(auth:Dynamic /*_CFHTTPAuthentication*/):Int;
  @:native("CGContextSetGrayFillColor") public static function CGContextSetGrayFillColor(c:CGContext, gray:Float, alpha:Float):Dynamic /*Void*/;
  @:native("CFPreferencesSynchronize") public static function CFPreferencesSynchronize(applicationID:Dynamic, userName:Dynamic, hostName:Dynamic):Int;
  @:native("CFNetServiceGetType") public static function CFNetServiceGetType(theService:Dynamic /*__CFNetService*/):Dynamic;
  @:native("CFPropertyListIsValid") public static function CFPropertyListIsValid(plist:Dynamic, format:Dynamic /*CFPropertyListFormat*/):Int;
  @:native("DisposeResErrUPP") public static function DisposeResErrUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("WSMethodInvocationInvoke") public static function WSMethodInvocationInvoke(invocation:Dynamic /*OpaqueWSMethodInvocationRef*/):Dynamic;
  @:native("ICMapEntriesFilename") public static function ICMapEntriesFilename(inst:Dynamic /*OpaqueICInstance*/, entries:Int, filename:Dynamic, entry:Dynamic /*ICMapEntry*/):Int;
  @:native("FSEventStreamUnscheduleFromRunLoop") public static function FSEventStreamUnscheduleFromRunLoop(streamRef:Dynamic /*__FSEventStream*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("MPSetTaskStorageValue") public static function MPSetTaskStorageValue(taskIndex:Int, value:Void):Int;
  @:native("TECConvertText") public static function TECConvertText(encodingConverter:Dynamic /*OpaqueTECObjectRef*/, inputBuffer:Dynamic, inputBufferLength:Int, actualInputLength:Int, outputBuffer:Int, outputBufferLength:Int, actualOutputLength:Int):Int;
  @:native("CGPDFDocumentAllowsPrinting") public static function CGPDFDocumentAllowsPrinting(document:CGPDFDocument):Dynamic /*Bool*/;
  @:native("CGImageMetadataTagCopyValue") public static function CGImageMetadataTagCopyValue(tag:CGImageMetadataTag):Dynamic;
  @:native("DisposeFSVolumeUnmountUPP") public static function DisposeFSVolumeUnmountUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("DisposeOSLMarkUPP") public static function DisposeOSLMarkUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CSCopyMachineName") public static function CSCopyMachineName():Dynamic;
  @:native("AEGetDescDataRange") public static function AEGetDescDataRange(dataDesc:Dynamic /*Dynamic*/, buffer:Dynamic /*Void*/, offset:Int, length:Int):Int;
  @:native("CVPixelBufferIsPlanar") public static function CVPixelBufferIsPlanar(pixelBuffer:Dynamic /*__CVBuffer*/):Int;
  @:native("PMSessionDefaultPageFormat") public static function PMSessionDefaultPageFormat(printSession:Dynamic /*OpaquePMPrintSession*/, pageFormat:Dynamic /*OpaquePMPageFormat*/):Int;
  @:native("CFPlugInRegisterFactoryFunction") public static function CFPlugInRegisterFactoryFunction(factoryUUID:Dynamic, func:Dynamic):Int;
  @:native("CFCalendarDecomposeAbsoluteTime") public static function CFCalendarDecomposeAbsoluteTime(calendar:Dynamic /*__CFCalendar*/, at:Float, componentDesc:Dynamic /*Dynamic*/):Int;
  @:native("CTFontDescriptorCreateMatchingFontDescriptor") public static function CTFontDescriptorCreateMatchingFontDescriptor(descriptor:Dynamic, mandatoryAttributes:Dynamic):Dynamic;
  @:native("CFPreferencesCopyApplicationList") public static function CFPreferencesCopyApplicationList(userName:Dynamic, hostName:Dynamic):Dynamic;
  @:native("FSResourceFileAlreadyOpen") public static function FSResourceFileAlreadyOpen(resourceFileRef:Dynamic /*Dynamic*/, inChain:Int, refNum:Int):Int;
  @:native("CFCharacterSetAddCharactersInString") public static function CFCharacterSetAddCharactersInString(theSet:Dynamic /*__CFCharacterSet*/, theString:Dynamic):Dynamic /*Void*/;
  @:native("CFPreferencesSetValue") public static function CFPreferencesSetValue(key:Dynamic, value:Dynamic, applicationID:Dynamic, userName:Dynamic, hostName:Dynamic):Dynamic /*Void*/;
  @:native("ReadIconFromFSRef") public static function ReadIconFromFSRef(ref:Dynamic /*Dynamic*/, iconFamily:Dynamic /*IconFamilyResource*/):Int;
  @:native("PBGetCatalogInfoBulkSync") public static function PBGetCatalogInfoBulkSync(paramBlock:Dynamic /*FSCatalogBulkParam*/):Int;
  @:native("CVPixelBufferPoolRetain") public static function CVPixelBufferPoolRetain(pixelBufferPool:Dynamic /*__CVPixelBufferPool*/):Dynamic /*__CVPixelBufferPool*/;
  @:native("PMPaperIsCustom") public static function PMPaperIsCustom(paper:Dynamic /*OpaquePMPaper*/):Int;
  @:native("NSMapGet") public static function NSMapGet(table:NSMapTable, key:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("InsertResourceFile") public static function InsertResourceFile(refNum:Int, where:Int):Int;
  @:native("CGContextAddEllipseInRect") public static function CGContextAddEllipseInRect(c:CGContext, rect:CGRect):Dynamic /*Void*/;
  @:native("InvokeSpeechDoneUPP") public static function InvokeSpeechDoneUPP(chan:Dynamic /*SpeechChannelRecord*/, refCon:Void, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CFMessagePortIsValid") public static function CFMessagePortIsValid(ms:Dynamic /*__CFMessagePort*/):Int;
  @:native("CFReadStreamOpen") public static function CFReadStreamOpen(stream:Dynamic /*__CFReadStream*/):Int;
  @:native("CFMessagePortGetInvalidationCallBack") public static function CFMessagePortGetInvalidationCallBack(ms:Dynamic /*__CFMessagePort*/):Dynamic;
  @:native("CFHostCreateWithName") public static function CFHostCreateWithName(allocator:Dynamic, hostname:Dynamic):Dynamic /*__CFHost*/;
  @:native("SecTrustCopyResult") public static function SecTrustCopyResult(trust:Dynamic /*__SecTrust*/):Dynamic;
  @:native("NSStringFromRange") public static function NSStringFromRange(range:Dynamic /*_NSRange*/):NSString;
  @:native("CFErrorGetDomain") public static function CFErrorGetDomain(err:Dynamic /*__CFError*/):Dynamic;
  @:native("CFDateGetAbsoluteTime") public static function CFDateGetAbsoluteTime(theDate:Dynamic):Float;
  @:native("SetResLoad") public static function SetResLoad(load:Int):Dynamic /*Void*/;
  @:native("DisposeDebuggerThreadSchedulerUPP") public static function DisposeDebuggerThreadSchedulerUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("UIEdgeInsetsInsetRect") public static function UIEdgeInsetsInsetRect(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):CGRect;
  @:native("CFFileSecuritySetOwnerUUID") public static function CFFileSecuritySetOwnerUUID(fileSec:Dynamic /*__CFFileSecurity*/, ownerUUID:Dynamic):Int;
  @:native("CTFontCreateCopyWithFamily") public static function CTFontCreateCopyWithFamily(font:Dynamic, size:Float, matrix:Dynamic /*Dynamic*/, family:Dynamic):Dynamic;
  @:native("CFFileDescriptorGetNativeDescriptor") public static function CFFileDescriptorGetNativeDescriptor(f:Dynamic /*__CFFileDescriptor*/):Int;
  @:native("InvokeComponentRoutineUPP") public static function InvokeComponentRoutineUPP(cp:Dynamic /*ComponentParameters*/, componentStorage:Int, userUPP:Dynamic):Int;
  @:native("CFReadStreamCopyProperty") public static function CFReadStreamCopyProperty(stream:Dynamic /*__CFReadStream*/, propertyName:Dynamic):Dynamic;
  @:native("CATransform3DMakeTranslation") public static function CATransform3DMakeTranslation(tx:Float, ty:Float, tz:Float):CATransform3D;
  @:native("CFRunLoopRunInMode") public static function CFRunLoopRunInMode(mode:Dynamic, seconds:Float, returnAfterSourceHandled:Int):Dynamic /*CFRunLoopRunResult*/;
  @:native("CGPathCreateCopyByStrokingPath") public static function CGPathCreateCopyByStrokingPath(path:Dynamic, transform:Dynamic /*Dynamic*/, lineWidth:Float, lineCap:CGLineCap, lineJoin:CGLineJoin, miterLimit:Float):Dynamic;
  @:native("HIShapeOffset") public static function HIShapeOffset(inShape:Dynamic /*__HIShape*/, inDX:Float, inDY:Float):Int;
  @:native("CFCalendarAddComponents") public static function CFCalendarAddComponents(calendar:Dynamic /*__CFCalendar*/, at:Float, options:Int, componentDesc:Dynamic /*Dynamic*/):Int;
  @:native("CFSocketGetTypeID") public static function CFSocketGetTypeID():Int;
  @:native("CGRectApplyAffineTransform") public static function CGRectApplyAffineTransform(rect:CGRect, t:CGAffineTransform):CGRect;
  @:native("SSLGetNegotiatedProtocolVersion") public static function SSLGetNegotiatedProtocolVersion(context:Dynamic /*SSLContext*/, protocol:Dynamic /*SSLProtocol*/):Int;
  @:native("HSetState") public static function HSetState(h:Int, flags:Dynamic):Dynamic /*Void*/;
  @:native("FSIsFSRefValid") public static function FSIsFSRefValid(ref:Dynamic /*Dynamic*/):Int;
  @:native("CGPDFArrayGetDictionary") public static function CGPDFArrayGetDictionary(array:CGPDFArray, index:Dynamic /*Int*/, value:CGPDFDictionary):Dynamic /*Bool*/;
  @:native("NSDecimalSubtract") public static function NSDecimalSubtract(result:Dynamic /*NSDecimal*/, leftOperand:Dynamic /*Dynamic*/, rightOperand:Dynamic /*Dynamic*/, roundingMode:NSRoundingMode):NSCalculationError;
  @:native("CTLineEnumerateCaretOffsets") public static function CTLineEnumerateCaretOffsets(line:Dynamic, block:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CFAbsoluteTimeAddGregorianUnits") public static function CFAbsoluteTimeAddGregorianUnits(at:Float, tz:Dynamic, units:Dynamic /*CFGregorianUnits*/):Float;
  @:native("CGContextSetLineCap") public static function CGContextSetLineCap(c:CGContext, cap:CGLineCap):Dynamic /*Void*/;
  @:native("CFURLCreateFilePathURL") public static function CFURLCreateFilePathURL(allocator:Dynamic, url:Dynamic, error:Dynamic /*__CFError*/):Dynamic;
  @:native("RemoveResource") public static function RemoveResource(theResource:Int):Dynamic /*Void*/;
  @:native("CSIdentityQueryCopyResults") public static function CSIdentityQueryCopyResults(query:Dynamic /*__CSIdentityQuery*/):Dynamic;
  @:native("UIGraphicsSetPDFContextDestinationForRect") public static function UIGraphicsSetPDFContextDestinationForRect(name:NSString, rect:CGRect):Dynamic /*Void*/;
  @:native("NSCountHashTable") public static function NSCountHashTable(table:NSHashTable):Int;
  @:native("NewComponentFunctionUPP") public static function NewComponentFunctionUPP(userRoutine:Dynamic, procInfo:Int):Dynamic;
  @:native("FSFollowFinderAlias") public static function FSFollowFinderAlias(fromFile:Dynamic /*FSRef*/, alias:Dynamic /*AliasRecord*/, logon:Int, target:Dynamic /*FSRef*/, wasChanged:Int):Int;
  @:native("CreateUnicodeToTextRunInfo") public static function CreateUnicodeToTextRunInfo(iNumberOfMappings:Int, iUnicodeMappings:Dynamic /*Dynamic*/, oUnicodeToTextInfo:Dynamic /*OpaqueUnicodeToTextRunInfo*/):Int;
  @:native("CGImageDestinationGetTypeID") public static function CGImageDestinationGetTypeID():Int;
  @:native("CVMetalTextureCacheFlush") public static function CVMetalTextureCacheFlush(textureCache:Dynamic /*__CVMetalTextureCache*/, options:Dynamic):Dynamic /*Void*/;
  @:native("CGContextAddQuadCurveToPoint") public static function CGContextAddQuadCurveToPoint(c:CGContext, cpx:Float, cpy:Float, x:Float, y:Float):Dynamic /*Void*/;
  @:native("CFRunLoopTimerGetTolerance") public static function CFRunLoopTimerGetTolerance(timer:Dynamic /*__CFRunLoopTimer*/):Float;
  @:native("CFBundleGetFunctionPointerForName") public static function CFBundleGetFunctionPointerForName(bundle:Dynamic /*__CFBundle*/, functionName:Dynamic):Dynamic /*Void*/;
  @:native("BitClr") public static function BitClr(bytePtr:Dynamic /*Void*/, bitNum:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("LMGetTmpResLoad") public static function LMGetTmpResLoad():Int;
  @:native("CGPDFPageGetRotationAngle") public static function CGPDFPageGetRotationAngle(page:CGPDFPage):Dynamic /*Int*/;
  @:native("CFStringGetLineBounds") public static function CFStringGetLineBounds(theString:Dynamic, range:Dynamic /*CFRange*/, lineBeginIndex:Int, lineEndIndex:Int, contentsEndIndex:Int):Dynamic /*Void*/;
  @:native("CGFontGetCapHeight") public static function CGFontGetCapHeight(font:CGFont):Dynamic /*Int*/;
  @:native("CFSetReplaceValue") public static function CFSetReplaceValue(theSet:Dynamic /*__CFSet*/, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CFUUIDCreateFromUUIDBytes") public static function CFUUIDCreateFromUUIDBytes(alloc:Dynamic, bytes:Dynamic /*CFUUIDBytes*/):Dynamic;
  @:native("CFCharacterSetInvert") public static function CFCharacterSetInvert(theSet:Dynamic /*__CFCharacterSet*/):Dynamic /*Void*/;
  @:native("CGImageIsMask") public static function CGImageIsMask(image:CGImage):Dynamic /*Bool*/;
  @:native("ColorSyncProfileSetTag") public static function ColorSyncProfileSetTag(prof:Dynamic /*ColorSyncProfile*/, signature:Dynamic, data:Dynamic):Dynamic /*Void*/;
  @:native("OSReadSwapInt64") public static function OSReadSwapInt64(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("CFBundleCloseBundleResourceMap") public static function CFBundleCloseBundleResourceMap(bundle:Dynamic /*__CFBundle*/, refNum:Int):Dynamic /*Void*/;
  @:native("CGContextRestoreGState") public static function CGContextRestoreGState(c:CGContext):Dynamic /*Void*/;
  @:native("AXObserverAddNotification") public static function AXObserverAddNotification(observer:Dynamic /*__AXObserver*/, element:Dynamic, notification:Dynamic, refcon:Dynamic /*Void*/):Dynamic /*AXError*/;
  @:native("CFNetServiceMonitorInvalidate") public static function CFNetServiceMonitorInvalidate(monitor:Dynamic /*__CFNetServiceMonitor*/):Dynamic /*Void*/;
  @:native("CGDataConsumerCreateWithCFData") public static function CGDataConsumerCreateWithCFData(data:Dynamic /*__CFData*/):CGDataConsumer;
  @:native("MDQuerySetCreateValueFunction") public static function MDQuerySetCreateValueFunction(query:Dynamic /*__MDQuery*/, func:Dynamic, context:Dynamic /*Void*/, cb:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("LSCopyDisplayNameForURL") public static function LSCopyDisplayNameForURL(inURL:Dynamic, outDisplayName:Dynamic):Int;
  @:native("CFStringFindWithOptionsAndLocale") public static function CFStringFindWithOptionsAndLocale(theString:Dynamic, stringToFind:Dynamic, rangeToSearch:Dynamic /*CFRange*/, searchOptions:Dynamic /*CFStringCompareFlags*/, locale:Dynamic, result:Dynamic /*CFRange*/):Int;
  @:native("CGColorCreateCopyByMatchingToColorSpace") public static function CGColorCreateCopyByMatchingToColorSpace(_:CGColorSpace, intent:CGColorRenderingIntent, color:CGColor, options:Dynamic):CGColor;
  @:native("AEPutAttributePtr") public static function AEPutAttributePtr(theAppleEvent:Dynamic /*AEDesc*/, theAEKeyword:Int, typeCode:Int, dataPtr:Dynamic /*Dynamic*/, dataSize:Int):Int;
  @:native("CSIdentityCreateCopy") public static function CSIdentityCreateCopy(allocator:Dynamic, identity:Dynamic /*__CSIdentity*/):Dynamic /*__CSIdentity*/;
  @:native("PBGetCatalogInfoBulkAsync") public static function PBGetCatalogInfoBulkAsync(paramBlock:Dynamic /*FSCatalogBulkParam*/):Dynamic /*Void*/;
  @:native("CFTreeGetParent") public static function CFTreeGetParent(tree:Dynamic /*__CFTree*/):Dynamic /*__CFTree*/;
  @:native("MPCreateTimer") public static function MPCreateTimer(timerID:Dynamic /*OpaqueMPTimerID*/):Int;
  @:native("CVPixelBufferPoolCreatePixelBufferWithAuxAttributes") public static function CVPixelBufferPoolCreatePixelBufferWithAuxAttributes(allocator:Dynamic, pixelBufferPool:Dynamic /*__CVPixelBufferPool*/, auxAttributes:Dynamic, pixelBufferOut:Dynamic /*__CVBuffer*/):Int;
  @:native("CFFileSecurityGetGroup") public static function CFFileSecurityGetGroup(fileSec:Dynamic /*__CFFileSecurity*/, group:Dynamic /*Dynamic*/):Int;
  @:native("GetNewCollection") public static function GetNewCollection(collectionID:Int):Dynamic /*OpaqueCollection*/;
  @:native("CFGregorianDateIsValid") public static function CFGregorianDateIsValid(gdate:Dynamic /*CFGregorianDate*/, unitFlags:Int):Int;
  @:native("CFReadStreamGetStatus") public static function CFReadStreamGetStatus(stream:Dynamic /*__CFReadStream*/):Dynamic /*CFStreamStatus*/;
  @:native("CFBinaryHeapRemoveAllValues") public static function CFBinaryHeapRemoveAllValues(heap:Dynamic /*__CFBinaryHeap*/):Dynamic /*Void*/;
  @:native("CFHTTPMessageCreateEmpty") public static function CFHTTPMessageCreateEmpty(alloc:Dynamic, isRequest:Int):Dynamic /*__CFHTTPMessage*/;
  @:native("SetThreadScheduler") public static function SetThreadScheduler(threadScheduler:Dynamic):Int;
  @:native("IOSurfaceLookupFromMachPort") public static function IOSurfaceLookupFromMachPort(port:Dynamic /*Dynamic*/):Dynamic /*__IOSurface*/;
  @:native("CFDictionaryGetKeysAndValues") public static function CFDictionaryGetKeysAndValues(theDict:Dynamic, keys:Dynamic /*Dynamic*/, values:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CFSetGetCount") public static function CFSetGetCount(theSet:Dynamic):Int;
  @:native("ColorSyncProfileEstimateGamma") public static function ColorSyncProfileEstimateGamma(prof:Dynamic, error:Dynamic /*__CFError*/):Dynamic /*Float*/;
  @:native("WSMethodInvocationSetProperty") public static function WSMethodInvocationSetProperty(invocation:Dynamic /*OpaqueWSMethodInvocationRef*/, propertyName:Dynamic, propertyValue:Dynamic):Dynamic /*Void*/;
  @:native("SetThreadStateEndCritical") public static function SetThreadStateEndCritical(threadToSet:Int, newState:Int, suggestedThread:Int):Int;
  @:native("MDQuerySetBatchingParameters") public static function MDQuerySetBatchingParameters(query:Dynamic /*__MDQuery*/, params:Dynamic /*MDQueryBatchingParams*/):Dynamic /*Void*/;
  @:native("CTFontCopyLocalizedName") public static function CTFontCopyLocalizedName(font:Dynamic, nameKey:Dynamic, actualLanguage:Dynamic):Dynamic;
  @:native("CGContextAddCurveToPoint") public static function CGContextAddCurveToPoint(c:CGContext, cp1x:Float, cp1y:Float, cp2x:Float, cp2y:Float, x:Float, y:Float):Dynamic /*Void*/;
  @:native("CGRectEqualToRect") public static function CGRectEqualToRect(rect1:CGRect, rect2:CGRect):Dynamic /*Bool*/;
  @:native("CFRunLoopTimerGetTypeID") public static function CFRunLoopTimerGetTypeID():Int;
  @:native("DASessionUnscheduleFromRunLoop") public static function DASessionUnscheduleFromRunLoop(session:Dynamic /*__DASession*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("CloseResFile") public static function CloseResFile(refNum:Int):Dynamic /*Void*/;
  @:native("DisposeThreadSwitchUPP") public static function DisposeThreadSwitchUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CGPathAddArcToPoint") public static function CGPathAddArcToPoint(path:CGPath, m:Dynamic /*Dynamic*/, x1:Float, y1:Float, x2:Float, y2:Float, radius:Float):Dynamic /*Void*/;
  @:native("CTFontCollectionCopyExclusionDescriptors") public static function CTFontCollectionCopyExclusionDescriptors(collection:Dynamic):Dynamic;
  @:native("CTRunGetStringIndices") public static function CTRunGetStringIndices(run:Dynamic, range:Dynamic /*CFRange*/, buffer:Int):Dynamic /*Void*/;
  @:native("SSLSetIOFuncs") public static function SSLSetIOFuncs(context:Dynamic /*SSLContext*/, readFunc:Dynamic, writeFunc:Dynamic):Int;
  @:native("CGFontCopyTableForTag") public static function CGFontCopyTableForTag(font:CGFont, tag:Dynamic /*UInt*/):Dynamic;
  @:native("ATSFontFamilyIteratorRelease") public static function ATSFontFamilyIteratorRelease(ioIterator:Dynamic /*ATSFontFamilyIterator_*/):Int;
  @:native("AXObserverCreateWithInfoCallback") public static function AXObserverCreateWithInfoCallback(application:Dynamic /*Dynamic*/, callback:Dynamic, outObserver:Dynamic /*__AXObserver*/):Dynamic /*AXError*/;
  @:native("InvokeFSVolumeEjectUPP") public static function InvokeFSVolumeEjectUPP(volumeOp:Dynamic /*OpaqueFSVolumeOperation*/, clientData:Dynamic /*Void*/, err:Int, volumeRefNum:Int, dissenter:Dynamic /*Dynamic*/, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("LSSharedFileListInsertItemFSRef") public static function LSSharedFileListInsertItemFSRef(inList:Dynamic /*OpaqueLSSharedFileListRef*/, insertAfterThisItem:Dynamic /*OpaqueLSSharedFileListItemRef*/, inDisplayName:Dynamic, inIconRef:Dynamic /*OpaqueIconRef*/, inFSRef:Dynamic /*Dynamic*/, inPropertiesToSet:Dynamic, inPropertiesToClear:Dynamic):Dynamic /*OpaqueLSSharedFileListItemRef*/;
  @:native("CFNotificationCenterPostNotification") public static function CFNotificationCenterPostNotification(center:Dynamic /*__CFNotificationCenter*/, name:Dynamic, object:Dynamic /*Dynamic*/, userInfo:Dynamic, deliverImmediately:Int):Dynamic /*Void*/;
  @:native("FixRatio") public static function FixRatio(numer:Dynamic /*Int*/, denom:Dynamic /*Int*/):Int;
  @:native("CFNetServiceRegister") public static function CFNetServiceRegister(theService:Dynamic /*__CFNetService*/, error:Dynamic /*CFStreamError*/):Int;
  @:native("WSProtocolHandlerCopyFaultDocument") public static function WSProtocolHandlerCopyFaultDocument(ref:Dynamic /*OpaqueWSProtocolHandlerRef*/, methodContext:Dynamic, faultDict:Dynamic):Dynamic;
  @:native("PBReadForkSync") public static function PBReadForkSync(paramBlock:Dynamic /*FSForkIOParam*/):Int;
  @:native("ChangeTextToUnicodeInfo") public static function ChangeTextToUnicodeInfo(ioTextToUnicodeInfo:Dynamic /*OpaqueTextToUnicodeInfo*/, iUnicodeMapping:Dynamic):Int;
  @:native("HIShapeSetEmpty") public static function HIShapeSetEmpty(inShape:Dynamic /*__HIShape*/):Int;
  @:native("CGColorSpaceCreateIndexed") public static function CGColorSpaceCreateIndexed(baseSpace:CGColorSpace, lastIndex:Dynamic /*Int*/, colorTable:Dynamic /*Dynamic*/):CGColorSpace;
  @:native("CSSetComponentsThreadMode") public static function CSSetComponentsThreadMode(mode:Int):Dynamic /*Void*/;
  @:native("CopySpeechProperty") public static function CopySpeechProperty(chan:Dynamic /*SpeechChannelRecord*/, property:Dynamic, object:Dynamic):Int;
  @:native("IOSurfaceGetElementHeightOfPlane") public static function IOSurfaceGetElementHeightOfPlane(buffer:Dynamic /*__IOSurface*/, planeIndex:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("CTFontCollectionCreateMatchingFontDescriptorsSortedWithCallback") public static function CTFontCollectionCreateMatchingFontDescriptorsSortedWithCallback(collection:Dynamic, sortCallback:Dynamic, refCon:Dynamic /*Void*/):Dynamic;
  @:native("PBSetCatalogInfoAsync") public static function PBSetCatalogInfoAsync(paramBlock:Dynamic /*FSRefParam*/):Dynamic /*Void*/;
  @:native("FSEjectVolumeSync") public static function FSEjectVolumeSync(vRefNum:Int, flags:Int, dissenter:Dynamic /*Dynamic*/):Int;
  @:native("LMGetBootDrive") public static function LMGetBootDrive():Int;
  @:native("SpeechBusy") public static function SpeechBusy():Int;
  @:native("CFSetCreateCopy") public static function CFSetCreateCopy(allocator:Dynamic, theSet:Dynamic):Dynamic;
  @:native("CFHostCreateCopy") public static function CFHostCreateCopy(alloc:Dynamic, host:Dynamic /*__CFHost*/):Dynamic /*__CFHost*/;
  @:native("HIShapeCreateWithQDRgn") public static function HIShapeCreateWithQDRgn(inRgn:Dynamic /*OpaqueRgnHandle*/):Dynamic;
  @:native("CFDateFormatterGetTimeStyle") public static function CFDateFormatterGetTimeStyle(formatter:Dynamic /*__CFDateFormatter*/):Dynamic /*CFDateFormatterStyle*/;
  @:native("SKSearchGroupCreate") public static function SKSearchGroupCreate(inArrayOfInIndexes:Dynamic):Dynamic /*__SKSearchGroup*/;
  @:native("CTFontDescriptorCreateMatchingFontDescriptors") public static function CTFontDescriptorCreateMatchingFontDescriptors(descriptor:Dynamic, mandatoryAttributes:Dynamic):Dynamic;
  @:native("HIShapeSetWithShape") public static function HIShapeSetWithShape(inDestShape:Dynamic /*__HIShape*/, inSrcShape:Dynamic):Int;
  @:native("SubNanosecondsFromAbsolute") public static function SubNanosecondsFromAbsolute(nanoseconds:Dynamic /*UnsignedWide*/, absoluteTime:Dynamic /*UnsignedWide*/):Dynamic /*UnsignedWide*/;
  @:native("PMPrinterCopyDeviceURI") public static function PMPrinterCopyDeviceURI(printer:Dynamic /*OpaquePMPrinter*/, deviceURI:Dynamic):Int;
  @:native("CreateOffsetDescriptor") public static function CreateOffsetDescriptor(theOffset:Dynamic /*Int*/, theDescriptor:Dynamic /*AEDesc*/):Int;
  @:native("SKSearchFindMatches") public static function SKSearchFindMatches(inSearch:Dynamic /*__SKSearch*/, inMaximumCount:Int, outDocumentIDsArray:Int, outScoresArray:Dynamic /*Float*/, maximumTime:Float, outFoundCount:Int):Int;
  @:native("CFCharacterSetCreateInvertedSet") public static function CFCharacterSetCreateInvertedSet(alloc:Dynamic, theSet:Dynamic):Dynamic;
  @:native("CFBitVectorFlipBits") public static function CFBitVectorFlipBits(bv:Dynamic /*__CFBitVector*/, range:Dynamic /*CFRange*/):Dynamic /*Void*/;
  @:native("CFURLCopyQueryString") public static function CFURLCopyQueryString(anURL:Dynamic, charactersToLeaveEscaped:Dynamic):Dynamic;
  @:native("NSDecimalMultiply") public static function NSDecimalMultiply(result:Dynamic /*NSDecimal*/, leftOperand:Dynamic /*Dynamic*/, rightOperand:Dynamic /*Dynamic*/, roundingMode:NSRoundingMode):NSCalculationError;
  @:native("LSCopyDefaultHandlerForURLScheme") public static function LSCopyDefaultHandlerForURLScheme(inURLScheme:Dynamic):Dynamic;
  @:native("DisposeFMFontFamilyCallbackFilterUPP") public static function DisposeFMFontFamilyCallbackFilterUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CFPlugInRegisterPlugInType") public static function CFPlugInRegisterPlugInType(factoryUUID:Dynamic, typeUUID:Dynamic):Int;
  @:native("UCConvertCFAbsoluteTimeToLongDateTime") public static function UCConvertCFAbsoluteTimeToLongDateTime(iCFTime:Float, oLongDate:Dynamic):Int;
  @:native("SKIndexMoveDocument") public static function SKIndexMoveDocument(inIndex:Dynamic /*__SKIndex*/, inDocument:Dynamic, inNewParent:Dynamic):Int;
  @:native("NewIconActionUPP") public static function NewIconActionUPP(userRoutine:Dynamic):Dynamic;
  @:native("PMSessionBeginCGDocumentNoDialog") public static function PMSessionBeginCGDocumentNoDialog(printSession:Dynamic /*OpaquePMPrintSession*/, printSettings:Dynamic /*OpaquePMPrintSettings*/, pageFormat:Dynamic /*OpaquePMPageFormat*/):Int;
  @:native("CFCharacterSetCreateCopy") public static function CFCharacterSetCreateCopy(alloc:Dynamic, theSet:Dynamic):Dynamic;
  @:native("NSDecrementExtraRefCountWasZero") public static function NSDecrementExtraRefCountWasZero(object:Dynamic /*Dynamic*/):Dynamic /*Bool*/;
  @:native("CGGradientCreateWithColorComponents") public static function CGGradientCreateWithColorComponents(space:CGColorSpace, components:Dynamic /*Dynamic*/, locations:Dynamic /*Dynamic*/, count:Dynamic /*Int*/):CGGradient;
  @:native("FSEventStreamFlushSync") public static function FSEventStreamFlushSync(streamRef:Dynamic /*__FSEventStream*/):Dynamic /*Void*/;
  @:native("InvokeAEEventHandlerUPP") public static function InvokeAEEventHandlerUPP(theAppleEvent:Dynamic /*Dynamic*/, reply:Dynamic /*AEDesc*/, handlerRefcon:Void, userUPP:Dynamic):Int;
  @:native("WideBitShift") public static function WideBitShift(target:Dynamic /*Dynamic*/, shift:Int):Dynamic /*Dynamic*/;
  @:native("NearestMacTextEncodings") public static function NearestMacTextEncodings(generalEncoding:Int, bestMacEncoding:Int, alternateMacEncoding:Int):Int;
  @:native("CFURLGetBaseURL") public static function CFURLGetBaseURL(anURL:Dynamic):Dynamic;
  @:native("CGColorGetAlpha") public static function CGColorGetAlpha(color:CGColor):Float;
  @:native("TECGetTextEncodingFromInternetName") public static function TECGetTextEncodingFromInternetName(textEncoding:Int, encodingName:Dynamic):Int;
  @:native("PasteboardClear") public static function PasteboardClear(inPasteboard:Dynamic /*OpaquePasteboardRef*/):Int;
  @:native("UCTypeSelectFlushSelectorData") public static function UCTypeSelectFlushSelectorData(ref:Dynamic /*OpaqueUCTypeSelectRef*/):Int;
  @:native("CGContextAddPath") public static function CGContextAddPath(c:CGContext, path:Dynamic):Dynamic /*Void*/;
  @:native("CTFontCollectionCreateCopyWithFontDescriptors") public static function CTFontCollectionCreateCopyWithFontDescriptors(original:Dynamic, queryDescriptors:Dynamic, options:Dynamic):Dynamic;
  @:native("CVBufferRetain") public static function CVBufferRetain(buffer:Dynamic /*__CVBuffer*/):Dynamic /*__CVBuffer*/;
  @:native("CFBagContainsValue") public static function CFBagContainsValue(theBag:Dynamic, value:Dynamic /*Dynamic*/):Int;
  @:native("TECDisposeConverter") public static function TECDisposeConverter(newEncodingConverter:Dynamic /*OpaqueTECObjectRef*/):Int;
  @:native("ATSFontGetContainer") public static function ATSFontGetContainer(iFont:Int, iOptions:Int, oContainer:Int):Int;
  @:native("CTFontCopyTraits") public static function CTFontCopyTraits(font:Dynamic):Dynamic;
  @:native("GetTextEncodingVariant") public static function GetTextEncodingVariant(encoding:Int):Int;
  @:native("PBFlushForkAsync") public static function PBFlushForkAsync(paramBlock:Dynamic /*FSForkIOParam*/):Dynamic /*Void*/;
  @:native("CVMetalTextureCacheGetTypeID") public static function CVMetalTextureCacheGetTypeID():Int;
  @:native("CGPDFContentStreamGetResource") public static function CGPDFContentStreamGetResource(cs:CGPDFContentStream, category:Dynamic /*Dynamic*/, name:Dynamic /*Dynamic*/):CGPDFObject;
  @:native("KCGetStatus") public static function KCGetStatus(keychain:Dynamic /*KCRef*/, keychainStatus:Int):Int;
  @:native("ChangedResource") public static function ChangedResource(theResource:Int):Dynamic /*Void*/;
  @:native("CFTimeZoneCopyAbbreviation") public static function CFTimeZoneCopyAbbreviation(tz:Dynamic, at:Float):Dynamic;
  @:native("AEProcessMessage") public static function AEProcessMessage(header:Dynamic /*Dynamic*/):Int;
  @:native("CGPDFPageGetPageNumber") public static function CGPDFPageGetPageNumber(page:CGPDFPage):Dynamic /*Int*/;
  @:native("CTFontCopySupportedLanguages") public static function CTFontCopySupportedLanguages(font:Dynamic):Dynamic;
  @:native("TestAndSet") public static function TestAndSet(bit:Int, address:Int):Int;
  @:native("CFHostGetNames") public static function CFHostGetNames(theHost:Dynamic /*__CFHost*/, hasBeenResolved:Int):Dynamic;
  @:native("CFHTTPMessageAddAuthentication") public static function CFHTTPMessageAddAuthentication(request:Dynamic /*__CFHTTPMessage*/, authenticationFailureResponse:Dynamic /*__CFHTTPMessage*/, username:Dynamic, password:Dynamic, authenticationScheme:Dynamic, forProxy:Int):Int;
  @:native("CGContextSetMiterLimit") public static function CGContextSetMiterLimit(c:CGContext, limit:Float):Dynamic /*Void*/;
  @:native("SecItemCopyMatching") public static function SecItemCopyMatching(query:Dynamic, result:Dynamic):Int;
  @:native("U64ShiftRight") public static function U64ShiftRight(value:Dynamic, shift:Int):Dynamic;
  @:native("SetResFileAttrs") public static function SetResFileAttrs(refNum:Int, attrs:Int):Dynamic /*Void*/;
  @:native("CFStringIsHyphenationAvailableForLocale") public static function CFStringIsHyphenationAvailableForLocale(locale:Dynamic):Int;
  @:native("S64ShiftRight") public static function S64ShiftRight(value:Dynamic, shift:Int):Dynamic;
  @:native("FSOpenIterator") public static function FSOpenIterator(container:Dynamic /*Dynamic*/, iteratorFlags:Int, iterator:Dynamic /*OpaqueFSIterator*/):Int;
  @:native("CFUUIDGetConstantUUIDWithBytes") public static function CFUUIDGetConstantUUIDWithBytes(alloc:Dynamic, byte0:Int, byte1:Int, byte2:Int, byte3:Int, byte4:Int, byte5:Int, byte6:Int, byte7:Int, byte8:Int, byte9:Int, byte10:Int, byte11:Int, byte12:Int, byte13:Int, byte14:Int, byte15:Int):Dynamic;
  @:native("SKIndexClose") public static function SKIndexClose(inIndex:Dynamic /*__SKIndex*/):Dynamic /*Void*/;
  @:native("NSSwapHostLongToBig") public static function NSSwapHostLongToBig(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("GetResourceSizeOnDisk") public static function GetResourceSizeOnDisk(theResource:Int):Dynamic /*Int*/;
  @:native("CFBagRemoveValue") public static function CFBagRemoveValue(theBag:Dynamic /*__CFBag*/, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("AEStreamClose") public static function AEStreamClose(ref:Dynamic /*OpaqueAEStreamRef*/, desc:Dynamic /*AEDesc*/):Int;
  @:native("ICCreateGURLEvent") public static function ICCreateGURLEvent(inst:Dynamic /*OpaqueICInstance*/, helperCreator:Int, urlH:Int, theEvent:Dynamic /*AEDesc*/):Int;
  @:native("PMPaperGetHeight") public static function PMPaperGetHeight(paper:Dynamic /*OpaquePMPaper*/, paperHeight:Dynamic /*Float*/):Int;
  @:native("CFPreferencesCopyKeyList") public static function CFPreferencesCopyKeyList(applicationID:Dynamic, userName:Dynamic, hostName:Dynamic):Dynamic;
  @:native("NSHashInsert") public static function NSHashInsert(table:NSHashTable, pointer:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CVPixelBufferCreateResolvedAttributesDictionary") public static function CVPixelBufferCreateResolvedAttributesDictionary(allocator:Dynamic, attributes:Dynamic, resolvedDictionaryOut:Dynamic):Int;
  @:native("NSHashGet") public static function NSHashGet(table:NSHashTable, pointer:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("InvokeDebuggerThreadSchedulerUPP") public static function InvokeDebuggerThreadSchedulerUPP(schedulerInfo:Dynamic /*SchedulerInfoRec*/, userUPP:Dynamic):Int;
  @:native("GetResFileAttrs") public static function GetResFileAttrs(refNum:Int):Int;
  @:native("SSLGetPeerDomainNameLength") public static function SSLGetPeerDomainNameLength(context:Dynamic /*SSLContext*/, peerNameLen:Dynamic /*Int*/):Int;
  @:native("TruncateForTextToUnicode") public static function TruncateForTextToUnicode(iTextToUnicodeInfo:Dynamic, iSourceLen:Int, iSourceStr:Dynamic, iMaxLen:Int, oTruncatedLen:Int):Int;
  @:native("CGFontCopyFullName") public static function CGFontCopyFullName(font:CGFont):Dynamic;
  @:native("ATSFontNotificationSubscribe") public static function ATSFontNotificationSubscribe(callback:Dynamic, options:Dynamic /*ATSFontNotifyOption*/, iRefcon:Dynamic /*Void*/, oNotificationRef:Dynamic /*ATSFontNotificationRef_*/):Int;
  @:native("NSRangeFromString") public static function NSRangeFromString(aString:NSString):Dynamic /*_NSRange*/;
  @:native("LSCopyAllHandlersForURLScheme") public static function LSCopyAllHandlersForURLScheme(inURLScheme:Dynamic):Dynamic;
  @:native("IOSurfaceLookup") public static function IOSurfaceLookup(csid:UInt):Dynamic /*__IOSurface*/;
  @:native("FSFileSecurityGetMode") public static function FSFileSecurityGetMode(fileSec:Dynamic /*__FSFileSecurity*/, mode:Int):Int;
  @:native("CFPlugInGetTypeID") public static function CFPlugInGetTypeID():Int;
  @:native("AEStreamCloseRecord") public static function AEStreamCloseRecord(ref:Dynamic /*OpaqueAEStreamRef*/):Int;
  @:native("CFNetServiceCreate") public static function CFNetServiceCreate(alloc:Dynamic, domain:Dynamic, serviceType:Dynamic, name:Dynamic, port:Int):Dynamic /*__CFNetService*/;
  @:native("CFStringCreateWithFormatAndArguments") public static function CFStringCreateWithFormatAndArguments(alloc:Dynamic, formatOptions:Dynamic, format:Dynamic, arguments:Dynamic /*__va_list_tag*/):Dynamic;
  @:native("CFRunLoopAddObserver") public static function CFRunLoopAddObserver(rl:Dynamic /*__CFRunLoop*/, observer:Dynamic /*__CFRunLoopObserver*/, mode:Dynamic):Dynamic /*Void*/;
  @:native("CGPDFStreamCopyData") public static function CGPDFStreamCopyData(stream:CGPDFStream, format:CGPDFDataFormat):Dynamic;
  @:native("CFBundleCopyResourceURLsOfType") public static function CFBundleCopyResourceURLsOfType(bundle:Dynamic /*__CFBundle*/, resourceType:Dynamic, subDirName:Dynamic):Dynamic;
  @:native("CSIdentitySetImageData") public static function CSIdentitySetImageData(identity:Dynamic /*__CSIdentity*/, imageData:Dynamic, imageDataType:Dynamic):Dynamic /*Void*/;
  @:native("SKLoadDefaultExtractorPlugIns") public static function SKLoadDefaultExtractorPlugIns():Dynamic /*Void*/;
  @:native("ColorSyncProfileRemoveTag") public static function ColorSyncProfileRemoveTag(prof:Dynamic /*ColorSyncProfile*/, signature:Dynamic):Dynamic /*Void*/;
  @:native("MPWaitOnSemaphore") public static function MPWaitOnSemaphore(semaphore:Dynamic /*OpaqueMPSemaphoreID*/, timeout:Int):Int;
  @:native("ATSFontIteratorCreate") public static function ATSFontIteratorCreate(iContext:Int, iFilter:Dynamic /*Dynamic*/, iRefCon:Dynamic /*Void*/, iOptions:Int, ioIterator:Dynamic /*ATSFontIterator_*/):Int;
  @:native("NSStringFromUIEdgeInsets") public static function NSStringFromUIEdgeInsets(insets:UIEdgeInsets):NSString;
  @:native("CGContextDrawPath") public static function CGContextDrawPath(c:CGContext, mode:CGPathDrawingMode):Dynamic /*Void*/;
  @:native("CFBitVectorCreateMutable") public static function CFBitVectorCreateMutable(allocator:Dynamic, capacity:Int):Dynamic /*__CFBitVector*/;
  @:native("MPDeleteQueue") public static function MPDeleteQueue(queue:Dynamic /*OpaqueMPQueueID*/):Int;
  @:native("MDQueryStop") public static function MDQueryStop(query:Dynamic /*__MDQuery*/):Dynamic /*Void*/;
  @:native("WSMethodInvocationCopySerialization") public static function WSMethodInvocationCopySerialization(invocation:Dynamic /*OpaqueWSMethodInvocationRef*/):Dynamic;
  @:native("CGBitmapContextCreateWithData") public static function CGBitmapContextCreateWithData(data:Dynamic /*Void*/, width:Dynamic /*Int*/, height:Dynamic /*Int*/, bitsPerComponent:Dynamic /*Int*/, bytesPerRow:Dynamic /*Int*/, space:CGColorSpace, bitmapInfo:Dynamic /*UInt*/, releaseCallback:Dynamic, releaseInfo:Dynamic /*Void*/):CGContext;
  @:native("PMServerCreatePrinterList") public static function PMServerCreatePrinterList(server:Dynamic /*OpaquePMServer*/, printerList:Dynamic):Int;
  @:native("InvokeDeferredTaskUPP") public static function InvokeDeferredTaskUPP(dtParam:Dynamic /*Int*/, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("LSCopyKindStringForRef") public static function LSCopyKindStringForRef(inFSRef:Dynamic /*Dynamic*/, outKindString:Dynamic):Int;
  @:native("CGContextIsPathEmpty") public static function CGContextIsPathEmpty(c:CGContext):Dynamic /*Bool*/;
  @:native("PasteboardGetTypeID") public static function PasteboardGetTypeID():Int;
  @:native("UIAccessibilityConvertFrameToScreenCoordinates") public static function UIAccessibilityConvertFrameToScreenCoordinates(rect:CGRect, view:UIView):CGRect;
  @:native("CGPathAddArc") public static function CGPathAddArc(path:CGPath, m:Dynamic /*Dynamic*/, x:Float, y:Float, radius:Float, startAngle:Float, endAngle:Float, clockwise:Dynamic /*Bool*/):Dynamic /*Void*/;
  @:native("ColorSyncCMMCopyCMMIdentifier") public static function ColorSyncCMMCopyCMMIdentifier(_:Dynamic /*ColorSyncCMM*/):Dynamic;
  @:native("CTGlyphInfoCreateWithCharacterIdentifier") public static function CTGlyphInfoCreateWithCharacterIdentifier(cid:Int, collection:Dynamic /*CTCharacterCollection*/, baseString:Dynamic):Dynamic;
  @:native("GetIconRefFromFileInfo") public static function GetIconRefFromFileInfo(inRef:Dynamic /*Dynamic*/, inFileNameLength:Int, inFileName:Dynamic /*Dynamic*/, inWhichInfo:Int, inCatalogInfo:Dynamic /*Dynamic*/, inUsageFlags:Int, outIconRef:Dynamic /*OpaqueIconRef*/, outLabel:Int):Int;
  @:native("CGContextSynchronize") public static function CGContextSynchronize(c:CGContext):Dynamic /*Void*/;
  @:native("MPModifyNotificationParameters") public static function MPModifyNotificationParameters(notificationID:Dynamic /*OpaqueMPNotificationID*/, kind:Int, notifyParam1:Dynamic /*Void*/, notifyParam2:Dynamic /*Void*/, notifyParam3:Dynamic /*Void*/):Int;
  @:native("CGContextSetShadowWithColor") public static function CGContextSetShadowWithColor(c:CGContext, offset:CGSize, blur:Float, color:CGColor):Dynamic /*Void*/;
  @:native("FSUnmountVolumeAsync") public static function FSUnmountVolumeAsync(vRefNum:Int, flags:Int, volumeOp:Dynamic /*OpaqueFSVolumeOperation*/, clientData:Dynamic /*Void*/, callback:Dynamic, runloop:Dynamic /*__CFRunLoop*/, runloopMode:Dynamic):Int;
  @:native("LSCopyApplicationForMIMEType") public static function LSCopyApplicationForMIMEType(inMIMEType:Dynamic, inRoleMask:Dynamic /*LSRolesMask*/, outAppURL:Dynamic):Int;
  @:native("CGContextAddRects") public static function CGContextAddRects(c:CGContext, rects:Dynamic /*Dynamic*/, count:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("CFFileSecuritySetOwner") public static function CFFileSecuritySetOwner(fileSec:Dynamic /*__CFFileSecurity*/, owner:Dynamic /*Dynamic*/):Int;
  @:native("CGPDFDocumentUnlockWithPassword") public static function CGPDFDocumentUnlockWithPassword(document:CGPDFDocument, password:Dynamic /*Dynamic*/):Dynamic /*Bool*/;
  @:native("UIVideoAtPathIsCompatibleWithSavedPhotosAlbum") public static function UIVideoAtPathIsCompatibleWithSavedPhotosAlbum(videoPath:NSString):Dynamic /*Bool*/;
  @:native("HIShapeReplacePathInCGContext") public static function HIShapeReplacePathInCGContext(inShape:Dynamic, inContext:CGContext):Int;
  @:native("CGImageRelease") public static function CGImageRelease(image:CGImage):Dynamic /*Void*/;
  @:native("CFTimeZoneCreateWithName") public static function CFTimeZoneCreateWithName(allocator:Dynamic, name:Dynamic, tryAbbrev:Int):Dynamic;
  @:native("CFBundleCopyLocalizationsForURL") public static function CFBundleCopyLocalizationsForURL(url:Dynamic):Dynamic;
  @:native("CGRectIsInfinite") public static function CGRectIsInfinite(rect:CGRect):Dynamic /*Bool*/;
  @:native("LSRegisterURL") public static function LSRegisterURL(inURL:Dynamic, inUpdate:Int):Int;
  @:native("ColorSyncProfileGetMD5") public static function ColorSyncProfileGetMD5(prof:Dynamic):Dynamic /*ColorSyncMD5*/;
  @:native("UIAccessibilityIsSpeakSelectionEnabled") public static function UIAccessibilityIsSpeakSelectionEnabled():Dynamic /*Bool*/;
  @:native("CGFontCopyVariations") public static function CGFontCopyVariations(font:CGFont):Dynamic;
  @:native("FSPathMakeRef") public static function FSPathMakeRef(path:Dynamic /*Dynamic*/, ref:Dynamic /*FSRef*/, isDirectory:Int):Int;
  @:native("LSSharedFileListItemCopyResolvedURL") public static function LSSharedFileListItemCopyResolvedURL(inItem:Dynamic /*OpaqueLSSharedFileListItemRef*/, inFlags:Int, outError:Dynamic /*__CFError*/):Dynamic;
  @:native("UI_USER_INTERFACE_IDIOM") public static function UI_USER_INTERFACE_IDIOM():UIUserInterfaceIdiom;
  @:native("CGImageGetTypeID") public static function CGImageGetTypeID():Int;
  @:native("CGPDFPageGetDocument") public static function CGPDFPageGetDocument(page:CGPDFPage):CGPDFDocument;
  @:native("NSZoneMalloc") public static function NSZoneMalloc(zone:Dynamic /*_NSZone*/, size:Int):Dynamic /*Void*/;
  @:native("KCFindFirstItem") public static function KCFindFirstItem(keychain:Dynamic /*KCRef*/, attrList:Dynamic /*Dynamic*/, search:Dynamic /*KCSearchRef*/, item:Dynamic /*KCItemRef*/):Int;
  @:native("CFBinaryHeapGetMinimum") public static function CFBinaryHeapGetMinimum(heap:Dynamic /*__CFBinaryHeap*/):Dynamic /*Dynamic*/;
  @:native("CFTimeZoneCreate") public static function CFTimeZoneCreate(allocator:Dynamic, name:Dynamic, data:Dynamic):Dynamic;
  @:native("RecoverHandle") public static function RecoverHandle(p:Int):Int;
  @:native("CGDataProviderCreateWithURL") public static function CGDataProviderCreateWithURL(url:Dynamic):CGDataProvider;
  @:native("IOSurfaceAlignProperty") public static function IOSurfaceAlignProperty(property:Dynamic, value:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("PBGetForkPositionSync") public static function PBGetForkPositionSync(paramBlock:Dynamic /*FSForkIOParam*/):Int;
  @:native("CTFontGetSymbolicTraits") public static function CTFontGetSymbolicTraits(font:Dynamic):Dynamic /*CTFontSymbolicTraits*/;
  @:native("CFBundleCreate") public static function CFBundleCreate(allocator:Dynamic, bundleURL:Dynamic):Dynamic /*__CFBundle*/;
  @:native("CGRectIntersection") public static function CGRectIntersection(r1:CGRect, r2:CGRect):CGRect;
  @:native("SSLWrite") public static function SSLWrite(context:Dynamic /*SSLContext*/, data:Dynamic /*Dynamic*/, dataLength:Dynamic /*Int*/, processed:Dynamic /*Int*/):Int;
  @:native("ICGetCurrentProfile") public static function ICGetCurrentProfile(inst:Dynamic /*OpaqueICInstance*/, currentID:Int):Int;
  @:native("CGContextGetTextPosition") public static function CGContextGetTextPosition(c:CGContext):CGPoint;
  @:native("CACurrentMediaTime") public static function CACurrentMediaTime():Float;
  @:native("PLstrlen") public static function PLstrlen(str:Dynamic):Dynamic /*Int*/;
  @:native("FSResolveAlias") public static function FSResolveAlias(fromFile:Dynamic /*Dynamic*/, alias:Dynamic /*AliasRecord*/, target:Dynamic /*FSRef*/, wasChanged:Int):Int;
  @:native("CFStringCreateMutable") public static function CFStringCreateMutable(alloc:Dynamic, maxLength:Int):Dynamic /*__CFString*/;
  @:native("CTRunGetAdvancesPtr") public static function CTRunGetAdvancesPtr(run:Dynamic):Dynamic /*Dynamic*/;
  @:native("CFNetDiagnosticCreateWithURL") public static function CFNetDiagnosticCreateWithURL(alloc:Dynamic, url:Dynamic):Dynamic /*__CFNetDiagnostic*/;
  @:native("CGSizeApplyAffineTransform") public static function CGSizeApplyAffineTransform(size:CGSize, t:CGAffineTransform):CGSize;
  @:native("CGColorSpaceRelease") public static function CGColorSpaceRelease(space:CGColorSpace):Dynamic /*Void*/;
  @:native("OSWriteSwapInt16") public static function OSWriteSwapInt16(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CFCharacterSetCreateMutable") public static function CFCharacterSetCreateMutable(alloc:Dynamic):Dynamic /*__CFCharacterSet*/;
  @:native("CFURLCreateBookmarkDataFromFile") public static function CFURLCreateBookmarkDataFromFile(allocator:Dynamic, fileURL:Dynamic, errorRef:Dynamic /*__CFError*/):Dynamic;
  @:native("HIShapeXor") public static function HIShapeXor(inShape1:Dynamic, inShape2:Dynamic, outResult:Dynamic /*__HIShape*/):Int;
  @:native("CFMessagePortCreateRemote") public static function CFMessagePortCreateRemote(allocator:Dynamic, name:Dynamic):Dynamic /*__CFMessagePort*/;
  @:native("NewAEDisposeExternalUPP") public static function NewAEDisposeExternalUPP(userRoutine:Dynamic):Dynamic;
  @:native("LSOpenFromRefSpec") public static function LSOpenFromRefSpec(inLaunchSpec:Dynamic /*Dynamic*/, outLaunchedRef:Dynamic /*FSRef*/):Int;
  @:native("SSLGetProtocolVersion") public static function SSLGetProtocolVersion(context:Dynamic /*SSLContext*/, protocol:Dynamic /*SSLProtocol*/):Int;
  @:native("CGColorCreateWithPattern") public static function CGColorCreateWithPattern(space:CGColorSpace, pattern:CGPattern, components:Dynamic /*Dynamic*/):CGColor;
  @:native("SKIndexCopyTermStringForTermID") public static function SKIndexCopyTermStringForTermID(inIndex:Dynamic /*__SKIndex*/, inTermID:Int):Dynamic;
  @:native("CGRectUnion") public static function CGRectUnion(r1:CGRect, r2:CGRect):CGRect;
  @:native("SKIndexFlush") public static function SKIndexFlush(inIndex:Dynamic /*__SKIndex*/):Int;
  @:native("GetTopResourceFile") public static function GetTopResourceFile(refNum:Int):Int;
  @:native("CTFontManagerUnregisterGraphicsFont") public static function CTFontManagerUnregisterGraphicsFont(font:CGFont, error:Dynamic /*__CFError*/):Dynamic /*Bool*/;
  @:native("NSDecimalCompact") public static function NSDecimalCompact(number:Dynamic /*NSDecimal*/):Dynamic /*Void*/;
  @:native("SSLCopyRequestedPeerNameLength") public static function SSLCopyRequestedPeerNameLength(ctx:Dynamic /*SSLContext*/, peerNameLen:Dynamic /*Int*/):Int;
  @:native("DASessionScheduleWithRunLoop") public static function DASessionScheduleWithRunLoop(session:Dynamic /*__DASession*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("CGDataProviderCreateWithFilename") public static function CGDataProviderCreateWithFilename(filename:Dynamic /*Dynamic*/):CGDataProvider;
  @:native("IOSurfaceIncrementUseCount") public static function IOSurfaceIncrementUseCount(buffer:Dynamic /*__IOSurface*/):Dynamic /*Void*/;
  @:native("HGetState") public static function HGetState(h:Int):Dynamic;
  @:native("PBOpenForkSync") public static function PBOpenForkSync(paramBlock:Dynamic /*FSForkIOParam*/):Int;
  @:native("CopyPhonemesFromText") public static function CopyPhonemesFromText(chan:Dynamic /*SpeechChannelRecord*/, text:Dynamic, phonemes:Dynamic):Int;
  @:native("CTTypesetterSuggestLineBreakWithOffset") public static function CTTypesetterSuggestLineBreakWithOffset(typesetter:Dynamic, startIndex:Int, width:Dynamic /*Float*/, offset:Dynamic /*Float*/):Int;
  @:native("NewOSLGetErrDescUPP") public static function NewOSLGetErrDescUPP(userRoutine:Dynamic):Dynamic;
  @:native("FSMountLocalVolumeSync") public static function FSMountLocalVolumeSync(diskID:Dynamic, mountDir:Dynamic, mountedVolumeRefNum:Int, flags:Int):Int;
  @:native("CGPDFContentStreamGetStreams") public static function CGPDFContentStreamGetStreams(cs:CGPDFContentStream):Dynamic;
  @:native("FSCancelVolumeOperation") public static function FSCancelVolumeOperation(volumeOp:Dynamic /*OpaqueFSVolumeOperation*/):Int;
  @:native("CFDictionarySetValue") public static function CFDictionarySetValue(theDict:Dynamic /*__CFDictionary*/, key:Dynamic /*Dynamic*/, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("LSSharedFileListItemCopyIconRef") public static function LSSharedFileListItemCopyIconRef(inItem:Dynamic /*OpaqueLSSharedFileListItemRef*/):Dynamic /*OpaqueIconRef*/;
  @:native("HIShapeIntersectsRect") public static function HIShapeIntersectsRect(inShape:Dynamic, inRect:Dynamic /*Dynamic*/):Int;
  @:native("PBExchangeObjectsAsync") public static function PBExchangeObjectsAsync(paramBlock:Dynamic /*FSRefParam*/):Dynamic /*Void*/;
  @:native("CFWriteStreamCreateWithFTPURL") public static function CFWriteStreamCreateWithFTPURL(alloc:Dynamic, ftpURL:Dynamic):Dynamic /*__CFWriteStream*/;
  @:native("CGColorSpaceGetColorTableCount") public static function CGColorSpaceGetColorTableCount(space:CGColorSpace):Dynamic /*Int*/;
  @:native("NewSpeechChannel") public static function NewSpeechChannel(voice:Dynamic /*VoiceSpec*/, chan:Dynamic /*SpeechChannelRecord*/):Int;
  @:native("LMGetSysFontSize") public static function LMGetSysFontSize():Int;
  @:native("PBFlushVolumeSync") public static function PBFlushVolumeSync(paramBlock:Dynamic /*FSRefParam*/):Int;
  @:native("FSUpdateAlias") public static function FSUpdateAlias(fromFile:Dynamic /*Dynamic*/, target:Dynamic /*Dynamic*/, alias:Dynamic /*AliasRecord*/, wasChanged:Int):Int;
  @:native("CFHTTPMessageApplyCredentials") public static function CFHTTPMessageApplyCredentials(request:Dynamic /*__CFHTTPMessage*/, auth:Dynamic /*_CFHTTPAuthentication*/, username:Dynamic, password:Dynamic, error:Dynamic /*CFStreamError*/):Int;
  @:native("DAApprovalSessionScheduleWithRunLoop") public static function DAApprovalSessionScheduleWithRunLoop(session:Dynamic /*__DASession*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("CGPDFOperatorTableRetain") public static function CGPDFOperatorTableRetain(table:CGPDFOperatorTable):CGPDFOperatorTable;
  @:native("CTGlyphInfoGetTypeID") public static function CTGlyphInfoGetTypeID():Int;
  @:native("ICAddMapEntry") public static function ICAddMapEntry(inst:Dynamic /*OpaqueICInstance*/, entries:Int, entry:Dynamic /*Dynamic*/):Int;
  @:native("SSLGetRsaBlinding") public static function SSLGetRsaBlinding(context:Dynamic /*SSLContext*/, blinding:Int):Int;
  @:native("CFDictionaryGetCount") public static function CFDictionaryGetCount(theDict:Dynamic):Int;
  @:native("NewOSLAdjustMarksUPP") public static function NewOSLAdjustMarksUPP(userRoutine:Dynamic):Dynamic;
  @:native("NSSwapHostLongLongToBig") public static function NSSwapHostLongLongToBig(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("DisposeUnicodeToTextFallbackUPP") public static function DisposeUnicodeToTextFallbackUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CFPlugInSetLoadOnDemand") public static function CFPlugInSetLoadOnDemand(plugIn:Dynamic /*__CFBundle*/, flag:Int):Dynamic /*Void*/;
  @:native("ResError") public static function ResError():Int;
  @:native("WritePartialResource") public static function WritePartialResource(theResource:Int, offset:Dynamic /*Int*/, buffer:Dynamic /*Dynamic*/, count:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("CFMachPortSetInvalidationCallBack") public static function CFMachPortSetInvalidationCallBack(port:Dynamic /*__CFMachPort*/, callout:Dynamic):Dynamic /*Void*/;
  @:native("UCTypeSelectCompare") public static function UCTypeSelectCompare(ref:Dynamic /*OpaqueUCTypeSelectRef*/, inText:Dynamic, result:Int):Int;
  @:native("ATSFontActivateFromFileReference") public static function ATSFontActivateFromFileReference(iFile:Dynamic /*Dynamic*/, iContext:Int, iFormat:Int, iRefCon:Dynamic /*Void*/, iOptions:Int, oContainer:Int):Int;
  @:native("CFLocaleCopyCurrent") public static function CFLocaleCopyCurrent():Dynamic;
  @:native("PBSetForkPositionAsync") public static function PBSetForkPositionAsync(paramBlock:Dynamic /*FSForkIOParam*/):Dynamic /*Void*/;
  @:native("PBFlushForkSync") public static function PBFlushForkSync(paramBlock:Dynamic /*FSForkIOParam*/):Int;
  @:native("CGContextGetCTM") public static function CGContextGetCTM(c:CGContext):CGAffineTransform;
  @:native("FracDiv") public static function FracDiv(x:Int, y:Int):Int;
  @:native("CFAttributedStringSetAttributes") public static function CFAttributedStringSetAttributes(aStr:Dynamic /*__CFAttributedString*/, range:Dynamic /*CFRange*/, replacement:Dynamic, clearOtherAttributes:Int):Dynamic /*Void*/;
  @:native("CGPDFDictionaryGetNumber") public static function CGPDFDictionaryGetNumber(dict:CGPDFDictionary, key:Dynamic /*Dynamic*/, value:Float):Dynamic /*Bool*/;
  @:native("PMSetDuplex") public static function PMSetDuplex(printSettings:Dynamic /*OpaquePMPrintSettings*/, duplexSetting:Int):Int;
  @:native("UIRectFrame") public static function UIRectFrame(rect:CGRect):Dynamic /*Void*/;
  @:native("CFStringIsEncodingAvailable") public static function CFStringIsEncodingAvailable(encoding:Int):Int;
  @:native("GetComponentPublicIndString") public static function GetComponentPublicIndString(aComponent:Dynamic /*ComponentRecord*/, theString:Dynamic /*Int*/, strListID:Int, index:Int):Int;
  @:native("CTTypesetterSuggestClusterBreakWithOffset") public static function CTTypesetterSuggestClusterBreakWithOffset(typesetter:Dynamic, startIndex:Int, width:Dynamic /*Float*/, offset:Dynamic /*Float*/):Int;
  @:native("SKIndexOpenWithMutableData") public static function SKIndexOpenWithMutableData(inData:Dynamic /*__CFData*/, inIndexName:Dynamic):Dynamic /*__SKIndex*/;
  @:native("CFAttributedStringGetAttributeAndLongestEffectiveRange") public static function CFAttributedStringGetAttributeAndLongestEffectiveRange(aStr:Dynamic, loc:Int, attrName:Dynamic, inRange:Dynamic /*CFRange*/, longestEffectiveRange:Dynamic /*CFRange*/):Dynamic;
  @:native("DisposeAECoercePtrUPP") public static function DisposeAECoercePtrUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CGColorSpaceCreateICCBased") public static function CGColorSpaceCreateICCBased(nComponents:Dynamic /*Int*/, range:Dynamic /*Dynamic*/, profile:CGDataProvider, alternate:CGColorSpace):CGColorSpace;
  @:native("CallComponentOpen") public static function CallComponentOpen(ci:Dynamic /*ComponentInstanceRecord*/, self:Dynamic /*ComponentInstanceRecord*/):Int;
  @:native("CFBagReplaceValue") public static function CFBagReplaceValue(theBag:Dynamic /*__CFBag*/, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CFURLCreateStringByReplacingPercentEscapes") public static function CFURLCreateStringByReplacingPercentEscapes(allocator:Dynamic, originalString:Dynamic, charactersToLeaveEscaped:Dynamic):Dynamic;
  @:native("CTFontManagerCopyAvailableFontURLs") public static function CTFontManagerCopyAvailableFontURLs():Dynamic;
  @:native("CGPDFDocumentGetArtBox") public static function CGPDFDocumentGetArtBox(document:CGPDFDocument, page:Dynamic /*Int*/):CGRect;
  @:native("CGContextBeginTransparencyLayer") public static function CGContextBeginTransparencyLayer(c:CGContext, auxiliaryInfo:Dynamic):Dynamic /*Void*/;
  @:native("ICBegin") public static function ICBegin(inst:Dynamic /*OpaqueICInstance*/, perm:Int):Int;
  @:native("CFStringGetListOfAvailableEncodings") public static function CFStringGetListOfAvailableEncodings():Dynamic /*Dynamic*/;
  @:native("CFURLClearResourcePropertyCache") public static function CFURLClearResourcePropertyCache(url:Dynamic):Dynamic /*Void*/;
  @:native("WideMultiply") public static function WideMultiply(multiplicand:Int, multiplier:Int, target:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("MPSetEvent") public static function MPSetEvent(event:Dynamic /*OpaqueMPEventID*/, flags:Int):Int;
  @:native("CSIdentityGetTypeID") public static function CSIdentityGetTypeID():Int;
  @:native("SetSpeechProperty") public static function SetSpeechProperty(chan:Dynamic /*SpeechChannelRecord*/, property:Dynamic, object:Dynamic):Int;
  @:native("CTFontCopyDefaultCascadeListForLanguages") public static function CTFontCopyDefaultCascadeListForLanguages(font:Dynamic, languagePrefList:Dynamic):Dynamic;
  @:native("PMPrinterGetDriverCreator") public static function PMPrinterGetDriverCreator(printer:Dynamic /*OpaquePMPrinter*/, creator:Int):Int;
  @:native("TECGetMailTextEncodings") public static function TECGetMailTextEncodings(locale:Int, availableEncodings:Int, maxAvailableEncodings:Int, actualAvailableEncodings:Int):Int;
  @:native("CGImageSourceCopyProperties") public static function CGImageSourceCopyProperties(isrc:CGImageSource, options:Dynamic):Dynamic;
  @:native("SpeakBuffer") public static function SpeakBuffer(chan:Dynamic /*SpeechChannelRecord*/, textBuf:Dynamic /*Dynamic*/, textBytes:Dynamic /*Int*/, controlFlags:Int):Int;
  @:native("RetainCollection") public static function RetainCollection(c:Dynamic /*OpaqueCollection*/):Int;
  @:native("NewIndexToUCStringUPP") public static function NewIndexToUCStringUPP(userRoutine:Dynamic):Dynamic;
  @:native("CVPixelBufferPoolCreatePixelBuffer") public static function CVPixelBufferPoolCreatePixelBuffer(allocator:Dynamic, pixelBufferPool:Dynamic /*__CVPixelBufferPool*/, pixelBufferOut:Dynamic /*__CVBuffer*/):Int;
  @:native("U64And") public static function U64And(left:Dynamic, right:Dynamic):Int;
  @:native("AXUIElementCopyActionNames") public static function AXUIElementCopyActionNames(element:Dynamic, names:Dynamic):Dynamic /*AXError*/;
  @:native("S64And") public static function S64And(left:Dynamic, right:Dynamic):Int;
  @:native("RegisterComponent") public static function RegisterComponent(cd:Dynamic /*ComponentDescription*/, componentEntryPoint:Dynamic, global:Int, componentName:Int, componentInfo:Int, componentIcon:Int):Dynamic /*ComponentRecord*/;
  @:native("LSSharedFileListItemGetTypeID") public static function LSSharedFileListItemGetTypeID():Int;
  @:native("CFWriteStreamSetProperty") public static function CFWriteStreamSetProperty(stream:Dynamic /*__CFWriteStream*/, propertyName:Dynamic, propertyValue:Dynamic):Int;
  @:native("CGContextRotateCTM") public static function CGContextRotateCTM(c:CGContext, angle:Float):Dynamic /*Void*/;
  @:native("CATransform3DRotate") public static function CATransform3DRotate(t:CATransform3D, angle:Float, x:Float, y:Float, z:Float):CATransform3D;
  @:native("InvokeATSUDirectLayoutOperationOverrideUPP") public static function InvokeATSUDirectLayoutOperationOverrideUPP(iCurrentOperation:Int, iLineRef:Dynamic /*ATSGlyphVector*/, iRefCon:Void, iOperationCallbackParameterPtr:Dynamic /*Void*/, oCallbackStatus:Int, userUPP:Dynamic):Int;
  @:native("NSTextAlignmentFromCTTextAlignment") public static function NSTextAlignmentFromCTTextAlignment(ctTextAlignment:Dynamic /*CTTextAlignment*/):NSTextAlignment;
  @:native("CreateUnicodeToTextInfoByEncoding") public static function CreateUnicodeToTextInfoByEncoding(iEncoding:Int, oUnicodeToTextInfo:Dynamic /*OpaqueUnicodeToTextInfo*/):Int;
  @:native("SSLGetBufferedReadSize") public static function SSLGetBufferedReadSize(context:Dynamic /*SSLContext*/, bufSize:Dynamic /*Int*/):Int;
  @:native("SysBreakFunc") public static function SysBreakFunc(debuggerMsg:Dynamic):Dynamic /*Void*/;
  @:native("CFConvertDoubleHostToSwapped") public static function CFConvertDoubleHostToSwapped(used:Dynamic /*Dynamic*/):Dynamic /*CFSwappedFloat64*/;
  @:native("U64Divide") public static function U64Divide(dividend:Dynamic, divisor:Dynamic, remainder:Dynamic):Dynamic;
  @:native("InvokeOSLGetErrDescUPP") public static function InvokeOSLGetErrDescUPP(appDescPtr:Dynamic /*Dynamic*/, userUPP:Dynamic):Int;
  @:native("CFBagGetCount") public static function CFBagGetCount(theBag:Dynamic):Int;
  @:native("S64Divide") public static function S64Divide(dividend:Dynamic, divisor:Dynamic, remainder:Dynamic):Dynamic;
  @:native("TECDisposeSniffer") public static function TECDisposeSniffer(encodingSniffer:Dynamic /*OpaqueTECSnifferObjectRef*/):Int;
  @:native("ICFindPrefHandle") public static function ICFindPrefHandle(inst:Dynamic /*OpaqueICInstance*/, key:Dynamic, attr:Int, prefh:Int):Int;
  @:native("SecTrustCopyProperties") public static function SecTrustCopyProperties(trust:Dynamic /*__SecTrust*/):Dynamic;
  @:native("CGShadingCreateRadial") public static function CGShadingCreateRadial(space:CGColorSpace, start:CGPoint, startRadius:Float, end:CGPoint, endRadius:Float, func:CGFunction, extendStart:Dynamic /*Bool*/, extendEnd:Dynamic /*Bool*/):CGShading;
  @:native("CVBufferSetAttachment") public static function CVBufferSetAttachment(buffer:Dynamic /*__CVBuffer*/, key:Dynamic, value:Dynamic, attachmentMode:Dynamic /*CVAttachmentMode*/):Dynamic /*Void*/;
  @:native("CGImageCreateWithMask") public static function CGImageCreateWithMask(image:CGImage, mask:CGImage):CGImage;
  @:native("PasteboardCopyPasteLocation") public static function PasteboardCopyPasteLocation(inPasteboard:Dynamic /*OpaquePasteboardRef*/, outPasteLocation:Dynamic):Int;
  @:native("SecTrustCreateWithCertificates") public static function SecTrustCreateWithCertificates(certificates:Dynamic, policies:Dynamic, trust:Dynamic /*__SecTrust*/):Int;
  @:native("UIOffsetMake") public static function UIOffsetMake(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):UIOffset;
  @:native("LSSetItemAttribute") public static function LSSetItemAttribute(inItem:Dynamic /*Dynamic*/, inRoles:Dynamic /*LSRolesMask*/, inAttributeName:Dynamic, inValue:Dynamic):Int;
  @:native("ColorSyncCMMGetTypeID") public static function ColorSyncCMMGetTypeID():Int;
  @:native("GetScriptInfoFromTextEncoding") public static function GetScriptInfoFromTextEncoding(iEncoding:Int, oTextScriptID:Int, oTextLanguageID:Int):Int;
  @:native("ReleaseIconRef") public static function ReleaseIconRef(theIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("CSGetLocalIdentityAuthority") public static function CSGetLocalIdentityAuthority():Dynamic /*__CSIdentityAuthority*/;
  @:native("SecTrustSetVerifyDate") public static function SecTrustSetVerifyDate(trust:Dynamic /*__SecTrust*/, verifyDate:Dynamic):Int;
  @:native("CFSocketCopyAddress") public static function CFSocketCopyAddress(s:Dynamic /*__CFSocket*/):Dynamic;
  @:native("FSEventsCopyUUIDForDevice") public static function FSEventsCopyUUIDForDevice(dev:Dynamic /*Dynamic*/):Dynamic;
  @:native("CTFrameGetPath") public static function CTFrameGetPath(frame:Dynamic):Dynamic;
  @:native("PMPrinterGetState") public static function PMPrinterGetState(printer:Dynamic /*OpaquePMPrinter*/, state:Int):Int;
  @:native("IOSurfaceIsInUse") public static function IOSurfaceIsInUse(buffer:Dynamic /*__IOSurface*/):Int;
  @:native("UIGuidedAccessRestrictionStateForIdentifier") public static function UIGuidedAccessRestrictionStateForIdentifier(restrictionIdentifier:NSString):UIGuidedAccessRestrictionState;
  @:native("CGImageCreateCopy") public static function CGImageCreateCopy(image:CGImage):CGImage;
  @:native("CFMessagePortCreateLocal") public static function CFMessagePortCreateLocal(allocator:Dynamic, name:Dynamic, callout:Dynamic, context:Dynamic /*CFMessagePortContext*/, shouldFreeInfo:Int):Dynamic /*__CFMessagePort*/;
  @:native("NSSwapHostFloatToBig") public static function NSSwapHostFloatToBig(used:Dynamic /*Dynamic*/):Dynamic /*NSSwappedFloat*/;
  @:native("SecItemDelete") public static function SecItemDelete(query:Dynamic):Int;
  @:native("FSFileSecuritySetGroupUUID") public static function FSFileSecuritySetGroupUUID(fileSec:Dynamic /*__FSFileSecurity*/, group:Dynamic /*Dynamic*/):Int;
  @:native("CGContextStrokeRectWithWidth") public static function CGContextStrokeRectWithWidth(c:CGContext, rect:CGRect, width:Float):Dynamic /*Void*/;
  @:native("NSZoneFromPointer") public static function NSZoneFromPointer(ptr:Dynamic /*Void*/):Dynamic /*_NSZone*/;
  @:native("InstallXTimeTask") public static function InstallXTimeTask(tmTaskPtr:Dynamic /*QElem*/):Int;
  @:native("MDQueryGetResultAtIndex") public static function MDQueryGetResultAtIndex(query:Dynamic /*__MDQuery*/, idx:Int):Dynamic /*Dynamic*/;
  @:native("ColorSyncProfileCreate") public static function ColorSyncProfileCreate(data:Dynamic, error:Dynamic /*__CFError*/):Dynamic;
  @:native("HClrRBit") public static function HClrRBit(h:Int):Dynamic /*Void*/;
  @:native("CFStringIsSurrogateHighCharacter") public static function CFStringIsSurrogateHighCharacter(used:Dynamic /*Dynamic*/):Int;
  @:native("CFBagCreateCopy") public static function CFBagCreateCopy(allocator:Dynamic, theBag:Dynamic):Dynamic;
  @:native("CFURLCreateFromFileSystemRepresentation") public static function CFURLCreateFromFileSystemRepresentation(allocator:Dynamic, buffer:Dynamic /*Dynamic*/, bufLen:Int, isDirectory:Int):Dynamic;
  @:native("GetAliasSizeFromPtr") public static function GetAliasSizeFromPtr(alias:Dynamic /*Dynamic*/):Int;
  @:native("X2Frac") public static function X2Frac(x:Dynamic /*Float*/):Int;
  @:native("CFSetGetValues") public static function CFSetGetValues(theSet:Dynamic, values:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("Get1Resource") public static function Get1Resource(theType:Int, theID:Int):Int;
  @:native("CFFileDescriptorCreate") public static function CFFileDescriptorCreate(allocator:Dynamic, fd:Int, closeOnInvalidate:Int, callout:Dynamic, context:Dynamic /*Dynamic*/):Dynamic /*__CFFileDescriptor*/;
  @:native("SSLSetProtocolVersion") public static function SSLSetProtocolVersion(context:Dynamic /*SSLContext*/, version:Dynamic /*SSLProtocol*/):Int;
  @:native("S32Set") public static function S32Set(value:Dynamic):Int;
  @:native("CFMachPortCreateRunLoopSource") public static function CFMachPortCreateRunLoopSource(allocator:Dynamic, port:Dynamic /*__CFMachPort*/, order:Int):Dynamic /*__CFRunLoopSource*/;
  @:native("IOSurfaceGetUseCount") public static function IOSurfaceGetUseCount(buffer:Dynamic /*__IOSurface*/):Dynamic /*Int*/;
  @:native("NewDebugAssertOutputHandlerUPP") public static function NewDebugAssertOutputHandlerUPP(userRoutine:Dynamic):Dynamic;
  @:native("CGPathGetTypeID") public static function CGPathGetTypeID():Int;
  @:native("DisposeCollection") public static function DisposeCollection(c:Dynamic /*OpaqueCollection*/):Dynamic /*Void*/;
  @:native("NewOSLDisposeTokenUPP") public static function NewOSLDisposeTokenUPP(userRoutine:Dynamic):Dynamic;
  @:native("CFPreferencesCopyAppValue") public static function CFPreferencesCopyAppValue(key:Dynamic, applicationID:Dynamic):Dynamic;
  @:native("CFStringTrimWhitespace") public static function CFStringTrimWhitespace(theString:Dynamic /*__CFString*/):Dynamic /*Void*/;
  @:native("SecTrustSetOptions") public static function SecTrustSetOptions(trustRef:Dynamic /*__SecTrust*/, options:Dynamic /*SecTrustOptionFlags*/):Int;
  @:native("SKDocumentGetSchemeName") public static function SKDocumentGetSchemeName(inDocument:Dynamic):Dynamic;
  @:native("FSEventStreamStop") public static function FSEventStreamStop(streamRef:Dynamic /*__FSEventStream*/):Dynamic /*Void*/;
  @:native("CGShadingRetain") public static function CGShadingRetain(shading:CGShading):CGShading;
  @:native("CFStringGetHyphenationLocationBeforeIndex") public static function CFStringGetHyphenationLocationBeforeIndex(string:Dynamic, location:Int, limitRange:Dynamic /*CFRange*/, options:Int, locale:Dynamic, character:Int):Int;
  @:native("CGColorCreateGenericRGB") public static function CGColorCreateGenericRGB(red:Float, green:Float, blue:Float, alpha:Float):CGColor;
  @:native("CTFontManagerRegisterFontsForURLs") public static function CTFontManagerRegisterFontsForURLs(fontURLs:Dynamic, scope:Dynamic /*CTFontManagerScope*/, errors:Dynamic):Dynamic /*Bool*/;
  @:native("InvokeIconGetterUPP") public static function InvokeIconGetterUPP(theType:Int, yourDataPtr:Dynamic /*Void*/, userUPP:Dynamic):Int;
  @:native("FSFileSecuritySetMode") public static function FSFileSecuritySetMode(fileSec:Dynamic /*__FSFileSecurity*/, mode:Int):Int;
  @:native("CTFrameDraw") public static function CTFrameDraw(frame:Dynamic, context:CGContext):Dynamic /*Void*/;
  @:native("FlattenCollectionToHdl") public static function FlattenCollectionToHdl(aCollection:Dynamic /*OpaqueCollection*/, flattened:Int):Int;
  @:native("FSSetForkSize") public static function FSSetForkSize(forkRefNum:Int, positionMode:Int, positionOffset:Dynamic):Int;
  @:native("FSGetVolumeParms") public static function FSGetVolumeParms(volume:Int, buffer:Dynamic /*GetVolParmsInfoBuffer*/, bufferSize:Int):Int;
  @:native("CFSocketGetDefaultNameRegistryPortNumber") public static function CFSocketGetDefaultNameRegistryPortNumber():Int;
  @:native("SubAbsoluteFromAbsolute") public static function SubAbsoluteFromAbsolute(leftAbsoluteTime:Dynamic /*UnsignedWide*/, rightAbsoluteTime:Dynamic /*UnsignedWide*/):Dynamic /*UnsignedWide*/;
  @:native("CVPixelBufferCreateWithPlanarBytes") public static function CVPixelBufferCreateWithPlanarBytes(allocator:Dynamic, width:Dynamic /*Int*/, height:Dynamic /*Int*/, pixelFormatType:Int, dataPtr:Dynamic /*Void*/, dataSize:Dynamic /*Int*/, numberOfPlanes:Dynamic /*Int*/, planeBaseAddress:Dynamic /*Void*/, planeWidth:Dynamic /*Int*/, planeHeight:Dynamic /*Int*/, planeBytesPerRow:Dynamic /*Int*/, releaseCallback:Dynamic, releaseRefCon:Dynamic /*Void*/, pixelBufferAttributes:Dynamic, pixelBufferOut:Dynamic /*__CVBuffer*/):Int;
  @:native("GetMaxResourceSize") public static function GetMaxResourceSize(theResource:Int):Dynamic /*Int*/;
  @:native("UCCompareTextDefault") public static function UCCompareTextDefault(options:Int, text1Ptr:Dynamic /*Dynamic*/, text1Length:Int, text2Ptr:Dynamic /*Dynamic*/, text2Length:Int, equivalent:Int, order:Int):Int;
  @:native("LSSharedFileListItemResolve") public static function LSSharedFileListItemResolve(inItem:Dynamic /*OpaqueLSSharedFileListItemRef*/, inFlags:Int, outURL:Dynamic, outRef:Dynamic /*FSRef*/):Int;
  @:native("CFNetServiceGetName") public static function CFNetServiceGetName(theService:Dynamic /*__CFNetService*/):Dynamic;
  @:native("CFAllocatorGetContext") public static function CFAllocatorGetContext(allocator:Dynamic, context:Dynamic /*CFAllocatorContext*/):Dynamic /*Void*/;
  @:native("DisposeDebugComponentCallbackUPP") public static function DisposeDebugComponentCallbackUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CGPDFContentStreamRelease") public static function CGPDFContentStreamRelease(cs:CGPDFContentStream):Dynamic /*Void*/;
  @:native("ICStart") public static function ICStart(inst:Dynamic /*OpaqueICInstance*/, signature:Int):Int;
  @:native("FracCos") public static function FracCos(x:Int):Int;
  @:native("GetComponentIndString") public static function GetComponentIndString(aComponent:Dynamic /*ComponentRecord*/, theString:Dynamic /*Int*/, strListID:Int, index:Int):Int;
  @:native("HIShapeCreateMutableWithRect") public static function HIShapeCreateMutableWithRect(inRect:Dynamic /*Dynamic*/):Dynamic /*__HIShape*/;
  @:native("SSLSetRsaBlinding") public static function SSLSetRsaBlinding(context:Dynamic /*SSLContext*/, blinding:Int):Int;
  @:native("MDQueryEnableUpdates") public static function MDQueryEnableUpdates(query:Dynamic /*__MDQuery*/):Dynamic /*Void*/;
  @:native("CGContextClosePath") public static function CGContextClosePath(c:CGContext):Dynamic /*Void*/;
  @:native("PMPrinterCreateFromPrinterID") public static function PMPrinterCreateFromPrinterID(printerID:Dynamic):Dynamic /*OpaquePMPrinter*/;
  @:native("CSIdentityQueryExecuteAsynchronously") public static function CSIdentityQueryExecuteAsynchronously(query:Dynamic /*__CSIdentityQuery*/, flags:Int, clientContext:Dynamic /*Dynamic*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Int;
  @:native("CFURLWriteDataAndPropertiesToResource") public static function CFURLWriteDataAndPropertiesToResource(url:Dynamic, dataToWrite:Dynamic, propertiesToWrite:Dynamic, errorCode:Int):Int;
  @:native("CFPlugInUnregisterPlugInType") public static function CFPlugInUnregisterPlugInType(factoryUUID:Dynamic, typeUUID:Dynamic):Int;
  @:native("WriteResource") public static function WriteResource(theResource:Int):Dynamic /*Void*/;
  @:native("CGImageSourceUpdateData") public static function CGImageSourceUpdateData(isrc:CGImageSource, data:Dynamic, final:Dynamic /*Bool*/):Dynamic /*Void*/;
  @:native("CFWriteStreamScheduleWithRunLoop") public static function CFWriteStreamScheduleWithRunLoop(stream:Dynamic /*__CFWriteStream*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("CFHTTPMessageIsHeaderComplete") public static function CFHTTPMessageIsHeaderComplete(message:Dynamic /*__CFHTTPMessage*/):Int;
  @:native("UTCreateStringForOSType") public static function UTCreateStringForOSType(inOSType:Int):Dynamic;
  @:native("ColorSyncCMMGetBundle") public static function ColorSyncCMMGetBundle(_:Dynamic /*ColorSyncCMM*/):Dynamic /*__CFBundle*/;
  @:native("DisposeAEDisposeExternalUPP") public static function DisposeAEDisposeExternalUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("MDQuerySetDispatchQueue") public static function MDQuerySetDispatchQueue(query:Dynamic /*__MDQuery*/, queue:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CFGetRetainCount") public static function CFGetRetainCount(cf:Dynamic):Int;
  @:native("CFHTTPAuthenticationAppliesToRequest") public static function CFHTTPAuthenticationAppliesToRequest(auth:Dynamic /*_CFHTTPAuthentication*/, request:Dynamic /*__CFHTTPMessage*/):Int;
  @:native("FSNewAliasFromPath") public static function FSNewAliasFromPath(fromFilePath:Dynamic /*Dynamic*/, targetPath:Dynamic /*Dynamic*/, flags:Int, inAlias:Dynamic /*AliasRecord*/, isDirectory:Int):Int;
  @:native("NSExtraRefCount") public static function NSExtraRefCount(object:Dynamic /*Dynamic*/):Int;
  @:native("MPWaitForEvent") public static function MPWaitForEvent(event:Dynamic /*OpaqueMPEventID*/, flags:Int, timeout:Int):Int;
  @:native("CGImageGetBitsPerComponent") public static function CGImageGetBitsPerComponent(image:CGImage):Dynamic /*Int*/;
  @:native("CFStringCreateWithCString") public static function CFStringCreateWithCString(alloc:Dynamic, cStr:Dynamic /*Dynamic*/, encoding:Int):Dynamic;
  @:native("SecRandomCopyBytes") public static function SecRandomCopyBytes(rnd:Dynamic, count:Dynamic /*Int*/, bytes:Dynamic /*UInt*/):Dynamic /*Int*/;
  @:native("LSCopyApplicationURLsForURL") public static function LSCopyApplicationURLsForURL(inURL:Dynamic, inRoleMask:Dynamic /*LSRolesMask*/):Dynamic;
  @:native("CFFileSecurityGetMode") public static function CFFileSecurityGetMode(fileSec:Dynamic /*__CFFileSecurity*/, mode:Dynamic /*Dynamic*/):Int;
  @:native("NewSelectorFunctionUPP") public static function NewSelectorFunctionUPP(userRoutine:Dynamic):Dynamic;
  @:native("UInt64ToUnsignedWide") public static function UInt64ToUnsignedWide(used:Dynamic /*Dynamic*/):Dynamic /*UnsignedWide*/;
  @:native("CGContextTranslateCTM") public static function CGContextTranslateCTM(c:CGContext, tx:Float, ty:Float):Dynamic /*Void*/;
  @:native("CFBundleGetDataPointersForNames") public static function CFBundleGetDataPointersForNames(bundle:Dynamic /*__CFBundle*/, symbolNames:Dynamic, stbl:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("ConvertFromUnicodeToScriptCodeRun") public static function ConvertFromUnicodeToScriptCodeRun(iUnicodeToTextInfo:Dynamic /*OpaqueUnicodeToTextRunInfo*/, iUnicodeLen:Int, iUnicodeStr:Dynamic /*Dynamic*/, iControlFlags:Int, iOffsetCount:Int, iOffsetArray:Dynamic /*Dynamic*/, oOffsetCount:Int, oOffsetArray:Int, iOutputBufLen:Int, oInputRead:Int, oOutputLen:Int, oOutputStr:Void, iScriptRunBufLen:Int, oScriptRunOutLen:Int, oScriptCodeRuns:Dynamic /*ScriptCodeRun*/):Int;
  @:native("CFURLCopyParameterString") public static function CFURLCopyParameterString(anURL:Dynamic, charactersToLeaveEscaped:Dynamic):Dynamic;
  @:native("HIShapeUnion") public static function HIShapeUnion(inShape1:Dynamic, inShape2:Dynamic, outResult:Dynamic /*__HIShape*/):Int;
  @:native("CSDiskSpaceCancelRecovery") public static function CSDiskSpaceCancelRecovery(operationUUID:Dynamic):Dynamic /*Void*/;
  @:native("MDItemCopyAttributeNames") public static function MDItemCopyAttributeNames(item:Dynamic /*__MDItem*/):Dynamic;
  @:native("CVImageBufferGetDisplaySize") public static function CVImageBufferGetDisplaySize(imageBuffer:Dynamic /*__CVBuffer*/):CGSize;
  @:native("CFBitVectorGetCountOfBit") public static function CFBitVectorGetCountOfBit(bv:Dynamic, range:Dynamic /*CFRange*/, value:Int):Int;
  @:native("RegisterComponentFileRef") public static function RegisterComponentFileRef(ref:Dynamic /*Dynamic*/, global:Int):Int;
  @:native("CGContextShowGlyphs") public static function CGContextShowGlyphs(c:CGContext, g:Dynamic /*Dynamic*/, count:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("CGPDFContextCreate") public static function CGPDFContextCreate(consumer:CGDataConsumer, mediaBox:Dynamic /*Dynamic*/, auxiliaryInfo:Dynamic):CGContext;
  @:native("PMPaperGetID") public static function PMPaperGetID(paper:Dynamic /*OpaquePMPaper*/, paperID:Dynamic):Int;
  @:native("CGPDFContentStreamCreateWithPage") public static function CGPDFContentStreamCreateWithPage(page:CGPDFPage):CGPDFContentStream;
  @:native("CFCharacterSetUnion") public static function CFCharacterSetUnion(theSet:Dynamic /*__CFCharacterSet*/, theOtherSet:Dynamic):Dynamic /*Void*/;
  @:native("GetNextResourceFile") public static function GetNextResourceFile(curRefNum:Int, nextRefNum:Int):Int;
  @:native("KCGetAttribute") public static function KCGetAttribute(item:Dynamic /*KCItemRef*/, attr:Dynamic /*KCAttribute*/, actualLength:Int):Int;
  @:native("CATransform3DGetAffineTransform") public static function CATransform3DGetAffineTransform(t:CATransform3D):CGAffineTransform;
  @:native("PMGetFirstPage") public static function PMGetFirstPage(printSettings:Dynamic /*OpaquePMPrintSettings*/, first:Int):Int;
  @:native("CFDictionaryCreateMutable") public static function CFDictionaryCreateMutable(allocator:Dynamic, capacity:Int, keyCallBacks:Dynamic /*Dynamic*/, valueCallBacks:Dynamic /*Dynamic*/):Dynamic /*__CFDictionary*/;
  @:native("CollectionTagExists") public static function CollectionTagExists(c:Dynamic /*OpaqueCollection*/, tag:Int):Int;
  @:native("ConvertFromUnicodeToTextRun") public static function ConvertFromUnicodeToTextRun(iUnicodeToTextInfo:Dynamic /*OpaqueUnicodeToTextRunInfo*/, iUnicodeLen:Int, iUnicodeStr:Dynamic /*Dynamic*/, iControlFlags:Int, iOffsetCount:Int, iOffsetArray:Dynamic /*Dynamic*/, oOffsetCount:Int, oOffsetArray:Int, iOutputBufLen:Int, oInputRead:Int, oOutputLen:Int, oOutputStr:Void, iEncodingRunBufLen:Int, oEncodingRunOutLen:Int, oEncodingRuns:Dynamic /*TextEncodingRun*/):Int;
  @:native("CGFunctionGetTypeID") public static function CGFunctionGetTypeID():Int;
  @:native("BitNot") public static function BitNot(value:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("PBUnlinkObjectSync") public static function PBUnlinkObjectSync(paramBlock:Dynamic /*FSRefParam*/):Int;
  @:native("CFBitVectorGetCount") public static function CFBitVectorGetCount(bv:Dynamic):Int;
  @:native("CFCalendarGetTypeID") public static function CFCalendarGetTypeID():Int;
  @:native("InvokeAVLDisposeItemUPP") public static function InvokeAVLDisposeItemUPP(tree:Dynamic /*AVLTreeStruct*/, dataP:Dynamic /*Dynamic*/, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CFRunLoopTimerIsValid") public static function CFRunLoopTimerIsValid(timer:Dynamic /*__CFRunLoopTimer*/):Int;
  @:native("AEStreamWriteData") public static function AEStreamWriteData(ref:Dynamic /*OpaqueAEStreamRef*/, data:Dynamic /*Dynamic*/, length:Int):Int;
  @:native("SKIndexGetTermDocumentCount") public static function SKIndexGetTermDocumentCount(inIndex:Dynamic /*__SKIndex*/, inTermID:Int):Int;
  @:native("SecTrustSetPolicies") public static function SecTrustSetPolicies(trust:Dynamic /*__SecTrust*/, policies:Dynamic):Int;
  @:native("CTFontManagerCopyAvailableFontFamilyNames") public static function CTFontManagerCopyAvailableFontFamilyNames():Dynamic;
  @:native("UTTypeCopyDeclaringBundleURL") public static function UTTypeCopyDeclaringBundleURL(inUTI:Dynamic):Dynamic;
  @:native("ICGetPerm") public static function ICGetPerm(inst:Dynamic /*OpaqueICInstance*/, perm:Int):Int;
  @:native("CFFileDescriptorInvalidate") public static function CFFileDescriptorInvalidate(f:Dynamic /*__CFFileDescriptor*/):Dynamic /*Void*/;
  @:native("ATSFontGetPostScriptName") public static function ATSFontGetPostScriptName(iFont:Int, iOptions:Int, oName:Dynamic):Int;
  @:native("ATSFontGetAutoActivationSettingForApplication") public static function ATSFontGetAutoActivationSettingForApplication(iApplicationFileURL:Dynamic):Int;
  @:native("CFRunLoopSourceInvalidate") public static function CFRunLoopSourceInvalidate(source:Dynamic /*__CFRunLoopSource*/):Dynamic /*Void*/;
  @:native("CGContextSetFillPattern") public static function CGContextSetFillPattern(c:CGContext, pattern:CGPattern, components:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CSIdentityQueryCreateForPersistentReference") public static function CSIdentityQueryCreateForPersistentReference(allocator:Dynamic, referenceData:Dynamic):Dynamic /*__CSIdentityQuery*/;
  @:native("ResolveDefaultTextEncoding") public static function ResolveDefaultTextEncoding(encoding:Int):Int;
  @:native("CFNetworkExecuteProxyAutoConfigurationURL") public static function CFNetworkExecuteProxyAutoConfigurationURL(proxyAutoConfigURL:Dynamic, targetURL:Dynamic, cb:Dynamic, clientContext:Dynamic /*CFStreamClientContext*/):Dynamic /*__CFRunLoopSource*/;
  @:native("SpeechSynthesisUnregisterModuleURL") public static function SpeechSynthesisUnregisterModuleURL(url:Dynamic):Int;
  @:native("CGPDFScannerPopNumber") public static function CGPDFScannerPopNumber(scanner:CGPDFScanner, value:Float):Dynamic /*Bool*/;
  @:native("CTFontManagerGetAutoActivationSetting") public static function CTFontManagerGetAutoActivationSetting(bundleIdentifier:Dynamic):Dynamic /*CTFontManagerAutoActivationSetting*/;
  @:native("PMPrinterGetDriverReleaseInfo") public static function PMPrinterGetDriverReleaseInfo(printer:Dynamic /*OpaquePMPrinter*/, release:Dynamic /*VersRec*/):Int;
  @:native("SKIndexDocumentIteratorCopyNext") public static function SKIndexDocumentIteratorCopyNext(inIterator:Dynamic /*__SKIndexDocumentIterator*/):Dynamic;
  @:native("GetMacOSStatusErrorString") public static function GetMacOSStatusErrorString(err:Int):Dynamic /*Dynamic*/;
  @:native("CGContextSetBlendMode") public static function CGContextSetBlendMode(c:CGContext, mode:CGBlendMode):Dynamic /*Void*/;
  @:native("NewHandle") public static function NewHandle(byteCount:Int):Int;
  @:native("CGImageMetadataCopyStringValueWithPath") public static function CGImageMetadataCopyStringValueWithPath(metadata:Dynamic, parent:CGImageMetadataTag, path:Dynamic):Dynamic;
  @:native("CFTreeSortChildren") public static function CFTreeSortChildren(tree:Dynamic /*__CFTree*/, comparator:Dynamic, context:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("ICGetIndProfile") public static function ICGetIndProfile(inst:Dynamic /*OpaqueICInstance*/, index:Dynamic /*Int*/, thisID:Int):Int;
  @:native("CFDateFormatterCreateStringWithAbsoluteTime") public static function CFDateFormatterCreateStringWithAbsoluteTime(allocator:Dynamic, formatter:Dynamic /*__CFDateFormatter*/, at:Float):Dynamic;
  @:native("SetResInfo") public static function SetResInfo(theResource:Int, theID:Int, name:Dynamic):Dynamic /*Void*/;
  @:native("GetIconRef") public static function GetIconRef(vRefNum:Int, creator:Int, iconType:Int, theIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("ICSetPrefHandle") public static function ICSetPrefHandle(inst:Dynamic /*OpaqueICInstance*/, key:Dynamic, attr:Int, prefh:Int):Int;
  @:native("NSSetUncaughtExceptionHandler") public static function NSSetUncaughtExceptionHandler(_:Dynamic):Dynamic /*Void*/;
  @:native("CGImageMetadataCopyTags") public static function CGImageMetadataCopyTags(metadata:Dynamic):Dynamic;
  @:native("CTFontDescriptorCopyLocalizedAttribute") public static function CTFontDescriptorCopyLocalizedAttribute(descriptor:Dynamic, attribute:Dynamic, language:Dynamic):Dynamic;
  @:native("DASessionGetTypeID") public static function DASessionGetTypeID():Int;
  @:native("IOSurfaceGetHeight") public static function IOSurfaceGetHeight(buffer:Dynamic /*__IOSurface*/):Dynamic /*Int*/;
  @:native("PMSessionGetDataFromSession") public static function PMSessionGetDataFromSession(printSession:Dynamic /*OpaquePMPrintSession*/, key:Dynamic, data:Dynamic):Int;
  @:native("NSMapInsert") public static function NSMapInsert(table:NSMapTable, key:Dynamic /*Dynamic*/, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("NSAllMapTableValues") public static function NSAllMapTableValues(table:NSMapTable):NSArray;
  @:native("SecTrustSetAnchorCertificates") public static function SecTrustSetAnchorCertificates(trust:Dynamic /*__SecTrust*/, anchorCertificates:Dynamic):Int;
  @:native("CFURLCreateResourcePropertyForKeyFromBookmarkData") public static function CFURLCreateResourcePropertyForKeyFromBookmarkData(allocator:Dynamic, resourcePropertyKey:Dynamic, bookmark:Dynamic):Dynamic;
  @:native("AEBuildDesc") public static function AEBuildDesc(dst:Dynamic /*AEDesc*/, error:Dynamic /*AEBuildError*/, src:Dynamic /*Dynamic*/):Int;
  @:native("CGPDFScannerGetContentStream") public static function CGPDFScannerGetContentStream(scanner:CGPDFScanner):CGPDFContentStream;
  @:native("GetResInfo") public static function GetResInfo(theResource:Int, theID:Int, theType:Int, name:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("CFCalendarSetLocale") public static function CFCalendarSetLocale(calendar:Dynamic /*__CFCalendar*/, locale:Dynamic):Dynamic /*Void*/;
  @:native("CFCharacterSetIsCharacterMember") public static function CFCharacterSetIsCharacterMember(theSet:Dynamic, theChar:Int):Int;
  @:native("DisposeGetMissingComponentResourceUPP") public static function DisposeGetMissingComponentResourceUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("LMGetSysMap") public static function LMGetSysMap():Int;
  @:native("AECheckIsRecord") public static function AECheckIsRecord(theDesc:Dynamic /*Dynamic*/):Int;
  @:native("MDLabelCopyAttributeName") public static function MDLabelCopyAttributeName(label:Dynamic /*__MDLabel*/):Dynamic;
  @:native("CGContextConvertPointToDeviceSpace") public static function CGContextConvertPointToDeviceSpace(c:CGContext, point:CGPoint):CGPoint;
  @:native("PMCreatePageFormat") public static function PMCreatePageFormat(pageFormat:Dynamic /*OpaquePMPageFormat*/):Int;
  @:native("AERemoveCoercionHandler") public static function AERemoveCoercionHandler(fromType:Int, toType:Int, handler:Dynamic, isSysHandler:Int):Int;
  @:native("PMPrintSettingsToOptions") public static function PMPrintSettingsToOptions(settings:Dynamic /*OpaquePMPrintSettings*/, options:Dynamic /*Int*/):Int;
  @:native("FSUnmountVolumeSync") public static function FSUnmountVolumeSync(vRefNum:Int, flags:Int, dissenter:Dynamic /*Dynamic*/):Int;
  @:native("UISaveVideoAtPathToSavedPhotosAlbum") public static function UISaveVideoAtPathToSavedPhotosAlbum(videoPath:NSString, completionTarget:Dynamic /*Dynamic*/, completionSelector:Dynamic /*String*/, contextInfo:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("CFReadStreamClose") public static function CFReadStreamClose(stream:Dynamic /*__CFReadStream*/):Dynamic /*Void*/;
  @:native("CTParagraphStyleCreateCopy") public static function CTParagraphStyleCreateCopy(paragraphStyle:Dynamic):Dynamic;
  @:native("CSIdentityAddMember") public static function CSIdentityAddMember(group:Dynamic /*__CSIdentity*/, member:Dynamic /*__CSIdentity*/):Dynamic /*Void*/;
  @:native("CGPatternGetTypeID") public static function CGPatternGetTypeID():Int;
  @:native("CFPlugInRemoveInstanceForFactory") public static function CFPlugInRemoveInstanceForFactory(factoryID:Dynamic):Dynamic /*Void*/;
  @:native("SecKeyEncrypt") public static function SecKeyEncrypt(key:Dynamic /*__SecKey*/, padding:Dynamic /*SecPadding*/, plainText:Dynamic /*Dynamic*/, plainTextLen:Dynamic /*Int*/, cipherText:Dynamic /*UInt*/, cipherTextLen:Dynamic /*Int*/):Int;
  @:native("CTTypesetterSuggestClusterBreak") public static function CTTypesetterSuggestClusterBreak(typesetter:Dynamic, startIndex:Int, width:Dynamic /*Float*/):Int;
  @:native("CFMessagePortIsRemote") public static function CFMessagePortIsRemote(ms:Dynamic /*__CFMessagePort*/):Int;
  @:native("CGPDFScannerRetain") public static function CGPDFScannerRetain(scanner:CGPDFScanner):CGPDFScanner;
  @:native("TECFlushText") public static function TECFlushText(encodingConverter:Dynamic /*OpaqueTECObjectRef*/, outputBuffer:Int, outputBufferLength:Int, actualOutputLength:Int):Int;
  @:native("UCDisposeCollator") public static function UCDisposeCollator(collatorRef:Dynamic /*OpaqueCollatorRef*/):Int;
  @:native("MPSetQueueReserve") public static function MPSetQueueReserve(queue:Dynamic /*OpaqueMPQueueID*/, count:Int):Int;
  @:native("CSIdentityRemoveAlias") public static function CSIdentityRemoveAlias(identity:Dynamic /*__CSIdentity*/, alias:Dynamic):Dynamic /*Void*/;
  @:native("CGPDFDocumentGetCatalog") public static function CGPDFDocumentGetCatalog(document:CGPDFDocument):CGPDFDictionary;
  @:native("SKIndexGetMaximumDocumentID") public static function SKIndexGetMaximumDocumentID(inIndex:Dynamic /*__SKIndex*/):Int;
  @:native("LSSharedFileListItemCopyProperty") public static function LSSharedFileListItemCopyProperty(inItem:Dynamic /*OpaqueLSSharedFileListItemRef*/, inPropertyName:Dynamic):Dynamic;
  @:native("CGContextGetTextMatrix") public static function CGContextGetTextMatrix(c:CGContext):CGAffineTransform;
  @:native("CFLocaleGetWindowsLocaleCodeFromLocaleIdentifier") public static function CFLocaleGetWindowsLocaleCodeFromLocaleIdentifier(localeIdentifier:Dynamic):Dynamic /*UInt*/;
  @:native("CFDataGetBytePtr") public static function CFDataGetBytePtr(theData:Dynamic):Dynamic /*Dynamic*/;
  @:native("SecAccessControlGetTypeID") public static function SecAccessControlGetTypeID():Int;
  @:native("CSIdentityGetEmailAddress") public static function CSIdentityGetEmailAddress(identity:Dynamic /*__CSIdentity*/):Dynamic;
  @:native("MDQueryCreateForItems") public static function MDQueryCreateForItems(allocator:Dynamic, queryString:Dynamic, valueListAttrs:Dynamic, sortingAttrs:Dynamic, items:Dynamic):Dynamic /*__MDQuery*/;
  @:native("CFLocaleCreate") public static function CFLocaleCreate(allocator:Dynamic, localeIdentifier:Dynamic):Dynamic;
  @:native("OpenADefaultComponent") public static function OpenADefaultComponent(componentType:Int, componentSubType:Int, ci:Dynamic /*ComponentInstanceRecord*/):Int;
  @:native("NewDebugComponentCallbackUPP") public static function NewDebugComponentCallbackUPP(userRoutine:Dynamic):Dynamic;
  @:native("PMPrintSettingsGetValue") public static function PMPrintSettingsGetValue(printSettings:Dynamic /*OpaquePMPrintSettings*/, key:Dynamic, value:Dynamic):Int;
  @:native("CFWriteStreamCopyError") public static function CFWriteStreamCopyError(stream:Dynamic /*__CFWriteStream*/):Dynamic /*__CFError*/;
  @:native("CFHostStartInfoResolution") public static function CFHostStartInfoResolution(theHost:Dynamic /*__CFHost*/, info:Dynamic /*CFHostInfoType*/, error:Dynamic /*CFStreamError*/):Int;
  @:native("IOSurfaceCopyAllValues") public static function IOSurfaceCopyAllValues(buffer:Dynamic /*__IOSurface*/):Dynamic;
  @:native("IOSurfaceDecrementUseCount") public static function IOSurfaceDecrementUseCount(buffer:Dynamic /*__IOSurface*/):Dynamic /*Void*/;
  @:native("CFDateFormatterCreateISO8601Formatter") public static function CFDateFormatterCreateISO8601Formatter(allocator:Dynamic, formatOptions:Dynamic /*CFISO8601DateFormatOptions*/):Dynamic /*__CFDateFormatter*/;
  @:native("CFRunLoopSourceSignal") public static function CFRunLoopSourceSignal(source:Dynamic /*__CFRunLoopSource*/):Dynamic /*Void*/;
  @:native("CreateThreadPool") public static function CreateThreadPool(threadStyle:Int, numToCreate:Int, stackSize:Int):Int;
  @:native("CFDateFormatterGetAbsoluteTimeFromString") public static function CFDateFormatterGetAbsoluteTimeFromString(formatter:Dynamic /*__CFDateFormatter*/, string:Dynamic, rangep:Dynamic /*CFRange*/, atp:Float):Int;
  @:native("PMPaperCreateCustom") public static function PMPaperCreateCustom(printer:Dynamic /*OpaquePMPrinter*/, id:Dynamic, name:Dynamic, width:Dynamic /*Float*/, height:Dynamic /*Float*/, margins:Dynamic /*Dynamic*/, paperP:Dynamic /*OpaquePMPaper*/):Int;
  @:native("CGBitmapContextGetHeight") public static function CGBitmapContextGetHeight(context:CGContext):Dynamic /*Int*/;
  @:native("IOSurfaceGetPropertyAlignment") public static function IOSurfaceGetPropertyAlignment(property:Dynamic):Dynamic /*Int*/;
  @:native("CFNetworkExecuteProxyAutoConfigurationScript") public static function CFNetworkExecuteProxyAutoConfigurationScript(proxyAutoConfigurationScript:Dynamic, targetURL:Dynamic, cb:Dynamic, clientContext:Dynamic /*CFStreamClientContext*/):Dynamic /*__CFRunLoopSource*/;
  @:native("CFNetServiceResolve") public static function CFNetServiceResolve(theService:Dynamic /*__CFNetService*/, error:Dynamic /*CFStreamError*/):Int;
  @:native("CTRunGetAdvances") public static function CTRunGetAdvances(run:Dynamic, range:Dynamic /*CFRange*/, buffer:CGSize):Dynamic /*Void*/;
  @:native("CGPDFDocumentRelease") public static function CGPDFDocumentRelease(document:CGPDFDocument):Dynamic /*Void*/;
  @:native("CTFontCreateCopyWithAttributes") public static function CTFontCreateCopyWithAttributes(font:Dynamic, size:Float, matrix:Dynamic /*Dynamic*/, attributes:Dynamic):Dynamic;
  @:native("NSZoneRealloc") public static function NSZoneRealloc(zone:Dynamic /*_NSZone*/, ptr:Dynamic /*Void*/, size:Int):Dynamic /*Void*/;
  @:native("DisposeTimerUPP") public static function DisposeTimerUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CGAffineTransformMake") public static function CGAffineTransformMake(a:Float, b:Float, c:Float, d:Float, tx:Float, ty:Float):CGAffineTransform;
  @:native("CGPDFScannerScan") public static function CGPDFScannerScan(scanner:CGPDFScanner):Dynamic /*Bool*/;
  @:native("CFURLStartAccessingSecurityScopedResource") public static function CFURLStartAccessingSecurityScopedResource(url:Dynamic):Int;
  @:native("FSFileSecuritySetGroup") public static function FSFileSecuritySetGroup(fileSec:Dynamic /*__FSFileSecurity*/, group:Int):Int;
  @:native("CTFontCopyTable") public static function CTFontCopyTable(font:Dynamic, table:Int, options:Dynamic /*CTFontTableOptions*/):Dynamic;
  @:native("PMPrinterIsPostScriptPrinter") public static function PMPrinterIsPostScriptPrinter(printer:Dynamic /*OpaquePMPrinter*/, isPSPrinter:Int):Int;
  @:native("NSStringFromMapTable") public static function NSStringFromMapTable(table:NSMapTable):NSString;
  @:native("CGContextDrawRadialGradient") public static function CGContextDrawRadialGradient(c:CGContext, gradient:CGGradient, startCenter:CGPoint, startRadius:Float, endCenter:CGPoint, endRadius:Float, options:CGGradientDrawingOptions):Dynamic /*Void*/;
  @:native("CTFontGetVerticalTranslationsForGlyphs") public static function CTFontGetVerticalTranslationsForGlyphs(font:Dynamic, glyphs:Dynamic /*Dynamic*/, translations:CGSize, count:Int):Dynamic /*Void*/;
  @:native("CFNumberCompare") public static function CFNumberCompare(number:Dynamic, otherNumber:Dynamic, context:Dynamic /*Void*/):Dynamic /*CFComparisonResult*/;
  @:native("UIGraphicsBeginPDFPageWithInfo") public static function UIGraphicsBeginPDFPageWithInfo(bounds:CGRect, pageInfo:NSDictionary):Dynamic /*Void*/;
  @:native("FSFileOperationCancel") public static function FSFileOperationCancel(fileOp:Dynamic /*__FSFileOperation*/):Int;
  @:native("PBCreateForkSync") public static function PBCreateForkSync(paramBlock:Dynamic /*FSForkIOParam*/):Int;
  @:native("FSOpenOrphanResFile") public static function FSOpenOrphanResFile(ref:Dynamic /*Dynamic*/, permission:Dynamic, refNum:Int):Int;
  @:native("PlotIconRefInContext") public static function PlotIconRefInContext(inContext:CGContext, inRect:Dynamic /*Dynamic*/, inAlign:Int, inTransform:Int, inLabelColor:Dynamic /*Dynamic*/, inFlags:Int, inIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("ColorSyncTransformCreate") public static function ColorSyncTransformCreate(profileSequence:Dynamic, options:Dynamic):Dynamic /*ColorSyncTransform*/;
  @:native("CFAttributedStringCreate") public static function CFAttributedStringCreate(alloc:Dynamic, str:Dynamic, attributes:Dynamic):Dynamic;
  @:native("SecPolicyCreateWithProperties") public static function SecPolicyCreateWithProperties(policyIdentifier:Dynamic, properties:Dynamic):Dynamic /*__SecPolicy*/;
  @:native("PBCatalogSearchSync") public static function PBCatalogSearchSync(paramBlock:Dynamic /*FSCatalogBulkParam*/):Int;
  @:native("CFAttributedStringReplaceString") public static function CFAttributedStringReplaceString(aStr:Dynamic /*__CFAttributedString*/, range:Dynamic /*CFRange*/, replacement:Dynamic):Dynamic /*Void*/;
  @:native("DisposeUnicodeToTextRunInfo") public static function DisposeUnicodeToTextRunInfo(ioUnicodeToTextRunInfo:Dynamic /*OpaqueUnicodeToTextRunInfo*/):Int;
  @:native("IsIconRefMaskEmpty") public static function IsIconRefMaskEmpty(iconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("CTRubyAnnotationGetOverhang") public static function CTRubyAnnotationGetOverhang(rubyAnnotation:Dynamic):Dynamic /*CTRubyOverhang*/;
  @:native("CFFileDescriptorEnableCallBacks") public static function CFFileDescriptorEnableCallBacks(f:Dynamic /*__CFFileDescriptor*/, callBackTypes:Int):Dynamic /*Void*/;
  @:native("NSStringFromCGVector") public static function NSStringFromCGVector(vector:CGVector):NSString;
  @:native("AEPutDesc") public static function AEPutDesc(theAEDescList:Dynamic /*AEDesc*/, index:Dynamic /*Int*/, theAEDesc:Dynamic /*Dynamic*/):Int;
  @:native("NewThreadTerminationUPP") public static function NewThreadTerminationUPP(userRoutine:Dynamic):Dynamic;
  @:native("PBCreateFileUnicodeSync") public static function PBCreateFileUnicodeSync(paramBlock:Dynamic /*FSRefParam*/):Int;
  @:native("CGPathCreateCopy") public static function CGPathCreateCopy(path:Dynamic):Dynamic;
  @:native("CFAttributedStringBeginEditing") public static function CFAttributedStringBeginEditing(aStr:Dynamic /*__CFAttributedString*/):Dynamic /*Void*/;
  @:native("CTFontCopyVariationAxes") public static function CTFontCopyVariationAxes(font:Dynamic):Dynamic;
  @:native("PBReadForkAsync") public static function PBReadForkAsync(paramBlock:Dynamic /*FSForkIOParam*/):Dynamic /*Void*/;
  @:native("FSEventStreamRelease") public static function FSEventStreamRelease(streamRef:Dynamic /*__FSEventStream*/):Dynamic /*Void*/;
  @:native("CFNetServiceBrowserSearchForDomains") public static function CFNetServiceBrowserSearchForDomains(browser:Dynamic /*__CFNetServiceBrowser*/, registrationDomains:Int, error:Dynamic /*CFStreamError*/):Int;
  @:native("TECGetAvailableTextEncodings") public static function TECGetAvailableTextEncodings(availableEncodings:Int, maxAvailableEncodings:Int, actualAvailableEncodings:Int):Int;
  @:native("CFStringLowercase") public static function CFStringLowercase(theString:Dynamic /*__CFString*/, locale:Dynamic):Dynamic /*Void*/;
  @:native("CGContextDrawImage") public static function CGContextDrawImage(c:CGContext, rect:CGRect, image:CGImage):Dynamic /*Void*/;
  @:native("SecKeyRawVerify") public static function SecKeyRawVerify(key:Dynamic /*__SecKey*/, padding:Dynamic /*SecPadding*/, signedData:Dynamic /*Dynamic*/, signedDataLen:Dynamic /*Int*/, sig:Dynamic /*Dynamic*/, sigLen:Dynamic /*Int*/):Int;
  @:native("PLstrcat") public static function PLstrcat(str:Int, append:Dynamic):Int;
  @:native("CTTextTabCreate") public static function CTTextTabCreate(alignment:Dynamic /*CTTextAlignment*/, location:Dynamic /*Float*/, options:Dynamic):Dynamic;
  @:native("SecPolicySetProperties") public static function SecPolicySetProperties(policyRef:Dynamic /*__SecPolicy*/, properties:Dynamic):Int;
  @:native("CGContextConvertSizeToDeviceSpace") public static function CGContextConvertSizeToDeviceSpace(c:CGContext, size:CGSize):CGSize;
  @:native("NSSwapHostShortToBig") public static function NSSwapHostShortToBig(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("DADiskGetBSDName") public static function DADiskGetBSDName(disk:Dynamic /*__DADisk*/):Dynamic /*Dynamic*/;
  @:native("CTRunDelegateGetRefCon") public static function CTRunDelegateGetRefCon(runDelegate:Dynamic):Dynamic /*Void*/;
  @:native("NSSwapLittleShortToHost") public static function NSSwapLittleShortToHost(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("SecKeyGeneratePair") public static function SecKeyGeneratePair(parameters:Dynamic, publicKey:Dynamic /*__SecKey*/, privateKey:Dynamic /*__SecKey*/):Int;
  @:native("WSProtocolHandlerSetDeserializationOverride") public static function WSProtocolHandlerSetDeserializationOverride(protocol:Dynamic /*OpaqueWSProtocolHandlerRef*/, typeNamespace:Dynamic, typeName:Dynamic, deserializationProc:Dynamic, context:Dynamic /*WSClientContext*/):Dynamic /*Void*/;
  @:native("TranslationCreateWithSourceArray") public static function TranslationCreateWithSourceArray(inSourceTypes:Dynamic, inTranslationFlags:Int, outDestinationTypes:Dynamic, outTranslations:Dynamic):Int;
  @:native("PBIterateForksSync") public static function PBIterateForksSync(paramBlock:Dynamic /*FSForkIOParam*/):Int;
  @:native("SecTrustSetExceptions") public static function SecTrustSetExceptions(trust:Dynamic /*__SecTrust*/, exceptions:Dynamic):Dynamic /*Bool*/;
  @:native("BitOrAtomic8") public static function BitOrAtomic8(mask:Int, address:Int):Int;
  @:native("CGFontGetGlyphAdvances") public static function CGFontGetGlyphAdvances(font:CGFont, glyphs:Dynamic /*Dynamic*/, count:Dynamic /*Int*/, advances:Dynamic /*Int*/):Dynamic /*Bool*/;
  @:native("CFURLCreateCopyDeletingLastPathComponent") public static function CFURLCreateCopyDeletingLastPathComponent(allocator:Dynamic, url:Dynamic):Dynamic;
  @:native("DisposeThreadSchedulerUPP") public static function DisposeThreadSchedulerUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("ColorSyncCMMCreate") public static function ColorSyncCMMCreate(cmmBundle:Dynamic /*__CFBundle*/):Dynamic /*ColorSyncCMM*/;
  @:native("CSIdentitySetFullName") public static function CSIdentitySetFullName(identity:Dynamic /*__CSIdentity*/, fullName:Dynamic):Dynamic /*Void*/;
  @:native("CGImageDestinationSetProperties") public static function CGImageDestinationSetProperties(idst:CGImageDestination, properties:Dynamic):Dynamic /*Void*/;
  @:native("WideToSInt64") public static function WideToSInt64(used:Dynamic /*Dynamic*/):Dynamic;
  @:native("ICSetPref") public static function ICSetPref(inst:Dynamic /*OpaqueICInstance*/, key:Dynamic, attr:Int, buf:Dynamic /*Dynamic*/, size:Dynamic /*Int*/):Int;
  @:native("CTRunGetStatus") public static function CTRunGetStatus(run:Dynamic):Dynamic /*CTRunStatus*/;
  @:native("CGImageMetadataCreateXMPData") public static function CGImageMetadataCreateXMPData(metadata:Dynamic, options:Dynamic):Dynamic;
  @:native("UIAccessibilityIsReduceTransparencyEnabled") public static function UIAccessibilityIsReduceTransparencyEnabled():Dynamic /*Bool*/;
  @:native("CTFontGetDescent") public static function CTFontGetDescent(font:Dynamic):Float;
  @:native("ICCountProfiles") public static function ICCountProfiles(inst:Dynamic /*OpaqueICInstance*/, count:Dynamic /*Int*/):Int;
  @:native("CTFontCreateUIFontForLanguage") public static function CTFontCreateUIFontForLanguage(uiType:Dynamic /*CTFontUIFontType*/, size:Float, language:Dynamic):Dynamic;
  @:native("CFReadStreamRead") public static function CFReadStreamRead(stream:Dynamic /*__CFReadStream*/, buffer:Int, bufferLength:Int):Int;
  @:native("CFFileSecuritySetGroupUUID") public static function CFFileSecuritySetGroupUUID(fileSec:Dynamic /*__CFFileSecurity*/, groupUUID:Dynamic):Int;
  @:native("CountComponents") public static function CountComponents(looking:Dynamic /*ComponentDescription*/):Dynamic /*Int*/;
  @:native("AEPutAttributeDesc") public static function AEPutAttributeDesc(theAppleEvent:Dynamic /*AEDesc*/, theAEKeyword:Int, theAEDesc:Dynamic /*Dynamic*/):Int;
  @:native("CGPDFDictionaryApplyFunction") public static function CGPDFDictionaryApplyFunction(dict:CGPDFDictionary, func:Dynamic, info:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("IsValidIconRef") public static function IsValidIconRef(theIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("PBFSResolveNodeIDAsync") public static function PBFSResolveNodeIDAsync(paramBlock:Dynamic /*FSRefParam*/):Int;
  @:native("NSResetMapTable") public static function NSResetMapTable(table:NSMapTable):Dynamic /*Void*/;
  @:native("NSDecimalCopy") public static function NSDecimalCopy(destination:Dynamic /*NSDecimal*/, source:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("ICMapFilename") public static function ICMapFilename(inst:Dynamic /*OpaqueICInstance*/, filename:Dynamic, entry:Dynamic /*ICMapEntry*/):Int;
  @:native("CFHTTPAuthenticationRequiresOrderedRequests") public static function CFHTTPAuthenticationRequiresOrderedRequests(auth:Dynamic /*_CFHTTPAuthentication*/):Int;
  @:native("BitSet") public static function BitSet(bytePtr:Dynamic /*Void*/, bitNum:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("KCGetKeychainManagerVersion") public static function KCGetKeychainManagerVersion(returnVers:Int):Int;
  @:native("CGContextClip") public static function CGContextClip(c:CGContext):Dynamic /*Void*/;
  @:native("CurrentProcessorSpeed") public static function CurrentProcessorSpeed():Dynamic /*Int*/;
  @:native("CFBagGetValues") public static function CFBagGetValues(theBag:Dynamic, values:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("PMPrinterCopyHostName") public static function PMPrinterCopyHostName(printer:Dynamic /*OpaquePMPrinter*/, hostNameP:Dynamic):Int;
  @:native("UIAccessibilityRegisterGestureConflictWithZoom") public static function UIAccessibilityRegisterGestureConflictWithZoom():Dynamic /*Void*/;
  @:native("CFHTTPMessageAppendBytes") public static function CFHTTPMessageAppendBytes(message:Dynamic /*__CFHTTPMessage*/, newBytes:Dynamic /*Dynamic*/, numBytes:Int):Int;
  @:native("PBSetCatalogInfoSync") public static function PBSetCatalogInfoSync(paramBlock:Dynamic /*FSRefParam*/):Int;
  @:native("CGPathGetBoundingBox") public static function CGPathGetBoundingBox(path:Dynamic):CGRect;
  @:native("LSSharedFileListGetTypeID") public static function LSSharedFileListGetTypeID():Int;
  @:native("DisposeIconActionUPP") public static function DisposeIconActionUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("KCSetData") public static function KCSetData(item:Dynamic /*KCItemRef*/, length:Int, data:Dynamic /*Dynamic*/):Int;
  @:native("InvokeSpeechSyncUPP") public static function InvokeSpeechSyncUPP(chan:Dynamic /*SpeechChannelRecord*/, refCon:Void, syncMessage:Int, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("S64Min") public static function S64Min():Dynamic;
  @:native("CGColorSpaceCopyName") public static function CGColorSpaceCopyName(space:CGColorSpace):Dynamic;
  @:native("FSGetVolumeForDADisk") public static function FSGetVolumeForDADisk(disk:Dynamic /*__DADisk*/, vRefNum:Int):Int;
  @:native("Count1Resources") public static function Count1Resources(theType:Int):Int;
  @:native("GetProcessInformation") public static function GetProcessInformation(PSN:Dynamic /*Dynamic*/, info:Dynamic /*ProcessInfoRec*/):Int;
  @:native("CFStringCreateArrayBySeparatingStrings") public static function CFStringCreateArrayBySeparatingStrings(alloc:Dynamic, theString:Dynamic, separatorString:Dynamic):Dynamic;
  @:native("CFFileSecuritySetMode") public static function CFFileSecuritySetMode(fileSec:Dynamic /*__CFFileSecurity*/, mode:Dynamic /*Dynamic*/):Int;
  @:native("FSMatchAliasBulk") public static function FSMatchAliasBulk(fromFile:Dynamic /*Dynamic*/, rulesMask:Dynamic /*Int*/, inAlias:Dynamic /*AliasRecord*/, aliasCount:Dynamic /*Int*/, aliasList:Dynamic /*FSRef*/, needsUpdate:Int, aliasFilter:Dynamic, yourDataPtr:Dynamic /*Void*/):Int;
  @:native("PMSessionEndDocumentNoDialog") public static function PMSessionEndDocumentNoDialog(printSession:Dynamic /*OpaquePMPrintSession*/):Int;
  @:native("ATSFontSetGlobalAutoActivationSetting") public static function ATSFontSetGlobalAutoActivationSetting(iSetting:Int):Int;
  @:native("NSSwapHostIntToLittle") public static function NSSwapHostIntToLittle(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("CSIdentityAuthorityCopyLocalizedName") public static function CSIdentityAuthorityCopyLocalizedName(authority:Dynamic /*__CSIdentityAuthority*/):Dynamic;
  @:native("NSAllocateObject") public static function NSAllocateObject(aClass:Dynamic, extraBytes:Int, zone:Dynamic /*_NSZone*/):Dynamic /*Dynamic*/;
  @:native("CTFontGetUnderlinePosition") public static function CTFontGetUnderlinePosition(font:Dynamic):Float;
  @:native("CVPixelBufferUnlockBaseAddress") public static function CVPixelBufferUnlockBaseAddress(pixelBuffer:Dynamic /*__CVBuffer*/, unlockFlags:Dynamic /*CVPixelBufferLockFlags*/):Int;
  @:native("CFSetCreateMutableCopy") public static function CFSetCreateMutableCopy(allocator:Dynamic, capacity:Int, theSet:Dynamic):Dynamic /*__CFSet*/;
  @:native("CFPlugInGetBundle") public static function CFPlugInGetBundle(plugIn:Dynamic /*__CFBundle*/):Dynamic /*__CFBundle*/;
  @:native("CFAttributedStringEndEditing") public static function CFAttributedStringEndEditing(aStr:Dynamic /*__CFAttributedString*/):Dynamic /*Void*/;
  @:native("MPExtractTaskState") public static function MPExtractTaskState(task:Dynamic /*OpaqueMPTaskID*/, kind:Int, info:Dynamic /*Void*/):Int;
  @:native("AEStreamCreateEvent") public static function AEStreamCreateEvent(clazz:Int, id:Int, targetType:Int, targetData:Dynamic /*Dynamic*/, targetLength:Int, returnID:Int, transactionID:Int):Dynamic /*OpaqueAEStreamRef*/;
  @:native("SSLGetProtocolVersionEnabled") public static function SSLGetProtocolVersionEnabled(context:Dynamic /*SSLContext*/, protocol:Dynamic /*SSLProtocol*/, enable:Int):Int;
  @:native("CGColorSpaceCreateDeviceGray") public static function CGColorSpaceCreateDeviceGray():CGColorSpace;
  @:native("RemoveFolderDescriptor") public static function RemoveFolderDescriptor(foldType:Int):Int;
  @:native("CFPreferencesGetAppBooleanValue") public static function CFPreferencesGetAppBooleanValue(key:Dynamic, applicationID:Dynamic, keyExistsAndHasValidFormat:Int):Int;
  @:native("CFReadStreamCopyDispatchQueue") public static function CFReadStreamCopyDispatchQueue(stream:Dynamic /*__CFReadStream*/):Dynamic /*Dynamic*/;
  @:native("UCIsSurrogateLowCharacter") public static function UCIsSurrogateLowCharacter(used:Dynamic /*Dynamic*/):Int;
  @:native("UIApplicationMain") public static function UIApplicationMain(argc:Dynamic /*Int*/, argv:Dynamic /*Int*/, principalClassName:NSString, delegateClassName:NSString):Dynamic /*Int*/;
  @:native("PLstrstr") public static function PLstrstr(str1:Dynamic, searchStr:Dynamic):Int;
  @:native("SetFallbackUnicodeToText") public static function SetFallbackUnicodeToText(iUnicodeToTextInfo:Dynamic /*OpaqueUnicodeToTextInfo*/, iFallback:Dynamic, iControlFlags:Int, iInfoPtr:Void):Int;
  @:native("FSGetVolumeForDiskID") public static function FSGetVolumeForDiskID(diskID:Dynamic, vRefNum:Int):Int;
  @:native("FSCopyDiskIDForVolume") public static function FSCopyDiskIDForVolume(vRefNum:Int, diskID:Dynamic):Int;
  @:native("CurResFile") public static function CurResFile():Int;
  @:native("CGColorGetConstantColor") public static function CGColorGetConstantColor(colorName:Dynamic):CGColor;
  @:native("CGImageGetColorSpace") public static function CGImageGetColorSpace(image:CGImage):CGColorSpace;
  @:native("CGContextSaveGState") public static function CGContextSaveGState(c:CGContext):Dynamic /*Void*/;
  @:native("CFArrayInsertValueAtIndex") public static function CFArrayInsertValueAtIndex(theArray:Dynamic /*__CFArray*/, idx:Int, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CFStringGetRangeOfComposedCharactersAtIndex") public static function CFStringGetRangeOfComposedCharactersAtIndex(theString:Dynamic, theIndex:Int):Dynamic /*CFRange*/;
  @:native("LSSharedFileListGetSeedValue") public static function LSSharedFileListGetSeedValue(inList:Dynamic /*OpaqueLSSharedFileListRef*/):Int;
  @:native("NSReallocateCollectable") public static function NSReallocateCollectable(ptr:Dynamic /*Void*/, size:Int, options:Int):Dynamic /*Void*/;
  @:native("GetCollectionItem") public static function GetCollectionItem(c:Dynamic /*OpaqueCollection*/, tag:Int, id:Int, itemSize:Int, itemData:Dynamic /*Void*/):Int;
  @:native("SetSpeechInfo") public static function SetSpeechInfo(chan:Dynamic /*SpeechChannelRecord*/, selector:Int, speechInfo:Dynamic /*Dynamic*/):Int;
  @:native("CFLocaleCreateCanonicalLocaleIdentifierFromString") public static function CFLocaleCreateCanonicalLocaleIdentifierFromString(allocator:Dynamic, localeIdentifier:Dynamic):Dynamic;
  @:native("CTFontCopyAttribute") public static function CTFontCopyAttribute(font:Dynamic, attribute:Dynamic):Dynamic;
  @:native("MPDisposeTaskException") public static function MPDisposeTaskException(task:Dynamic /*OpaqueMPTaskID*/, action:Int):Int;
  @:native("Munger") public static function Munger(h:Int, offset:Dynamic /*Int*/, ptr1:Dynamic /*Dynamic*/, len1:Dynamic /*Int*/, ptr2:Dynamic /*Dynamic*/, len2:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("PBXUnlockRangeAsync") public static function PBXUnlockRangeAsync(paramBlock:Dynamic /*FSRangeLockParam*/):Int;
  @:native("AXIsProcessTrustedWithOptions") public static function AXIsProcessTrustedWithOptions(options:Dynamic):Int;
  @:native("WSMethodInvocationCopyParameters") public static function WSMethodInvocationCopyParameters(invocation:Dynamic /*OpaqueWSMethodInvocationRef*/, parameterOrder:Dynamic):Dynamic;
  @:native("CGVectorMake") public static function CGVectorMake(dx:Float, dy:Float):CGVector;
  @:native("FSEjectVolumeAsync") public static function FSEjectVolumeAsync(vRefNum:Int, flags:Int, volumeOp:Dynamic /*OpaqueFSVolumeOperation*/, clientData:Dynamic /*Void*/, callback:Dynamic, runloop:Dynamic /*__CFRunLoop*/, runloopMode:Dynamic):Int;
  @:native("GetSpeechInfo") public static function GetSpeechInfo(chan:Dynamic /*SpeechChannelRecord*/, selector:Int, speechInfo:Dynamic /*Void*/):Int;
  @:native("FSUnlinkObject") public static function FSUnlinkObject(ref:Dynamic /*Dynamic*/):Int;
  @:native("CGBitmapContextCreateImage") public static function CGBitmapContextCreateImage(context:CGContext):CGImage;
  @:native("DisposeKCCallbackUPP") public static function DisposeKCCallbackUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("SSLCopyPeerCertificates") public static function SSLCopyPeerCertificates(context:Dynamic /*SSLContext*/, certs:Dynamic):Int;
  @:native("LSSharedFileListInsertItemURL") public static function LSSharedFileListInsertItemURL(inList:Dynamic /*OpaqueLSSharedFileListRef*/, insertAfterThisItem:Dynamic /*OpaqueLSSharedFileListItemRef*/, inDisplayName:Dynamic, inIconRef:Dynamic /*OpaqueIconRef*/, inURL:Dynamic, inPropertiesToSet:Dynamic, inPropertiesToClear:Dynamic):Dynamic /*OpaqueLSSharedFileListItemRef*/;
  @:native("CGContextConvertSizeToUserSpace") public static function CGContextConvertSizeToUserSpace(c:CGContext, size:CGSize):CGSize;
  @:native("NSCreateMapTable") public static function NSCreateMapTable(keyCallBacks:Dynamic /*NSMapTableKeyCallBacks*/, valueCallBacks:Dynamic /*NSMapTableValueCallBacks*/, capacity:Int):NSMapTable;
  @:native("CFBundleCopyExecutableArchitectures") public static function CFBundleCopyExecutableArchitectures(bundle:Dynamic /*__CFBundle*/):Dynamic;
  @:native("LSSetDefaultRoleHandlerForContentType") public static function LSSetDefaultRoleHandlerForContentType(inContentType:Dynamic, inRole:Dynamic /*LSRolesMask*/, inHandlerBundleID:Dynamic):Int;
  @:native("NewPtrClear") public static function NewPtrClear(byteCount:Int):Int;
  @:native("TaskLevel") public static function TaskLevel():Int;
  @:native("LSCopyDefaultRoleHandlerForContentType") public static function LSCopyDefaultRoleHandlerForContentType(inContentType:Dynamic, inRole:Dynamic /*LSRolesMask*/):Dynamic;
  @:native("CGContextSetRenderingIntent") public static function CGContextSetRenderingIntent(c:CGContext, intent:CGColorRenderingIntent):Dynamic /*Void*/;
  @:native("BitTst") public static function BitTst(bytePtr:Dynamic /*Dynamic*/, bitNum:Dynamic /*Int*/):Int;
  @:native("MDQueryCopyValueListAttributes") public static function MDQueryCopyValueListAttributes(query:Dynamic /*__MDQuery*/):Dynamic;
  @:native("MDItemCreateWithURL") public static function MDItemCreateWithURL(allocator:Dynamic, url:Dynamic):Dynamic /*__MDItem*/;
  @:native("DisposeSpeechSyncUPP") public static function DisposeSpeechSyncUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CFRunLoopContainsSource") public static function CFRunLoopContainsSource(rl:Dynamic /*__CFRunLoop*/, source:Dynamic /*__CFRunLoopSource*/, mode:Dynamic):Int;
  @:native("CSIdentitySetPassword") public static function CSIdentitySetPassword(user:Dynamic /*__CSIdentity*/, password:Dynamic):Dynamic /*Void*/;
  @:native("CFNetServiceSetClient") public static function CFNetServiceSetClient(theService:Dynamic /*__CFNetService*/, clientCB:Dynamic, clientContext:Dynamic /*CFNetServiceClientContext*/):Int;
  @:native("SetResourceSize") public static function SetResourceSize(theResource:Int, newSize:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("SetAliasUserTypeWithPtr") public static function SetAliasUserTypeWithPtr(alias:Dynamic /*AliasRecord*/, userType:Int):Dynamic /*Void*/;
  @:native("CGPDFDictionaryGetName") public static function CGPDFDictionaryGetName(dict:CGPDFDictionary, key:Dynamic /*Dynamic*/, value:Dynamic /*Dynamic*/):Dynamic /*Bool*/;
  @:native("CFStringGetMaximumSizeForEncoding") public static function CFStringGetMaximumSizeForEncoding(length:Int, encoding:Int):Int;
  @:native("CVPixelBufferPoolRelease") public static function CVPixelBufferPoolRelease(pixelBufferPool:Dynamic /*__CVPixelBufferPool*/):Dynamic /*Void*/;
  @:native("U32SetU") public static function U32SetU(value:Dynamic):Int;
  @:native("CFWriteStreamCreateWithFile") public static function CFWriteStreamCreateWithFile(alloc:Dynamic, fileURL:Dynamic):Dynamic /*__CFWriteStream*/;
  @:native("CTFontDescriptorCreateCopyWithVariation") public static function CTFontDescriptorCreateCopyWithVariation(original:Dynamic, variationIdentifier:Dynamic, variationValue:Float):Dynamic;
  @:native("NSStringFromCGAffineTransform") public static function NSStringFromCGAffineTransform(transform:CGAffineTransform):NSString;
  @:native("CFHTTPAuthenticationRequiresAccountDomain") public static function CFHTTPAuthenticationRequiresAccountDomain(auth:Dynamic /*_CFHTTPAuthentication*/):Int;
  @:native("ColorSyncProfileGetURL") public static function ColorSyncProfileGetURL(prof:Dynamic, error:Dynamic /*__CFError*/):Dynamic;
  @:native("TranslationGetTranslationFlags") public static function TranslationGetTranslationFlags(inTranslation:Dynamic /*OpaqueTranslationRef*/, outTranslationFlags:Int):Int;
  @:native("NewFSVolumeUnmountUPP") public static function NewFSVolumeUnmountUPP(userRoutine:Dynamic):Dynamic;
  @:native("MPGetTaskStorageValue") public static function MPGetTaskStorageValue(taskIndex:Int):Void;
  @:native("MDQueryGetTypeID") public static function MDQueryGetTypeID():Int;
  @:native("CFRunLoopIsWaiting") public static function CFRunLoopIsWaiting(rl:Dynamic /*__CFRunLoop*/):Int;
  @:native("SecKeyGetBlockSize") public static function SecKeyGetBlockSize(key:Dynamic /*__SecKey*/):Dynamic /*Int*/;
  @:native("NewATSUDirectLayoutOperationOverrideUPP") public static function NewATSUDirectLayoutOperationOverrideUPP(userRoutine:Dynamic):Dynamic;
  @:native("PBCreateForkAsync") public static function PBCreateForkAsync(paramBlock:Dynamic /*FSForkIOParam*/):Dynamic /*Void*/;
  @:native("DASessionSetDispatchQueue") public static function DASessionSetDispatchQueue(session:Dynamic /*__DASession*/, queue:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CGDataProviderCreateSequential") public static function CGDataProviderCreateSequential(info:Dynamic /*Void*/, callbacks:Dynamic /*Dynamic*/):CGDataProvider;
  @:native("CFNetServiceBrowserInvalidate") public static function CFNetServiceBrowserInvalidate(browser:Dynamic /*__CFNetServiceBrowser*/):Dynamic /*Void*/;
  @:native("CFFileSecurityCopyGroupUUID") public static function CFFileSecurityCopyGroupUUID(fileSec:Dynamic /*__CFFileSecurity*/, groupUUID:Dynamic):Int;
  @:native("SetComponentRefcon") public static function SetComponentRefcon(aComponent:Dynamic /*ComponentRecord*/, theRefcon:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("SKSearchResultsGetCount") public static function SKSearchResultsGetCount(inSearchResults:Dynamic /*__SKSearchResults*/):Int;
  @:native("ColorSyncDeviceSetCustomProfiles") public static function ColorSyncDeviceSetCustomProfiles(deviceClass:Dynamic, deviceID:Dynamic, profileInfo:Dynamic):Dynamic /*Bool*/;
  @:native("MPSetTaskType") public static function MPSetTaskType(task:Dynamic /*OpaqueMPTaskID*/, taskType:Int):Int;
  @:native("CGContextRetain") public static function CGContextRetain(c:CGContext):CGContext;
  @:native("PBOpenForkAsync") public static function PBOpenForkAsync(paramBlock:Dynamic /*FSForkIOParam*/):Dynamic /*Void*/;
  @:native("UIAccessibilityRequestGuidedAccessSession") public static function UIAccessibilityRequestGuidedAccessSession(enable:Dynamic /*Bool*/, completionHandler:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CFGetTypeID") public static function CFGetTypeID(cf:Dynamic):Int;
  @:native("SetThreadTerminator") public static function SetThreadTerminator(thread:Int, threadTerminator:Dynamic, terminationProcParam:Dynamic /*Void*/):Int;
  @:native("GetComponentRefcon") public static function GetComponentRefcon(aComponent:Dynamic /*ComponentRecord*/):Dynamic /*Int*/;
  @:native("InvokeAECoercePtrUPP") public static function InvokeAECoercePtrUPP(typeCode:Int, dataPtr:Dynamic /*Dynamic*/, dataSize:Int, toType:Int, handlerRefcon:Void, result:Dynamic /*AEDesc*/, userUPP:Dynamic):Int;
  @:native("CGVectorFromString") public static function CGVectorFromString(string:NSString):CGVector;
  @:native("CGSizeMake") public static function CGSizeMake(width:Float, height:Float):CGSize;
  @:native("CFArraySetValueAtIndex") public static function CFArraySetValueAtIndex(theArray:Dynamic /*__CFArray*/, idx:Int, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("SKDocumentGetName") public static function SKDocumentGetName(inDocument:Dynamic):Dynamic;
  @:native("PMPageFormatCreateWithDataRepresentation") public static function PMPageFormatCreateWithDataRepresentation(data:Dynamic, pageFormat:Dynamic /*OpaquePMPageFormat*/):Int;
  @:native("ATSFontGetVerticalMetrics") public static function ATSFontGetVerticalMetrics(iFont:Int, iOptions:Int, oMetrics:Dynamic /*ATSFontMetrics*/):Int;
  @:native("PBDeleteObjectSync") public static function PBDeleteObjectSync(paramBlock:Dynamic /*FSRefParam*/):Int;
  @:native("RevertTextEncodingToScriptInfo") public static function RevertTextEncodingToScriptInfo(iEncoding:Int, oTextScriptID:Int, oTextLanguageID:Int, oTextFontname:Dynamic /*Int*/):Int;
  @:native("SetCollectionDefaultAttributes") public static function SetCollectionDefaultAttributes(c:Dynamic /*OpaqueCollection*/, whichAttributes:Int, newAttributes:Int):Dynamic /*Void*/;
  @:native("CVPixelBufferGetWidth") public static function CVPixelBufferGetWidth(pixelBuffer:Dynamic /*__CVBuffer*/):Dynamic /*Int*/;
  @:native("CFLocaleCopyISOLanguageCodes") public static function CFLocaleCopyISOLanguageCodes():Dynamic;
  @:native("CSIdentityQueryExecute") public static function CSIdentityQueryExecute(query:Dynamic /*__CSIdentityQuery*/, flags:Int, error:Dynamic /*__CFError*/):Int;
  @:native("IOSurfaceAllowsPixelSizeCasting") public static function IOSurfaceAllowsPixelSizeCasting(buffer:Dynamic /*__IOSurface*/):Int;
  @:native("CGImageMetadataTagCreate") public static function CGImageMetadataTagCreate(xmlns:Dynamic, prefix:Dynamic, name:Dynamic, type:CGImageMetadataType, value:Dynamic):CGImageMetadataTag;
  @:native("CFDateCreate") public static function CFDateCreate(allocator:Dynamic, at:Float):Dynamic;
  @:native("CVImageBufferGetColorSpace") public static function CVImageBufferGetColorSpace(imageBuffer:Dynamic /*__CVBuffer*/):CGColorSpace;
  @:native("DADiskCopyDescription") public static function DADiskCopyDescription(disk:Dynamic /*__DADisk*/):Dynamic;
  @:native("FSCloseIterator") public static function FSCloseIterator(iterator:Dynamic /*OpaqueFSIterator*/):Int;
  @:native("CFHTTPMessageCopyRequestURL") public static function CFHTTPMessageCopyRequestURL(request:Dynamic /*__CFHTTPMessage*/):Dynamic;
  @:native("CGPathCreateWithRect") public static function CGPathCreateWithRect(rect:CGRect, transform:Dynamic /*Dynamic*/):Dynamic;
  @:native("CGRectIntegral") public static function CGRectIntegral(rect:CGRect):CGRect;
  @:native("CFLocaleCopyAvailableLocaleIdentifiers") public static function CFLocaleCopyAvailableLocaleIdentifiers():Dynamic;
  @:native("FSPathMakeRefWithOptions") public static function FSPathMakeRefWithOptions(path:Dynamic /*Dynamic*/, options:Int, ref:Dynamic /*FSRef*/, isDirectory:Int):Int;
  @:native("CGImageSourceUpdateDataProvider") public static function CGImageSourceUpdateDataProvider(isrc:CGImageSource, provider:CGDataProvider, final:Dynamic /*Bool*/):Dynamic /*Void*/;
  @:native("NSUserName") public static function NSUserName():NSString;
  @:native("CallComponentGetMPWorkFunction") public static function CallComponentGetMPWorkFunction(ci:Dynamic /*ComponentInstanceRecord*/, workFunction:Dynamic, refCon:Dynamic /*Dynamic*/):Int;
  @:native("ThreadCurrentStackSpace") public static function ThreadCurrentStackSpace(thread:Int, freeStack:Int):Int;
  @:native("GetCollectionDefaultAttributes") public static function GetCollectionDefaultAttributes(c:Dynamic /*OpaqueCollection*/):Int;
  @:native("CFDateFormatterSetFormat") public static function CFDateFormatterSetFormat(formatter:Dynamic /*__CFDateFormatter*/, formatString:Dynamic):Dynamic /*Void*/;
  @:native("CFRunLoopTimerSetTolerance") public static function CFRunLoopTimerSetTolerance(timer:Dynamic /*__CFRunLoopTimer*/, tolerance:Float):Dynamic /*Void*/;
  @:native("SInt64ToWide") public static function SInt64ToWide(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("SKSummaryGetParagraphCount") public static function SKSummaryGetParagraphCount(summary:Dynamic /*__SKSummary*/):Int;
  @:native("MPDelayUntil") public static function MPDelayUntil(expirationTime:Dynamic /*UnsignedWide*/):Int;
  @:native("TECCountDestinationTextEncodings") public static function TECCountDestinationTextEncodings(inputEncoding:Int, numberOfEncodings:Int):Int;
  @:native("UTTypeCopyDescription") public static function UTTypeCopyDescription(inUTI:Dynamic):Dynamic;
  @:native("MDQueryGetSortOptionFlagsForAttribute") public static function MDQueryGetSortOptionFlagsForAttribute(query:Dynamic /*__MDQuery*/, fieldName:Dynamic):Dynamic /*UInt*/;
  @:native("FSEventStreamCopyDescription") public static function FSEventStreamCopyDescription(streamRef:Dynamic):Dynamic;
  @:native("CreateUnicodeToTextRunInfoByScriptCode") public static function CreateUnicodeToTextRunInfoByScriptCode(iNumberOfScriptCodes:Int, iScripts:Dynamic /*Dynamic*/, oUnicodeToTextInfo:Dynamic /*OpaqueUnicodeToTextRunInfo*/):Int;
  @:native("Microseconds") public static function Microseconds(microTickCount:Dynamic /*UnsignedWide*/):Dynamic /*Void*/;
  @:native("TECGetTextEncodingInternetName") public static function TECGetTextEncodingInternetName(textEncoding:Int, encodingName:Dynamic /*Int*/):Int;
  @:native("SpeakText") public static function SpeakText(chan:Dynamic /*SpeechChannelRecord*/, textBuf:Dynamic /*Dynamic*/, textBytes:Dynamic /*Int*/):Int;
  @:native("InvokeDebugComponentCallbackUPP") public static function InvokeDebugComponentCallbackUPP(optionSelectorNum:Int, command:Int, optionSetting:Int, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("SSLSetProtocolVersionEnabled") public static function SSLSetProtocolVersionEnabled(context:Dynamic /*SSLContext*/, protocol:Dynamic /*SSLProtocol*/, enable:Int):Int;
  @:native("CGPDFDocumentCreateWithURL") public static function CGPDFDocumentCreateWithURL(url:Dynamic):CGPDFDocument;
  @:native("CFURLCopyLastPathComponent") public static function CFURLCopyLastPathComponent(url:Dynamic):Dynamic;
  @:native("PMSetPageRange") public static function PMSetPageRange(printSettings:Dynamic /*OpaquePMPrintSettings*/, minPage:Int, maxPage:Int):Int;
  @:native("CFPlugInInstanceGetFactoryName") public static function CFPlugInInstanceGetFactoryName(instance:Dynamic /*__CFPlugInInstance*/):Dynamic;
  @:native("SKSearchResultsCopyMatchingTerms") public static function SKSearchResultsCopyMatchingTerms(inSearchResults:Dynamic /*__SKSearchResults*/, inItem:Int):Dynamic;
  @:native("SKSearchGroupCopyIndexes") public static function SKSearchGroupCopyIndexes(inSearchGroup:Dynamic /*__SKSearchGroup*/):Dynamic;
  @:native("SKIndexAddDocumentWithText") public static function SKIndexAddDocumentWithText(inIndex:Dynamic /*__SKIndex*/, inDocument:Dynamic, inDocumentText:Dynamic, inCanReplace:Int):Int;
  @:native("CTTypesetterCreateWithAttributedString") public static function CTTypesetterCreateWithAttributedString(string:Dynamic):Dynamic;
  @:native("CTParagraphStyleGetTypeID") public static function CTParagraphStyleGetTypeID():Int;
  @:native("CGFontGetNumberOfGlyphs") public static function CGFontGetNumberOfGlyphs(font:CGFont):Dynamic /*Int*/;
  @:native("CGContextSetInterpolationQuality") public static function CGContextSetInterpolationQuality(c:CGContext, quality:CGInterpolationQuality):Dynamic /*Void*/;
  @:native("CFReadStreamGetError") public static function CFReadStreamGetError(stream:Dynamic /*__CFReadStream*/):Dynamic /*CFStreamError*/;
  @:native("GetProcessForPID") public static function GetProcessForPID(pid:Dynamic /*Dynamic*/, psn:Dynamic /*ProcessSerialNumber*/):Int;
  @:native("CFPlugInUnregisterFactory") public static function CFPlugInUnregisterFactory(factoryUUID:Dynamic):Int;
  @:native("DisposeOSLAdjustMarksUPP") public static function DisposeOSLAdjustMarksUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("UCCreateCollator") public static function UCCreateCollator(locale:Dynamic /*OpaqueLocaleRef*/, opVariant:Int, options:Int, collatorRef:Dynamic /*OpaqueCollatorRef*/):Int;
  @:native("SSLContextGetTypeID") public static function SSLContextGetTypeID():Int;
  @:native("CFPreferencesRemoveSuitePreferencesFromApp") public static function CFPreferencesRemoveSuitePreferencesFromApp(applicationID:Dynamic, suiteID:Dynamic):Dynamic /*Void*/;
  @:native("CGPathIsRect") public static function CGPathIsRect(path:Dynamic, rect:CGRect):Dynamic /*Bool*/;
  @:native("CFFileSecuritySetGroup") public static function CFFileSecuritySetGroup(fileSec:Dynamic /*__CFFileSecurity*/, group:Dynamic /*Dynamic*/):Int;
  @:native("NSMapRemove") public static function NSMapRemove(table:NSMapTable, key:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("NewDeferredTaskUPP") public static function NewDeferredTaskUPP(userRoutine:Dynamic):Dynamic;
  @:native("CGImageDestinationCreateWithURL") public static function CGImageDestinationCreateWithURL(url:Dynamic, type:Dynamic, count:Dynamic /*Int*/, options:Dynamic):CGImageDestination;
  @:native("SSLGetEnableCertVerify") public static function SSLGetEnableCertVerify(context:Dynamic /*SSLContext*/, enableVerify:Int):Int;
  @:native("MPNotifyQueue") public static function MPNotifyQueue(queue:Dynamic /*OpaqueMPQueueID*/, param1:Dynamic /*Void*/, param2:Dynamic /*Void*/, param3:Dynamic /*Void*/):Int;
  @:native("FixATan2") public static function FixATan2(x:Int, y:Int):Int;
  @:native("LSCanRefAcceptItem") public static function LSCanRefAcceptItem(inItemFSRef:Dynamic /*Dynamic*/, inTargetRef:Dynamic /*Dynamic*/, inRoleMask:Dynamic /*LSRolesMask*/, inFlags:Dynamic /*LSAcceptanceFlags*/, outAcceptsItem:Int):Int;
  @:native("UTTypeCreateAllIdentifiersForTag") public static function UTTypeCreateAllIdentifiersForTag(inTagClass:Dynamic, inTag:Dynamic, inConformingToUTI:Dynamic):Dynamic;
  @:native("Fix2X") public static function Fix2X(x:Int):Dynamic /*Float*/;
  @:native("BitShift") public static function BitShift(value:Dynamic /*Int*/, count:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("ColorSyncProfileUninstall") public static function ColorSyncProfileUninstall(profile:Dynamic, error:Dynamic /*__CFError*/):Dynamic /*Bool*/;
  @:native("PMWorkflowSubmitPDFWithSettings") public static function PMWorkflowSubmitPDFWithSettings(workflowItem:Dynamic, settings:Dynamic /*OpaquePMPrintSettings*/, pdfFile:Dynamic):Int;
  @:native("CFSocketCreate") public static function CFSocketCreate(allocator:Dynamic, protocolFamily:Int, socketType:Int, protocol:Int, callBackTypes:Int, callout:Dynamic, context:Dynamic /*Dynamic*/):Dynamic /*__CFSocket*/;
  @:native("SKSummaryCreateWithString") public static function SKSummaryCreateWithString(inString:Dynamic):Dynamic /*__SKSummary*/;
  @:native("UTTypeIsDynamic") public static function UTTypeIsDynamic(inUTI:Dynamic):Int;
  @:native("LocaleRefFromLangOrRegionCode") public static function LocaleRefFromLangOrRegionCode(lang:Int, region:Int, locale:Dynamic /*OpaqueLocaleRef*/):Int;
  @:native("NSSwapBigLongToHost") public static function NSSwapBigLongToHost(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("SetComponentInstanceStorage") public static function SetComponentInstanceStorage(aComponentInstance:Dynamic /*ComponentInstanceRecord*/, theStorage:Int):Dynamic /*Void*/;
  @:native("CGColorGetNumberOfComponents") public static function CGColorGetNumberOfComponents(color:CGColor):Dynamic /*Int*/;
  @:native("SpeechBusySystemWide") public static function SpeechBusySystemWide():Int;
  @:native("CFWriteStreamGetError") public static function CFWriteStreamGetError(stream:Dynamic /*__CFWriteStream*/):Dynamic /*CFStreamError*/;
  @:native("CFTreeGetTypeID") public static function CFTreeGetTypeID():Int;
  @:native("CGFontCopyVariationAxes") public static function CGFontCopyVariationAxes(font:CGFont):Dynamic;
  @:native("FSMoveObject") public static function FSMoveObject(ref:Dynamic /*Dynamic*/, destDirectory:Dynamic /*Dynamic*/, newRef:Dynamic /*FSRef*/):Int;
  @:native("FSCreateResFile") public static function FSCreateResFile(parentRef:Dynamic /*Dynamic*/, nameLength:Int, name:Dynamic /*Dynamic*/, whichInfo:Int, catalogInfo:Dynamic /*Dynamic*/, newRef:Dynamic /*FSRef*/, newSpec:Dynamic /*FSSpec*/):Dynamic /*Void*/;
  @:native("CTFontGetSize") public static function CTFontGetSize(font:Dynamic):Float;
  @:native("DisposeSpeechChannel") public static function DisposeSpeechChannel(chan:Dynamic /*SpeechChannelRecord*/):Int;
  @:native("LSCopyItemInfoForURL") public static function LSCopyItemInfoForURL(inURL:Dynamic, inWhichInfo:Dynamic /*LSRequestedInfo*/, outItemInfo:Dynamic /*LSItemInfoRecord*/):Int;
  @:native("CFTreeFindRoot") public static function CFTreeFindRoot(tree:Dynamic /*__CFTree*/):Dynamic /*__CFTree*/;
  @:native("CGColorSpaceSupportsOutput") public static function CGColorSpaceSupportsOutput(space:CGColorSpace):Dynamic /*Bool*/;
  @:native("PasteboardCopyName") public static function PasteboardCopyName(inPasteboard:Dynamic /*OpaquePasteboardRef*/, outName:Dynamic):Int;
  @:native("FSIterateForks") public static function FSIterateForks(ref:Dynamic /*Dynamic*/, forkIterator:Dynamic /*CatPositionRec*/, forkName:Dynamic /*HFSUniStr255*/, forkSize:Dynamic, forkPhysicalSize:Dynamic):Int;
  @:native("CGContextSetShouldAntialias") public static function CGContextSetShouldAntialias(c:CGContext, shouldAntialias:Dynamic /*Bool*/):Dynamic /*Void*/;
  @:native("GetComponentInstanceStorage") public static function GetComponentInstanceStorage(aComponentInstance:Dynamic /*ComponentInstanceRecord*/):Int;
  @:native("UTTypeEqual") public static function UTTypeEqual(inUTI1:Dynamic, inUTI2:Dynamic):Int;
  @:native("NewThread") public static function NewThread(threadStyle:Int, threadEntry:Dynamic, threadParam:Dynamic /*Void*/, stackSize:Int, options:Int, threadResult:Dynamic /*Dynamic*/, threadMade:Int):Int;
  @:native("CGBitmapContextGetBitmapInfo") public static function CGBitmapContextGetBitmapInfo(context:CGContext):CGBitmapInfo;
  @:native("CGImageDestinationAddImageAndMetadata") public static function CGImageDestinationAddImageAndMetadata(idst:CGImageDestination, image:CGImage, metadata:Dynamic, options:Dynamic):Dynamic /*Void*/;
  @:native("CFCharacterSetCreateBitmapRepresentation") public static function CFCharacterSetCreateBitmapRepresentation(alloc:Dynamic, theSet:Dynamic):Dynamic;
  @:native("AEDisposeRemoteProcessResolver") public static function AEDisposeRemoteProcessResolver(ref:Dynamic /*AERemoteProcessResolver*/):Dynamic /*Void*/;
  @:native("ColorSyncProfileCreateWithDisplayID") public static function ColorSyncProfileCreateWithDisplayID(displayID:Dynamic /*UInt*/):Dynamic;
  @:native("PBWriteForkAsync") public static function PBWriteForkAsync(paramBlock:Dynamic /*FSForkIOParam*/):Dynamic /*Void*/;
  @:native("CGContextSetShouldSubpixelQuantizeFonts") public static function CGContextSetShouldSubpixelQuantizeFonts(c:CGContext, shouldSubpixelQuantizeFonts:Dynamic /*Bool*/):Dynamic /*Void*/;
  @:native("AddCollectionItemHdl") public static function AddCollectionItemHdl(aCollection:Dynamic /*OpaqueCollection*/, tag:Int, id:Int, itemData:Int):Int;
  @:native("UCDisposeTextBreakLocator") public static function UCDisposeTextBreakLocator(breakRef:Dynamic /*OpaqueTextBreakLocatorRef*/):Int;
  @:native("UIAccessibilityIsVoiceOverRunning") public static function UIAccessibilityIsVoiceOverRunning():Dynamic /*Bool*/;
  @:native("CGColorSpaceCopyICCProfile") public static function CGColorSpaceCopyICCProfile(space:CGColorSpace):Dynamic;
  @:native("IOSurfaceGetElementWidthOfPlane") public static function IOSurfaceGetElementWidthOfPlane(buffer:Dynamic /*__IOSurface*/, planeIndex:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("CTFontDescriptorCreateCopyWithAttributes") public static function CTFontDescriptorCreateCopyWithAttributes(original:Dynamic, attributes:Dynamic):Dynamic;
  @:native("NSDecimalRound") public static function NSDecimalRound(result:Dynamic /*NSDecimal*/, number:Dynamic /*Dynamic*/, scale:Int, roundingMode:NSRoundingMode):Dynamic /*Void*/;
  @:native("PLstrcpy") public static function PLstrcpy(dest:Int, source:Dynamic):Int;
  @:native("SecTrustEvaluate") public static function SecTrustEvaluate(trust:Dynamic /*__SecTrust*/, result:Dynamic /*SecTrustResultType*/):Int;
  @:native("SKIndexOpenWithData") public static function SKIndexOpenWithData(inData:Dynamic, inIndexName:Dynamic):Dynamic /*__SKIndex*/;
  @:native("ATSFontFamilyIteratorNext") public static function ATSFontFamilyIteratorNext(iIterator:Dynamic /*ATSFontFamilyIterator_*/, oFamily:Int):Int;
  @:native("ATSFontGetHorizontalMetrics") public static function ATSFontGetHorizontalMetrics(iFont:Int, iOptions:Int, oMetrics:Dynamic /*ATSFontMetrics*/):Int;
  @:native("NSStringFromProtocol") public static function NSStringFromProtocol(proto:Dynamic /*Protocol*/):NSString;
  @:native("PBFlushVolumeAsync") public static function PBFlushVolumeAsync(paramBlock:Dynamic /*FSRefParam*/):Int;
  @:native("CTFontManagerUnregisterFontsForURL") public static function CTFontManagerUnregisterFontsForURL(fontURL:Dynamic, scope:Dynamic /*CTFontManagerScope*/, error:Dynamic /*__CFError*/):Dynamic /*Bool*/;
  @:native("CSGetComponentsThreadMode") public static function CSGetComponentsThreadMode():Int;
  @:native("CFNetServiceGetPortNumber") public static function CFNetServiceGetPortNumber(theService:Dynamic /*__CFNetService*/):Int;
  @:native("CFURLResourceIsReachable") public static function CFURLResourceIsReachable(url:Dynamic, error:Dynamic /*__CFError*/):Int;
  @:native("PBGetCatalogInfoAsync") public static function PBGetCatalogInfoAsync(paramBlock:Dynamic /*FSRefParam*/):Dynamic /*Void*/;
  @:native("CGFontGetDescent") public static function CGFontGetDescent(font:CGFont):Dynamic /*Int*/;
  @:native("MDItemCopyAttributeList") public static function MDItemCopyAttributeList(item:Dynamic /*__MDItem*/):Dynamic;
  @:native("CFConvertDoubleSwappedToHost") public static function CFConvertDoubleSwappedToHost(used:Dynamic /*Dynamic*/):Dynamic /*Float*/;
  @:native("CGFontCanCreatePostScriptSubset") public static function CGFontCanCreatePostScriptSubset(font:CGFont, format:CGFontPostScriptFormat):Dynamic /*Bool*/;
  @:native("CFHTTPMessageGetTypeID") public static function CFHTTPMessageGetTypeID():Int;
  @:native("CTFontDescriptorCreateCopyWithFeature") public static function CTFontDescriptorCreateCopyWithFeature(original:Dynamic, featureTypeIdentifier:Dynamic, featureSelectorIdentifier:Dynamic):Dynamic;
  @:native("CFAttributedStringGetMutableString") public static function CFAttributedStringGetMutableString(aStr:Dynamic /*__CFAttributedString*/):Dynamic /*__CFString*/;
  @:native("NewIOCompletionUPP") public static function NewIOCompletionUPP(userRoutine:Dynamic):Dynamic;
  @:native("CFStringTokenizerSetString") public static function CFStringTokenizerSetString(tokenizer:Dynamic /*__CFStringTokenizer*/, string:Dynamic, range:Dynamic /*CFRange*/):Dynamic /*Void*/;
  @:native("CFStringCreateArrayWithFindResults") public static function CFStringCreateArrayWithFindResults(alloc:Dynamic, theString:Dynamic, stringToFind:Dynamic, rangeToSearch:Dynamic /*CFRange*/, compareOptions:Dynamic /*CFStringCompareFlags*/):Dynamic;
  @:native("CSIdentityCreate") public static function CSIdentityCreate(allocator:Dynamic, identityClass:Int, fullName:Dynamic, posixName:Dynamic, flags:Int, authority:Dynamic /*__CSIdentityAuthority*/):Dynamic /*__CSIdentity*/;
  @:native("LSSharedFileListItemMove") public static function LSSharedFileListItemMove(inList:Dynamic /*OpaqueLSSharedFileListRef*/, inItem:Dynamic /*OpaqueLSSharedFileListItemRef*/, inMoveAfterItem:Dynamic /*OpaqueLSSharedFileListItemRef*/):Int;
  @:native("CATransform3DEqualToTransform") public static function CATransform3DEqualToTransform(a:CATransform3D, b:CATransform3D):Dynamic /*Bool*/;
  @:native("FSCreateResourceFork") public static function FSCreateResourceFork(ref:Dynamic /*Dynamic*/, forkNameLength:Int, forkName:Dynamic /*Dynamic*/, flags:Int):Int;
  @:native("PMCreatePageFormatWithPMPaper") public static function PMCreatePageFormatWithPMPaper(pageFormat:Dynamic /*OpaquePMPageFormat*/, paper:Dynamic /*OpaquePMPaper*/):Int;
  @:native("ICGetSeed") public static function ICGetSeed(inst:Dynamic /*OpaqueICInstance*/, seed:Dynamic /*Int*/):Int;
  @:native("DisposeThreadTerminationUPP") public static function DisposeThreadTerminationUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("PMPrinterIsPostScriptCapable") public static function PMPrinterIsPostScriptCapable(printer:Dynamic /*OpaquePMPrinter*/):Int;
  @:native("CGImageCreate") public static function CGImageCreate(width:Dynamic /*Int*/, height:Dynamic /*Int*/, bitsPerComponent:Dynamic /*Int*/, bitsPerPixel:Dynamic /*Int*/, bytesPerRow:Dynamic /*Int*/, space:CGColorSpace, bitmapInfo:CGBitmapInfo, provider:CGDataProvider, decode:Dynamic /*Dynamic*/, shouldInterpolate:Dynamic /*Bool*/, intent:CGColorRenderingIntent):CGImage;
  @:native("NSResetHashTable") public static function NSResetHashTable(table:NSHashTable):Dynamic /*Void*/;
  @:native("MDItemRemoveLabel") public static function MDItemRemoveLabel(item:Dynamic /*__MDItem*/, label:Dynamic /*__MDLabel*/):Int;
  @:native("PBSetVolumeInfoAsync") public static function PBSetVolumeInfoAsync(paramBlock:Dynamic /*FSVolumeInfoParam*/):Dynamic /*Void*/;
  @:native("PMPresetCopyName") public static function PMPresetCopyName(preset:Dynamic /*OpaquePMPreset*/, name:Dynamic):Int;
  @:native("SecItemAdd") public static function SecItemAdd(attributes:Dynamic, result:Dynamic):Int;
  @:native("CVBufferRemoveAttachment") public static function CVBufferRemoveAttachment(buffer:Dynamic /*__CVBuffer*/, key:Dynamic):Dynamic /*Void*/;
  @:native("CFNetServiceMonitorStop") public static function CFNetServiceMonitorStop(monitor:Dynamic /*__CFNetServiceMonitor*/, error:Dynamic /*CFStreamError*/):Dynamic /*Void*/;
  @:native("CFShow") public static function CFShow(obj:Dynamic):Dynamic /*Void*/;
  @:native("MPCreateTask") public static function MPCreateTask(entryPoint:Dynamic, parameter:Dynamic /*Void*/, stackSize:Int, notifyQueue:Dynamic /*OpaqueMPQueueID*/, terminationParameter1:Dynamic /*Void*/, terminationParameter2:Dynamic /*Void*/, options:Int, task:Dynamic /*OpaqueMPTaskID*/):Int;
  @:native("NSCreateMapTableWithZone") public static function NSCreateMapTableWithZone(keyCallBacks:Dynamic /*NSMapTableKeyCallBacks*/, valueCallBacks:Dynamic /*NSMapTableValueCallBacks*/, capacity:Int, zone:Dynamic /*_NSZone*/):NSMapTable;
  @:native("CFURLCreateWithFileSystemPathRelativeToBase") public static function CFURLCreateWithFileSystemPathRelativeToBase(allocator:Dynamic, filePath:Dynamic, pathStyle:Dynamic /*CFURLPathStyle*/, isDirectory:Int, baseURL:Dynamic):Dynamic;
  @:native("KCMakeKCRefFromFSRef") public static function KCMakeKCRefFromFSRef(keychainFSRef:Dynamic /*FSRef*/, keychain:Dynamic /*KCRef*/):Int;
  @:native("CGPDFPageGetDrawingTransform") public static function CGPDFPageGetDrawingTransform(page:CGPDFPage, box:CGPDFBox, rect:CGRect, rotate:Dynamic /*Int*/, preserveAspectRatio:Dynamic /*Bool*/):CGAffineTransform;
  @:native("CFLocaleCreateComponentsFromLocaleIdentifier") public static function CFLocaleCreateComponentsFromLocaleIdentifier(allocator:Dynamic, localeID:Dynamic):Dynamic;
  @:native("CFSocketSetAddress") public static function CFSocketSetAddress(s:Dynamic /*__CFSocket*/, address:Dynamic):Dynamic /*CFSocketError*/;
  @:native("PLstrrchr") public static function PLstrrchr(str1:Dynamic, ch1:Dynamic /*Int*/):Int;
  @:native("CSIdentityCreatePersistentReference") public static function CSIdentityCreatePersistentReference(allocator:Dynamic, identity:Dynamic /*__CSIdentity*/):Dynamic;
  @:native("OverrideIconRef") public static function OverrideIconRef(oldIconRef:Dynamic /*OpaqueIconRef*/, newIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("TECGetAvailableSniffers") public static function TECGetAvailableSniffers(availableSniffers:Int, maxAvailableSniffers:Int, actualAvailableSniffers:Int):Int;
  @:native("CGDataConsumerCreateWithURL") public static function CGDataConsumerCreateWithURL(url:Dynamic):CGDataConsumer;
  @:native("MDCopyLabelsMatchingExpression") public static function MDCopyLabelsMatchingExpression(simpleQueryString:Dynamic):Dynamic;
  @:native("ColorSyncIterateInstalledProfiles") public static function ColorSyncIterateInstalledProfiles(callBack:Dynamic, seed:Dynamic /*UInt*/, userInfo:Dynamic /*Void*/, error:Dynamic /*__CFError*/):Dynamic /*Void*/;
  @:native("CGContextSetStrokeColorWithColor") public static function CGContextSetStrokeColorWithColor(c:CGContext, color:CGColor):Dynamic /*Void*/;
  @:native("InvokeFMFontFamilyCallbackFilterUPP") public static function InvokeFMFontFamilyCallbackFilterUPP(iFontFamily:Int, iRefCon:Dynamic /*Void*/, userUPP:Dynamic):Int;
  @:native("CFStreamCreateBoundPair") public static function CFStreamCreateBoundPair(alloc:Dynamic, readStream:Dynamic /*__CFReadStream*/, writeStream:Dynamic /*__CFWriteStream*/, transferBufferSize:Int):Dynamic /*Void*/;
  @:native("AESendMessage") public static function AESendMessage(event:Dynamic /*Dynamic*/, reply:Dynamic /*AEDesc*/, sendMode:Int, timeOutInTicks:Dynamic /*Int*/):Int;
  @:native("CountResources") public static function CountResources(theType:Int):Int;
  @:native("TranslationPerformForURL") public static function TranslationPerformForURL(inTranslation:Dynamic /*OpaqueTranslationRef*/, inSourceURL:Dynamic, inDestinationURL:Dynamic, outTranslatedURL:Dynamic):Int;
  @:native("CVPixelFormatDescriptionRegisterDescriptionWithPixelFormatType") public static function CVPixelFormatDescriptionRegisterDescriptionWithPixelFormatType(description:Dynamic, pixelFormat:Int):Dynamic /*Void*/;
  @:native("CFHTTPMessageCreateCopy") public static function CFHTTPMessageCreateCopy(alloc:Dynamic, message:Dynamic /*__CFHTTPMessage*/):Dynamic /*__CFHTTPMessage*/;
  @:native("UIEdgeInsetsMake") public static function UIEdgeInsetsMake(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):UIEdgeInsets;
  @:native("CFBagCreateMutableCopy") public static function CFBagCreateMutableCopy(allocator:Dynamic, capacity:Int, theBag:Dynamic):Dynamic /*__CFBag*/;
  @:native("FSMakeFSRefUnicode") public static function FSMakeFSRefUnicode(parentRef:Dynamic /*Dynamic*/, nameLength:Int, name:Dynamic /*Dynamic*/, textEncodingHint:Int, newRef:Dynamic /*FSRef*/):Int;
  @:native("NewExceptionHandlerUPP") public static function NewExceptionHandlerUPP(userRoutine:Dynamic):Dynamic;
  @:native("MDQueryGetAttributeValueOfResultAtIndex") public static function MDQueryGetAttributeValueOfResultAtIndex(query:Dynamic /*__MDQuery*/, name:Dynamic, idx:Int):Dynamic /*Void*/;
  @:native("PBGetForkCBInfoAsync") public static function PBGetForkCBInfoAsync(paramBlock:Dynamic /*FSForkCBInfoParam*/):Dynamic /*Void*/;
  @:native("ATSFontGetTableDirectory") public static function ATSFontGetTableDirectory(iFont:Int, iBufferSize:Int, ioBuffer:Dynamic /*Void*/, oSize:Int):Int;
  @:native("CFNetServiceResolveWithTimeout") public static function CFNetServiceResolveWithTimeout(theService:Dynamic /*__CFNetService*/, timeout:Float, error:Dynamic /*CFStreamError*/):Int;
  @:native("CSIdentityIsHidden") public static function CSIdentityIsHidden(identity:Dynamic /*__CSIdentity*/):Int;
  @:native("CFCalendarGetMaximumRangeOfUnit") public static function CFCalendarGetMaximumRangeOfUnit(calendar:Dynamic /*__CFCalendar*/, unit:Dynamic /*CFCalendarUnit*/):Dynamic /*CFRange*/;
  @:native("NSLogv") public static function NSLogv(_:Dynamic /*Dynamic*/, _:Dynamic /*Dynamic*/, format:NSString, args:Dynamic /*__va_list_tag*/):Dynamic /*Void*/;
  @:native("CFDictionaryRemoveValue") public static function CFDictionaryRemoveValue(theDict:Dynamic /*__CFDictionary*/, key:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("NewDebuggerNewThreadUPP") public static function NewDebuggerNewThreadUPP(userRoutine:Dynamic):Dynamic;
  @:native("ColorSyncProfileVerify") public static function ColorSyncProfileVerify(prof:Dynamic, errors:Dynamic /*__CFError*/, warnings:Dynamic /*__CFError*/):Dynamic /*Bool*/;
  @:native("CFNetServiceGetTXTData") public static function CFNetServiceGetTXTData(theService:Dynamic /*__CFNetService*/):Dynamic;
  @:native("FSResolveAliasFile") public static function FSResolveAliasFile(theRef:Dynamic /*FSRef*/, resolveAliasChains:Int, targetIsFolder:Int, wasAliased:Int):Int;
  @:native("FSPathMoveObjectAsync") public static function FSPathMoveObjectAsync(fileOp:Dynamic /*__FSFileOperation*/, sourcePath:Dynamic /*Dynamic*/, destDirPath:Dynamic /*Dynamic*/, destName:Dynamic, flags:Int, callback:Dynamic, statusChangeInterval:Float, clientContext:Dynamic /*FSFileOperationClientContext*/):Int;
  @:native("FSFileOperationScheduleWithRunLoop") public static function FSFileOperationScheduleWithRunLoop(fileOp:Dynamic /*__FSFileOperation*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Int;
  @:native("FSFindFolder") public static function FSFindFolder(vRefNum:Int, folderType:Int, createFolder:Int, foundRef:Dynamic /*FSRef*/):Int;
  @:native("SSLSetEnableCertVerify") public static function SSLSetEnableCertVerify(context:Dynamic /*SSLContext*/, enableVerify:Int):Int;
  @:native("TranslationCopyDestinationType") public static function TranslationCopyDestinationType(inTranslation:Dynamic /*OpaqueTranslationRef*/, outDestinationType:Dynamic):Int;
  @:native("CFTreeGetChildAtIndex") public static function CFTreeGetChildAtIndex(tree:Dynamic /*__CFTree*/, idx:Int):Dynamic /*__CFTree*/;
  @:native("CFSocketInvalidate") public static function CFSocketInvalidate(s:Dynamic /*__CFSocket*/):Dynamic /*Void*/;
  @:native("U64Compare") public static function U64Compare(left:Dynamic, right:Dynamic):Int;
  @:native("AESizeOfNthItem") public static function AESizeOfNthItem(theAEDescList:Dynamic /*Dynamic*/, index:Dynamic /*Int*/, typeCode:Int, dataSize:Int):Int;
  @:native("S64Compare") public static function S64Compare(left:Dynamic, right:Dynamic):Int;
  @:native("OpenDefaultComponent") public static function OpenDefaultComponent(componentType:Int, componentSubType:Int):Dynamic /*ComponentInstanceRecord*/;
  @:native("CGPDFStreamGetDictionary") public static function CGPDFStreamGetDictionary(stream:CGPDFStream):CGPDFDictionary;
  @:native("PMPrinterSendCommand") public static function PMPrinterSendCommand(printer:Dynamic /*OpaquePMPrinter*/, commandString:Dynamic, jobTitle:Dynamic, options:Dynamic):Int;
  @:native("CFRunLoopTimerInvalidate") public static function CFRunLoopTimerInvalidate(timer:Dynamic /*__CFRunLoopTimer*/):Dynamic /*Void*/;
  @:native("LocaleOperationGetName") public static function LocaleOperationGetName(opClass:Int, displayLocale:Dynamic /*OpaqueLocaleRef*/, maxNameLen:Int, actualNameLen:Int, displayName:Int):Int;
  @:native("CFStringGetFastestEncoding") public static function CFStringGetFastestEncoding(theString:Dynamic):Int;
  @:native("GetAliasSize") public static function GetAliasSize(alias:Dynamic /*AliasRecord*/):Int;
  @:native("CTGlyphInfoCreateWithGlyphName") public static function CTGlyphInfoCreateWithGlyphName(glyphName:Dynamic, font:Dynamic, baseString:Dynamic):Dynamic;
  @:native("CFBundleIsExecutableLoaded") public static function CFBundleIsExecutableLoaded(bundle:Dynamic /*__CFBundle*/):Int;
  @:native("CallComponentFunctionWithStorage") public static function CallComponentFunctionWithStorage(storage:Int, params:Dynamic /*ComponentParameters*/, func:Dynamic):Int;
  @:native("MPArmTimer") public static function MPArmTimer(timerID:Dynamic /*OpaqueMPTimerID*/, expirationTime:Dynamic /*UnsignedWide*/, options:Int):Int;
  @:native("CGContextDrawLinearGradient") public static function CGContextDrawLinearGradient(c:CGContext, gradient:CGGradient, startPoint:CGPoint, endPoint:CGPoint, options:CGGradientDrawingOptions):Dynamic /*Void*/;
  @:native("CTLineGetTrailingWhitespaceWidth") public static function CTLineGetTrailingWhitespaceWidth(line:Dynamic):Dynamic /*Float*/;
  @:native("CFMessagePortSetDispatchQueue") public static function CFMessagePortSetDispatchQueue(ms:Dynamic /*__CFMessagePort*/, queue:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CGPDFPageRetain") public static function CGPDFPageRetain(page:CGPDFPage):CGPDFPage;
  @:native("FSGetDataForkName") public static function FSGetDataForkName(dataForkName:Dynamic /*HFSUniStr255*/):Int;
  @:native("AEStreamWriteDesc") public static function AEStreamWriteDesc(ref:Dynamic /*OpaqueAEStreamRef*/, newType:Int, data:Dynamic /*Dynamic*/, length:Int):Int;
  @:native("CGPathAddRelativeArc") public static function CGPathAddRelativeArc(path:CGPath, matrix:Dynamic /*Dynamic*/, x:Float, y:Float, radius:Float, startAngle:Float, delta:Float):Dynamic /*Void*/;
  @:native("AXUIElementPerformAction") public static function AXUIElementPerformAction(element:Dynamic, action:Dynamic):Dynamic /*AXError*/;
  @:native("UIAccessibilityIsBoldTextEnabled") public static function UIAccessibilityIsBoldTextEnabled():Dynamic /*Bool*/;
  @:native("FSCopyDADiskForVolume") public static function FSCopyDADiskForVolume(vRefNum:Int, disk:Dynamic /*__DADisk*/):Int;
  @:native("CFBundleGetInfoDictionary") public static function CFBundleGetInfoDictionary(bundle:Dynamic /*__CFBundle*/):Dynamic;
  @:native("NewAVLWalkUPP") public static function NewAVLWalkUPP(userRoutine:Dynamic):Dynamic;
  @:native("CFSetGetTypeID") public static function CFSetGetTypeID():Int;
  @:native("TECCountDirectTextEncodingConversions") public static function TECCountDirectTextEncodingConversions(numberOfEncodings:Int):Int;
  @:native("SecPKCS12Import") public static function SecPKCS12Import(pkcs12_data:Dynamic, options:Dynamic, items:Dynamic):Int;
  @:native("CFWriteStreamSetDispatchQueue") public static function CFWriteStreamSetDispatchQueue(stream:Dynamic /*__CFWriteStream*/, q:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CFLocaleCreateLocaleIdentifierFromComponents") public static function CFLocaleCreateLocaleIdentifierFromComponents(allocator:Dynamic, dictionary:Dynamic):Dynamic;
  @:native("AXUIElementCreateSystemWide") public static function AXUIElementCreateSystemWide():Dynamic;
  @:native("CGImageDestinationFinalize") public static function CGImageDestinationFinalize(idst:CGImageDestination):Dynamic /*Bool*/;
  @:native("SSLSetCertificateAuthorities") public static function SSLSetCertificateAuthorities(context:Dynamic /*SSLContext*/, certificateOrArray:Dynamic, replaceExisting:Int):Int;
  @:native("CTLineCreateWithAttributedString") public static function CTLineCreateWithAttributedString(attrString:Dynamic):Dynamic;
  @:native("UIDeviceOrientationIsPortrait") public static function UIDeviceOrientationIsPortrait(used:Dynamic /*Dynamic*/):Dynamic /*Bool*/;
  @:native("CFBundleGetDevelopmentRegion") public static function CFBundleGetDevelopmentRegion(bundle:Dynamic /*__CFBundle*/):Dynamic;
  @:native("MDCopyLabelKinds") public static function MDCopyLabelKinds():Dynamic;
  @:native("PasteboardCopyItemFlavorData") public static function PasteboardCopyItemFlavorData(inPasteboard:Dynamic /*OpaquePasteboardRef*/, inItem:Void, inFlavorType:Dynamic, outData:Dynamic):Int;
  @:native("ColorSyncProfileSetHeader") public static function ColorSyncProfileSetHeader(prof:Dynamic /*ColorSyncProfile*/, header:Dynamic):Dynamic /*Void*/;
  @:native("DelegateComponentCall") public static function DelegateComponentCall(originalParams:Dynamic /*ComponentParameters*/, ci:Dynamic /*ComponentInstanceRecord*/):Int;
  @:native("AEStreamOpen") public static function AEStreamOpen():Dynamic /*OpaqueAEStreamRef*/;
  @:native("CGBitmapContextGetBytesPerRow") public static function CGBitmapContextGetBytesPerRow(context:CGContext):Dynamic /*Int*/;
  @:native("CFHostCreateWithAddress") public static function CFHostCreateWithAddress(allocator:Dynamic, addr:Dynamic):Dynamic /*__CFHost*/;
  @:native("CGRectStandardize") public static function CGRectStandardize(rect:CGRect):CGRect;
  @:native("CVPixelBufferGetHeightOfPlane") public static function CVPixelBufferGetHeightOfPlane(pixelBuffer:Dynamic /*__CVBuffer*/, planeIndex:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("CTRunGetGlyphs") public static function CTRunGetGlyphs(run:Dynamic, range:Dynamic /*CFRange*/, buffer:Int):Dynamic /*Void*/;
  @:native("CFPreferencesAppValueIsForced") public static function CFPreferencesAppValueIsForced(key:Dynamic, applicationID:Dynamic):Int;
  @:native("U64BitwiseEor") public static function U64BitwiseEor(left:Dynamic, right:Dynamic):Dynamic;
  @:native("SKDocumentCreateWithURL") public static function SKDocumentCreateWithURL(inURL:Dynamic):Dynamic;
  @:native("AESizeOfParam") public static function AESizeOfParam(theAppleEvent:Dynamic /*Dynamic*/, theAEKeyword:Int, typeCode:Int, dataSize:Int):Int;
  @:native("CFArrayContainsValue") public static function CFArrayContainsValue(theArray:Dynamic, range:Dynamic /*CFRange*/, value:Dynamic /*Dynamic*/):Int;
  @:native("S64BitwiseEor") public static function S64BitwiseEor(left:Dynamic, right:Dynamic):Dynamic;
  @:native("CGImageSourceCopyTypeIdentifiers") public static function CGImageSourceCopyTypeIdentifiers():Dynamic;
  @:native("AXUIElementCopyElementAtPosition") public static function AXUIElementCopyElementAtPosition(application:Dynamic, x:Dynamic /*Float*/, y:Dynamic /*Float*/, element:Dynamic):Dynamic /*AXError*/;
  @:native("FSMoveObjectSync") public static function FSMoveObjectSync(source:Dynamic /*Dynamic*/, destDir:Dynamic /*Dynamic*/, destName:Dynamic, target:Dynamic /*FSRef*/, options:Int):Int;
  @:native("PBWriteForkSync") public static function PBWriteForkSync(paramBlock:Dynamic /*FSForkIOParam*/):Int;
  @:native("CFConvertFloatHostToSwapped") public static function CFConvertFloatHostToSwapped(used:Dynamic /*Dynamic*/):Dynamic /*CFSwappedFloat32*/;
  @:native("FSDeleteObject") public static function FSDeleteObject(ref:Dynamic /*Dynamic*/):Int;
  @:native("DisposeCollectionExceptionUPP") public static function DisposeCollectionExceptionUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CFStringConvertWindowsCodepageToEncoding") public static function CFStringConvertWindowsCodepageToEncoding(codepage:Int):Int;
  @:native("FixDiv") public static function FixDiv(x:Int, y:Int):Int;
  @:native("CGPathAddRect") public static function CGPathAddRect(path:CGPath, m:Dynamic /*Dynamic*/, rect:CGRect):Dynamic /*Void*/;
  @:native("ICSetProfileName") public static function ICSetProfileName(inst:Dynamic /*OpaqueICInstance*/, thisID:Int, name:Dynamic):Int;
  @:native("CGAffineTransformTranslate") public static function CGAffineTransformTranslate(t:CGAffineTransform, tx:Float, ty:Float):CGAffineTransform;
  @:native("CFCalendarGetIdentifier") public static function CFCalendarGetIdentifier(calendar:Dynamic /*__CFCalendar*/):Dynamic;
  @:native("CGPDFDocumentGetTypeID") public static function CGPDFDocumentGetTypeID():Int;
  @:native("PBRenameUnicodeAsync") public static function PBRenameUnicodeAsync(paramBlock:Dynamic /*FSRefParam*/):Dynamic /*Void*/;
  @:native("LocaleCountNames") public static function LocaleCountNames(locale:Dynamic /*OpaqueLocaleRef*/, opVariant:Int, nameMask:Int, nameCount:Int):Int;
  @:native("CSIdentityGetUUID") public static function CSIdentityGetUUID(identity:Dynamic /*__CSIdentity*/):Dynamic;
  @:native("AddFolderDescriptor") public static function AddFolderDescriptor(foldType:Int, flags:Int, foldClass:Int, foldLocation:Int, badgeSignature:Int, badgeType:Int, name:Dynamic, replaceFlag:Int):Int;
  @:native("NSStringFromSelector") public static function NSStringFromSelector(aSelector:Dynamic /*String*/):NSString;
  @:native("CGContextSelectFont") public static function CGContextSelectFont(c:CGContext, name:Dynamic /*Dynamic*/, size:Float, textEncoding:CGTextEncoding):Dynamic /*Void*/;
  @:native("AEStreamOpenList") public static function AEStreamOpenList(ref:Dynamic /*OpaqueAEStreamRef*/):Int;
  @:native("CountVoices") public static function CountVoices(numVoices:Int):Int;
  @:native("AEManagerInfo") public static function AEManagerInfo(keyWord:Int, result:Dynamic /*Int*/):Int;
  @:native("CTFontGetSlantAngle") public static function CTFontGetSlantAngle(font:Dynamic):Float;
  @:native("CFURLSetResourcePropertyForKey") public static function CFURLSetResourcePropertyForKey(url:Dynamic, key:Dynamic, propertyValue:Dynamic, error:Dynamic /*__CFError*/):Int;
  @:native("LSGetApplicationForURL") public static function LSGetApplicationForURL(inURL:Dynamic, inRoleMask:Dynamic /*LSRolesMask*/, outAppRef:Dynamic /*FSRef*/, outAppURL:Dynamic):Int;
  @:native("NSOpenStepRootDirectory") public static function NSOpenStepRootDirectory():NSString;
  @:native("CGColorSpaceCreateDeviceCMYK") public static function CGColorSpaceCreateDeviceCMYK():CGColorSpace;
  @:native("IOSurfaceGetElementWidth") public static function IOSurfaceGetElementWidth(buffer:Dynamic /*__IOSurface*/):Dynamic /*Int*/;
  @:native("NSRoundUpToMultipleOfPageSize") public static function NSRoundUpToMultipleOfPageSize(bytes:Int):Int;
  @:native("MDItemsCopyAttributes") public static function MDItemsCopyAttributes(items:Dynamic, names:Dynamic):Dynamic;
  @:native("HIShapeGetBounds") public static function HIShapeGetBounds(inShape:Dynamic, outRect:CGRect):CGRect;
  @:native("CFNotificationCenterRemoveEveryObserver") public static function CFNotificationCenterRemoveEveryObserver(center:Dynamic /*__CFNotificationCenter*/, observer:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("TECCountAvailableTextEncodings") public static function TECCountAvailableTextEncodings(numberEncodings:Int):Int;
  @:native("CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes") public static function CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes(allocator:Dynamic, lcode:Int, rcode:Int):Dynamic;
  @:native("CGContextSetStrokeColor") public static function CGContextSetStrokeColor(c:CGContext, components:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CVPixelBufferRelease") public static function CVPixelBufferRelease(texture:Dynamic /*__CVBuffer*/):Dynamic /*Void*/;
  @:native("CFBundleCopyResourceURL") public static function CFBundleCopyResourceURL(bundle:Dynamic /*__CFBundle*/, resourceName:Dynamic, resourceType:Dynamic, subDirName:Dynamic):Dynamic;
  @:native("KCFindInternetPasswordWithPath") public static function KCFindInternetPasswordWithPath(serverName:Dynamic, securityDomain:Dynamic, accountName:Dynamic, path:Dynamic, port:Int, protocol:Int, authType:Int, maxLength:Int, passwordData:Dynamic /*Void*/, actualLength:Int, item:Dynamic /*KCItemRef*/):Int;
  @:native("PMSessionGetDestinationType") public static function PMSessionGetDestinationType(printSession:Dynamic /*OpaquePMPrintSession*/, printSettings:Dynamic /*OpaquePMPrintSettings*/, destTypeP:Int):Int;
  @:native("CFBundleCopyResourceURLForLocalization") public static function CFBundleCopyResourceURLForLocalization(bundle:Dynamic /*__CFBundle*/, resourceName:Dynamic, resourceType:Dynamic, subDirName:Dynamic, localizationName:Dynamic):Dynamic;
  @:native("CountTaggedCollectionItems") public static function CountTaggedCollectionItems(c:Dynamic /*OpaqueCollection*/, tag:Int):Int;
  @:native("CGPathApply") public static function CGPathApply(path:Dynamic, info:Dynamic /*Void*/, func:Dynamic):Dynamic /*Void*/;
  @:native("KillProcess") public static function KillProcess(inProcess:Dynamic /*Dynamic*/):Int;
  @:native("CFReadStreamUnscheduleFromRunLoop") public static function CFReadStreamUnscheduleFromRunLoop(stream:Dynamic /*__CFReadStream*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("UTTypeIsDeclared") public static function UTTypeIsDeclared(inUTI:Dynamic):Int;
  @:native("CFSocketCreateWithNative") public static function CFSocketCreateWithNative(allocator:Dynamic, sock:Int, callBackTypes:Int, callout:Dynamic, context:Dynamic /*Dynamic*/):Dynamic /*__CFSocket*/;
  @:native("CVMetalTextureIsFlipped") public static function CVMetalTextureIsFlipped(image:Dynamic /*__CVBuffer*/):Int;
  @:native("FSCopyAliasInfo") public static function FSCopyAliasInfo(inAlias:Dynamic /*AliasRecord*/, targetName:Dynamic /*HFSUniStr255*/, volumeName:Dynamic /*HFSUniStr255*/, pathString:Dynamic, whichInfo:Int, info:Dynamic /*FSAliasInfo*/):Int;
  @:native("CFRunLoopTimerDoesRepeat") public static function CFRunLoopTimerDoesRepeat(timer:Dynamic /*__CFRunLoopTimer*/):Int;
  @:native("PMPaperCreateLocalizedName") public static function PMPaperCreateLocalizedName(paper:Dynamic /*OpaquePMPaper*/, printer:Dynamic /*OpaquePMPrinter*/, paperName:Dynamic):Int;
  @:native("CFSocketSendData") public static function CFSocketSendData(s:Dynamic /*__CFSocket*/, address:Dynamic, data:Dynamic, timeout:Float):Dynamic /*CFSocketError*/;
  @:native("PBGetForkPositionAsync") public static function PBGetForkPositionAsync(paramBlock:Dynamic /*FSForkIOParam*/):Dynamic /*Void*/;
  @:native("CFBundleGetFunctionPointersForNames") public static function CFBundleGetFunctionPointersForNames(bundle:Dynamic /*__CFBundle*/, functionNames:Dynamic, ftbl:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CFHTTPMessageCopyHeaderFieldValue") public static function CFHTTPMessageCopyHeaderFieldValue(message:Dynamic /*__CFHTTPMessage*/, headerField:Dynamic):Dynamic;
  @:native("GetComponentPublicResourceList") public static function GetComponentPublicResourceList(resourceType:Int, resourceID:Int, flags:Int, cd:Dynamic /*ComponentDescription*/, missingProc:Dynamic, refCon:Dynamic /*Void*/, atomContainerPtr:Dynamic /*Void*/):Int;
  @:native("AEGetObjectAccessor") public static function AEGetObjectAccessor(desiredClass:Int, containerType:Int, accessor:Dynamic, accessorRefcon:Void, isSysHandler:Int):Int;
  @:native("CFURLGetBytes") public static function CFURLGetBytes(url:Dynamic, buffer:Int, bufferLength:Int):Int;
  @:native("PMGetDuplex") public static function PMGetDuplex(printSettings:Dynamic /*OpaquePMPrintSettings*/, duplexSetting:Int):Int;
  @:native("PauseSpeechAt") public static function PauseSpeechAt(chan:Dynamic /*SpeechChannelRecord*/, whereToPause:Int):Int;
  @:native("CFErrorGetCode") public static function CFErrorGetCode(err:Dynamic /*__CFError*/):Int;
  @:native("CGRectMake") public static function CGRectMake(x:Float, y:Float, width:Float, height:Float):CGRect;
  @:native("FSEventStreamInvalidate") public static function FSEventStreamInvalidate(streamRef:Dynamic /*__FSEventStream*/):Dynamic /*Void*/;
  @:native("ColorSyncUnregisterDevice") public static function ColorSyncUnregisterDevice(deviceClass:Dynamic, deviceID:Dynamic):Dynamic /*Bool*/;
  @:native("CloseComponentResFile") public static function CloseComponentResFile(refnum:Int):Int;
  @:native("CGImageDestinationAddImageFromSource") public static function CGImageDestinationAddImageFromSource(idst:CGImageDestination, isrc:CGImageSource, index:Dynamic /*Int*/, properties:Dynamic):Dynamic /*Void*/;
  @:native("SetThreadSwitcher") public static function SetThreadSwitcher(thread:Int, threadSwitcher:Dynamic, switchProcParam:Dynamic /*Void*/, inOrOut:Int):Int;
  @:native("ColorSyncTransformConvert") public static function ColorSyncTransformConvert(transform:Dynamic /*ColorSyncTransform*/, width:Dynamic /*Int*/, height:Dynamic /*Int*/, dst:Dynamic /*Void*/, dstDepth:Dynamic /*ColorSyncDataDepth*/, dstLayout:UInt, dstBytesPerRow:Dynamic /*Int*/, src:Dynamic /*Dynamic*/, srcDepth:Dynamic /*ColorSyncDataDepth*/, srcLayout:UInt, srcBytesPerRow:Dynamic /*Int*/, options:Dynamic):Dynamic /*Bool*/;
  @:native("CATransform3DMakeAffineTransform") public static function CATransform3DMakeAffineTransform(m:CGAffineTransform):CATransform3D;
  @:native("CFBinaryHeapGetTypeID") public static function CFBinaryHeapGetTypeID():Int;
  @:native("InvokeSpeechPhonemeUPP") public static function InvokeSpeechPhonemeUPP(chan:Dynamic /*SpeechChannelRecord*/, refCon:Void, phonemeOpcode:Int, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CFPropertyListWrite") public static function CFPropertyListWrite(propertyList:Dynamic, stream:Dynamic /*__CFWriteStream*/, format:Dynamic /*CFPropertyListFormat*/, options:Int, error:Dynamic /*__CFError*/):Int;
  @:native("SKDocumentGetParent") public static function SKDocumentGetParent(inDocument:Dynamic):Dynamic;
  @:native("PMSessionCopyOutputFormatList") public static function PMSessionCopyOutputFormatList(printSession:Dynamic /*OpaquePMPrintSession*/, destType:Int, documentFormatP:Dynamic):Int;
  @:native("CFAttributedStringCreateWithSubstring") public static function CFAttributedStringCreateWithSubstring(alloc:Dynamic, aStr:Dynamic, range:Dynamic /*CFRange*/):Dynamic;
  @:native("AEGetNthDesc") public static function AEGetNthDesc(theAEDescList:Dynamic /*Dynamic*/, index:Dynamic /*Int*/, desiredType:Int, theAEKeyword:Int, result:Dynamic /*AEDesc*/):Int;
  @:native("CFHostScheduleWithRunLoop") public static function CFHostScheduleWithRunLoop(theHost:Dynamic /*__CFHost*/, runLoop:Dynamic /*__CFRunLoop*/, runLoopMode:Dynamic):Dynamic /*Void*/;
  @:native("UIInterfaceOrientationIsLandscape") public static function UIInterfaceOrientationIsLandscape(used:Dynamic /*Dynamic*/):Dynamic /*Bool*/;
  @:native("SKIndexGetDocumentCount") public static function SKIndexGetDocumentCount(inIndex:Dynamic /*__SKIndex*/):Int;
  @:native("CallComponentClose") public static function CallComponentClose(ci:Dynamic /*ComponentInstanceRecord*/, self:Dynamic /*ComponentInstanceRecord*/):Int;
  @:native("LocaleGetName") public static function LocaleGetName(locale:Dynamic /*OpaqueLocaleRef*/, opVariant:Int, nameMask:Int, displayLocale:Dynamic /*OpaqueLocaleRef*/, maxNameLen:Int, actualNameLen:Int, displayName:Int):Int;
  @:native("CSDiskSpaceGetRecoveryEstimate") public static function CSDiskSpaceGetRecoveryEstimate(volumeURL:Dynamic):Dynamic;
  @:native("PMSetLastPage") public static function PMSetLastPage(printSettings:Dynamic /*OpaquePMPrintSettings*/, last:Int, lock:Int):Int;
  @:native("CFBinaryHeapGetValues") public static function CFBinaryHeapGetValues(heap:Dynamic /*__CFBinaryHeap*/, values:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CGContextMoveToPoint") public static function CGContextMoveToPoint(c:CGContext, x:Float, y:Float):Dynamic /*Void*/;
  @:native("AXIsProcessTrusted") public static function AXIsProcessTrusted():Int;
  @:native("CGContextClipToMask") public static function CGContextClipToMask(c:CGContext, rect:CGRect, mask:CGImage):Dynamic /*Void*/;
  @:native("CFDateFormatterSetProperty") public static function CFDateFormatterSetProperty(formatter:Dynamic /*__CFDateFormatter*/, key:Dynamic, value:Dynamic):Dynamic /*Void*/;
  @:native("CallComponentDispatch") public static function CallComponentDispatch(cp:Dynamic /*ComponentParameters*/):Int;
  @:native("CFWriteStreamGetStatus") public static function CFWriteStreamGetStatus(stream:Dynamic /*__CFWriteStream*/):Dynamic /*CFStreamStatus*/;
  @:native("CTFontCreateForString") public static function CTFontCreateForString(currentFont:Dynamic, string:Dynamic, range:Dynamic /*CFRange*/):Dynamic;
  @:native("WideDivide") public static function WideDivide(dividend:Dynamic /*Dynamic*/, divisor:Int, remainder:Int):Int;
  @:native("NewThreadSchedulerUPP") public static function NewThreadSchedulerUPP(userRoutine:Dynamic):Dynamic;
  @:native("SKIndexRenameDocument") public static function SKIndexRenameDocument(inIndex:Dynamic /*__SKIndex*/, inDocument:Dynamic, inNewName:Dynamic):Int;
  @:native("SetIndexedCollectionItemInfo") public static function SetIndexedCollectionItemInfo(c:Dynamic /*OpaqueCollection*/, itemIndex:Int, whichAttributes:Int, newAttributes:Int):Int;
  @:native("CGContextClearRect") public static function CGContextClearRect(c:CGContext, rect:CGRect):Dynamic /*Void*/;
  @:native("CGPathAddLines") public static function CGPathAddLines(path:CGPath, m:Dynamic /*Dynamic*/, points:Dynamic /*Dynamic*/, count:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("CFNumberIsFloatType") public static function CFNumberIsFloatType(number:Dynamic):Int;
  @:native("HUnlock") public static function HUnlock(h:Int):Dynamic /*Void*/;
  @:native("CGImageMaskCreate") public static function CGImageMaskCreate(width:Dynamic /*Int*/, height:Dynamic /*Int*/, bitsPerComponent:Dynamic /*Int*/, bitsPerPixel:Dynamic /*Int*/, bytesPerRow:Dynamic /*Int*/, provider:CGDataProvider, decode:Dynamic /*Dynamic*/, shouldInterpolate:Dynamic /*Bool*/):CGImage;
  @:native("CFNotificationCenterAddObserver") public static function CFNotificationCenterAddObserver(center:Dynamic /*__CFNotificationCenter*/, observer:Dynamic /*Dynamic*/, callBack:Dynamic, name:Dynamic, object:Dynamic /*Dynamic*/, suspensionBehavior:Dynamic /*CFNotificationSuspensionBehavior*/):Dynamic /*Void*/;
  @:native("SKSummaryCopyParagraphAtIndex") public static function SKSummaryCopyParagraphAtIndex(summary:Dynamic /*__SKSummary*/, i:Int):Dynamic;
  @:native("CFStringConvertEncodingToNSStringEncoding") public static function CFStringConvertEncodingToNSStringEncoding(encoding:Int):Dynamic /*Dynamic*/;
  @:native("CFMachPortGetTypeID") public static function CFMachPortGetTypeID():Int;
  @:native("PMPrinterIsDefault") public static function PMPrinterIsDefault(printer:Dynamic /*OpaquePMPrinter*/):Int;
  @:native("GetAliasUserTypeFromPtr") public static function GetAliasUserTypeFromPtr(alias:Dynamic /*Dynamic*/):Int;
  @:native("NewDebugOption") public static function NewDebugOption(componentSignature:Int, optionSelectorNum:Int, optionName:Dynamic):Int;
  @:native("CGImageRetain") public static function CGImageRetain(image:CGImage):CGImage;
  @:native("CFTimeZoneGetDaylightSavingTimeOffset") public static function CFTimeZoneGetDaylightSavingTimeOffset(tz:Dynamic, at:Float):Float;
  @:native("GetIndexedCollectionItemInfo") public static function GetIndexedCollectionItemInfo(c:Dynamic /*OpaqueCollection*/, itemIndex:Int, tag:Int, id:Int, itemSize:Int, attributes:Int):Int;
  @:native("DisposeDeferredTaskUPP") public static function DisposeDeferredTaskUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CTFontManagerCopyAvailablePostScriptNames") public static function CTFontManagerCopyAvailablePostScriptNames():Dynamic;
  @:native("CTFontCopyAvailableTables") public static function CTFontCopyAvailableTables(font:Dynamic, options:Dynamic /*CTFontTableOptions*/):Dynamic;
  @:native("CFDateCompare") public static function CFDateCompare(theDate:Dynamic, otherDate:Dynamic, context:Dynamic /*Void*/):Dynamic /*CFComparisonResult*/;
  @:native("CallComponentTarget") public static function CallComponentTarget(ci:Dynamic /*ComponentInstanceRecord*/, target:Dynamic /*ComponentInstanceRecord*/):Int;
  @:native("UCCompareText") public static function UCCompareText(collatorRef:Dynamic /*OpaqueCollatorRef*/, text1Ptr:Dynamic /*Dynamic*/, text1Length:Int, text2Ptr:Dynamic /*Dynamic*/, text2Length:Int, equivalent:Int, order:Int):Int;
  @:native("CGPathCreateMutableCopy") public static function CGPathCreateMutableCopy(path:Dynamic):CGPath;
  @:native("IOSurfaceGetPixelFormat") public static function IOSurfaceGetPixelFormat(buffer:Dynamic /*__IOSurface*/):Int;
  @:native("UIGraphicsBeginImageContextWithOptions") public static function UIGraphicsBeginImageContextWithOptions(size:CGSize, opaque:Dynamic /*Bool*/, scale:Float):Dynamic /*Void*/;
  @:native("CFCalendarGetOrdinalityOfUnit") public static function CFCalendarGetOrdinalityOfUnit(calendar:Dynamic /*__CFCalendar*/, smallerUnit:Dynamic /*CFCalendarUnit*/, biggerUnit:Dynamic /*CFCalendarUnit*/, at:Float):Int;
  @:native("CFSocketCreateConnectedToSocketSignature") public static function CFSocketCreateConnectedToSocketSignature(allocator:Dynamic, signature:Dynamic /*Dynamic*/, callBackTypes:Int, callout:Dynamic, context:Dynamic /*Dynamic*/, timeout:Float):Dynamic /*__CFSocket*/;
  @:native("PBFSCopyFileSync") public static function PBFSCopyFileSync(paramBlock:Dynamic /*FSRefParam*/):Int;
  @:native("CGAffineTransformFromString") public static function CGAffineTransformFromString(string:NSString):CGAffineTransform;
  @:native("UCConvertUTCDateTimeToCFAbsoluteTime") public static function UCConvertUTCDateTimeToCFAbsoluteTime(iUTCDate:Dynamic /*Dynamic*/, oCFTime:Float):Int;
  @:native("CTTextTabGetLocation") public static function CTTextTabGetLocation(tab:Dynamic):Dynamic /*Float*/;
  @:native("CFURLCopyStrictPath") public static function CFURLCopyStrictPath(anURL:Dynamic, isAbsolute:Int):Dynamic;
  @:native("MPCreateQueue") public static function MPCreateQueue(queue:Dynamic /*OpaqueMPQueueID*/):Int;
  @:native("UnflattenCollection") public static function UnflattenCollection(c:Dynamic /*OpaqueCollection*/, flattenProc:Dynamic, refCon:Dynamic /*Void*/):Int;
  @:native("CFArrayApplyFunction") public static function CFArrayApplyFunction(theArray:Dynamic, range:Dynamic /*CFRange*/, applier:Dynamic, context:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("NewFNSubscriptionUPP") public static function NewFNSubscriptionUPP(userRoutine:Dynamic):Dynamic;
  @:native("KCCopyItem") public static function KCCopyItem(item:Dynamic /*KCItemRef*/, destKeychain:Dynamic /*KCRef*/, copy:Dynamic /*KCItemRef*/):Int;
  @:native("CGContextSetFillColorSpace") public static function CGContextSetFillColorSpace(c:CGContext, space:CGColorSpace):Dynamic /*Void*/;
  @:native("GetResource") public static function GetResource(theType:Int, theID:Int):Int;
  @:native("U64Max") public static function U64Max():Dynamic;
  @:native("CFNetServiceGetDomain") public static function CFNetServiceGetDomain(theService:Dynamic /*__CFNetService*/):Dynamic;
  @:native("SysBreak") public static function SysBreak():Dynamic /*Void*/;
  @:native("CFURLEnumeratorGetDescendentLevel") public static function CFURLEnumeratorGetDescendentLevel(enumerator:Dynamic):Int;
  @:native("S64Max") public static function S64Max():Dynamic;
  @:native("ICMapTypeCreator") public static function ICMapTypeCreator(inst:Dynamic /*OpaqueICInstance*/, fType:Int, fCreator:Int, filename:Dynamic, entry:Dynamic /*ICMapEntry*/):Int;
  @:native("SKDocumentCopyURL") public static function SKDocumentCopyURL(inDocument:Dynamic):Dynamic;
  @:native("LSSharedFileListCreate") public static function LSSharedFileListCreate(inAllocator:Dynamic, inListType:Dynamic, listOptions:Dynamic):Dynamic /*OpaqueLSSharedFileListRef*/;
  @:native("CTFontGetOpticalBoundsForGlyphs") public static function CTFontGetOpticalBoundsForGlyphs(font:Dynamic, glyphs:Dynamic /*Dynamic*/, boundingRects:CGRect, count:Int, options:Int):CGRect;
  @:native("NewAVLCompareItemsUPP") public static function NewAVLCompareItemsUPP(userRoutine:Dynamic):Dynamic;
  @:native("CTTypesetterCreateLine") public static function CTTypesetterCreateLine(typesetter:Dynamic, stringRange:Dynamic /*CFRange*/):Dynamic;
  @:native("GetThreadCurrentTaskRef") public static function GetThreadCurrentTaskRef(threadTRef:Void):Int;
  @:native("IsIconRefComposite") public static function IsIconRefComposite(compositeIconRef:Dynamic /*OpaqueIconRef*/, backgroundIconRef:Dynamic /*OpaqueIconRef*/, foregroundIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("UIRectFrameUsingBlendMode") public static function UIRectFrameUsingBlendMode(rect:CGRect, blendMode:CGBlendMode):Dynamic /*Void*/;
  @:native("CTFontGetUnitsPerEm") public static function CTFontGetUnitsPerEm(font:Dynamic):Dynamic /*Dynamic*/;
  @:native("CFLocaleGetLanguageCharacterDirection") public static function CFLocaleGetLanguageCharacterDirection(isoLangCode:Dynamic):Dynamic /*CFLocaleLanguageDirection*/;
  @:native("ColorSyncProfileCreateDisplayTransferTablesFromVCGT") public static function ColorSyncProfileCreateDisplayTransferTablesFromVCGT(profile:Dynamic, nSamplesPerChannel:Dynamic /*Int*/):Dynamic;
  @:native("IOSurfaceGetWidth") public static function IOSurfaceGetWidth(buffer:Dynamic /*__IOSurface*/):Dynamic /*Int*/;
  @:native("PMPrinterCopyDescriptionURL") public static function PMPrinterCopyDescriptionURL(printer:Dynamic /*OpaquePMPrinter*/, descriptionType:Dynamic, fileURL:Dynamic):Int;
  @:native("FSGetForkSize") public static function FSGetForkSize(forkRefNum:Int, forkSize:Dynamic):Int;
  @:native("FSCreateVolumeOperation") public static function FSCreateVolumeOperation(volumeOp:Dynamic /*OpaqueFSVolumeOperation*/):Int;
  @:native("ResetUnicodeToTextInfo") public static function ResetUnicodeToTextInfo(ioUnicodeToTextInfo:Dynamic /*OpaqueUnicodeToTextInfo*/):Int;
  @:native("CFCharacterSetCreateWithCharactersInString") public static function CFCharacterSetCreateWithCharactersInString(alloc:Dynamic, theString:Dynamic):Dynamic;
  @:native("CFBundleGetBundleWithIdentifier") public static function CFBundleGetBundleWithIdentifier(bundleID:Dynamic):Dynamic /*__CFBundle*/;
  @:native("CFAttributedStringCreateMutable") public static function CFAttributedStringCreateMutable(alloc:Dynamic, maxLength:Int):Dynamic /*__CFAttributedString*/;
  @:native("FSFileSecuritySetAccessControlList") public static function FSFileSecuritySetAccessControlList(fileSec:Dynamic /*__FSFileSecurity*/, accessControlList:Dynamic /*Dynamic*/):Int;
  @:native("CVPixelBufferGetHeight") public static function CVPixelBufferGetHeight(pixelBuffer:Dynamic /*__CVBuffer*/):Dynamic /*Int*/;
  @:native("MPRegisterDebugger") public static function MPRegisterDebugger(queue:Dynamic /*OpaqueMPQueueID*/, level:Int):Int;
  @:native("HIShapeIsEmpty") public static function HIShapeIsEmpty(inShape:Dynamic):Int;
  @:native("LSOpenCFURLRef") public static function LSOpenCFURLRef(inURL:Dynamic, outLaunchedURL:Dynamic):Int;
  @:native("CFStringGetParagraphBounds") public static function CFStringGetParagraphBounds(string:Dynamic, range:Dynamic /*CFRange*/, parBeginIndex:Int, parEndIndex:Int, contentsEndIndex:Int):Dynamic /*Void*/;
  @:native("CFBridgingRelease") public static function CFBridgingRelease(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("NewFMFontFamilyCallbackFilterUPP") public static function NewFMFontFamilyCallbackFilterUPP(userRoutine:Dynamic):Dynamic;
  @:native("CTFontCreateCopyWithSymbolicTraits") public static function CTFontCreateCopyWithSymbolicTraits(font:Dynamic, size:Float, matrix:Dynamic /*Dynamic*/, symTraitValue:Dynamic /*CTFontSymbolicTraits*/, symTraitMask:Dynamic /*CTFontSymbolicTraits*/):Dynamic;
  @:native("CFTimeZoneGetName") public static function CFTimeZoneGetName(tz:Dynamic):Dynamic;
  @:native("PBCompareFSRefsAsync") public static function PBCompareFSRefsAsync(paramBlock:Dynamic /*FSRefParam*/):Dynamic /*Void*/;
  @:native("FSMoveObjectAsync") public static function FSMoveObjectAsync(fileOp:Dynamic /*__FSFileOperation*/, source:Dynamic /*Dynamic*/, destDir:Dynamic /*Dynamic*/, destName:Dynamic, flags:Int, callback:Dynamic, statusChangeInterval:Float, clientContext:Dynamic /*FSFileOperationClientContext*/):Int;
  @:native("CGContextSetLineWidth") public static function CGContextSetLineWidth(c:CGContext, width:Float):Dynamic /*Void*/;
  @:native("PasteboardGetItemCount") public static function PasteboardGetItemCount(inPasteboard:Dynamic /*OpaquePasteboardRef*/, outItemCount:Int):Int;
  @:native("WSProtocolHandlerCopyReplyDocument") public static function WSProtocolHandlerCopyReplyDocument(ref:Dynamic /*OpaqueWSProtocolHandlerRef*/, methodContext:Dynamic, resultValue:Dynamic):Dynamic;
  @:native("PMPrintSettingsGetJobName") public static function PMPrintSettingsGetJobName(printSettings:Dynamic /*OpaquePMPrintSettings*/, name:Dynamic):Int;
  @:native("CFSetRemoveAllValues") public static function CFSetRemoveAllValues(theSet:Dynamic /*__CFSet*/):Dynamic /*Void*/;
  @:native("CGColorSpaceCreateWithName") public static function CGColorSpaceCreateWithName(name:Dynamic):CGColorSpace;
  @:native("MinimumProcessorSpeed") public static function MinimumProcessorSpeed():Dynamic /*Int*/;
  @:native("CFWriteStreamCreateWithBuffer") public static function CFWriteStreamCreateWithBuffer(alloc:Dynamic, buffer:Int, bufferCapacity:Int):Dynamic /*__CFWriteStream*/;
  @:native("CFSetSetValue") public static function CFSetSetValue(theSet:Dynamic /*__CFSet*/, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("PtrToXHand") public static function PtrToXHand(srcPtr:Dynamic /*Dynamic*/, dstHndl:Int, size:Dynamic /*Int*/):Int;
  @:native("MPDeallocateTaskStorageIndex") public static function MPDeallocateTaskStorageIndex(taskIndex:Int):Int;
  @:native("DisposeIconGetterUPP") public static function DisposeIconGetterUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("SecItemUpdate") public static function SecItemUpdate(query:Dynamic, attributesToUpdate:Dynamic):Int;
  @:native("AEStreamOpenDesc") public static function AEStreamOpenDesc(ref:Dynamic /*OpaqueAEStreamRef*/, newType:Int):Int;
  @:native("NSProtocolFromString") public static function NSProtocolFromString(namestr:NSString):Dynamic /*Protocol*/;
  @:native("GetNextFOND") public static function GetNextFOND(fondHandle:Int):Int;
  @:native("BitXorAtomic8") public static function BitXorAtomic8(mask:Int, address:Int):Int;
  @:native("CATransform3DIsIdentity") public static function CATransform3DIsIdentity(t:CATransform3D):Dynamic /*Bool*/;
  @:native("AEGetEventHandler") public static function AEGetEventHandler(theAEEventClass:Int, theAEEventID:Int, handler:Dynamic, handlerRefcon:Void, isSysHandler:Int):Int;
  @:native("NSZoneCalloc") public static function NSZoneCalloc(zone:Dynamic /*_NSZone*/, numElems:Int, byteSize:Int):Dynamic /*Void*/;
  @:native("UpdateIconRef") public static function UpdateIconRef(theIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("CGRectOffset") public static function CGRectOffset(rect:CGRect, dx:Float, dy:Float):CGRect;
  @:native("CFStringConvertNSStringEncodingToEncoding") public static function CFStringConvertNSStringEncodingToEncoding(encoding:Dynamic /*Int*/):Int;
  @:native("SKSearchCancel") public static function SKSearchCancel(inSearch:Dynamic /*__SKSearch*/):Dynamic /*Void*/;
  @:native("CGContextShowText") public static function CGContextShowText(c:CGContext, string:Dynamic /*Dynamic*/, length:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("CTTypesetterGetTypeID") public static function CTTypesetterGetTypeID():Int;
  @:native("PBSetVolumeInfoSync") public static function PBSetVolumeInfoSync(paramBlock:Dynamic /*FSVolumeInfoParam*/):Int;
  @:native("CFRunLoopTimerGetInterval") public static function CFRunLoopTimerGetInterval(timer:Dynamic /*__CFRunLoopTimer*/):Float;
  @:native("PMPrinterGetLocation") public static function PMPrinterGetLocation(printer:Dynamic /*OpaquePMPrinter*/):Dynamic;
  @:native("AECallObjectAccessor") public static function AECallObjectAccessor(desiredClass:Int, containerToken:Dynamic /*Dynamic*/, containerClass:Int, keyForm:Int, keyData:Dynamic /*Dynamic*/, token:Dynamic /*AEDesc*/):Int;
  @:native("WideCompare") public static function WideCompare(target:Dynamic /*Dynamic*/, source:Dynamic /*Dynamic*/):Dynamic /*Int*/;
  @:native("NSSwapLong") public static function NSSwapLong(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("UIEdgeInsetsEqualToEdgeInsets") public static function UIEdgeInsetsEqualToEdgeInsets(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Dynamic /*Bool*/;
  @:native("CFLocaleCopyISOCountryCodes") public static function CFLocaleCopyISOCountryCodes():Dynamic;
  @:native("DisposeSelectorFunctionUPP") public static function DisposeSelectorFunctionUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CFSocketCreateRunLoopSource") public static function CFSocketCreateRunLoopSource(allocator:Dynamic, s:Dynamic /*__CFSocket*/, order:Int):Dynamic /*__CFRunLoopSource*/;
  @:native("NSDecimalPower") public static function NSDecimalPower(result:Dynamic /*NSDecimal*/, number:Dynamic /*Dynamic*/, power:Int, roundingMode:NSRoundingMode):NSCalculationError;
  @:native("SecPolicyCreateWithOID") public static function SecPolicyCreateWithOID(policyOID:Dynamic):Dynamic /*__SecPolicy*/;
  @:native("CFHTTPAuthenticationCopyMethod") public static function CFHTTPAuthenticationCopyMethod(auth:Dynamic /*_CFHTTPAuthentication*/):Dynamic;
  @:native("FSFileOperationCreate") public static function FSFileOperationCreate(alloc:Dynamic):Dynamic /*__FSFileOperation*/;
  @:native("DisposeDebugComponent") public static function DisposeDebugComponent(componentSignature:Int):Int;
  @:native("CGContextGetClipBoundingBox") public static function CGContextGetClipBoundingBox(c:CGContext):CGRect;
  @:native("CFBundleCopySharedFrameworksURL") public static function CFBundleCopySharedFrameworksURL(bundle:Dynamic /*__CFBundle*/):Dynamic;
  @:native("CFStringCreateWithCharactersNoCopy") public static function CFStringCreateWithCharactersNoCopy(alloc:Dynamic, chars:Dynamic /*Dynamic*/, numChars:Int, contentsDeallocator:Dynamic):Dynamic;
  @:native("NewGetMissingComponentResourceUPP") public static function NewGetMissingComponentResourceUPP(userRoutine:Dynamic):Dynamic;
  @:native("CTFontCopyFamilyName") public static function CTFontCopyFamilyName(font:Dynamic):Dynamic;
  @:native("ATSFontFamilyIteratorCreate") public static function ATSFontFamilyIteratorCreate(iContext:Int, iFilter:Dynamic /*Dynamic*/, iRefCon:Dynamic /*Void*/, iOptions:Int, ioIterator:Dynamic /*ATSFontFamilyIterator_*/):Int;
  @:native("PBGetForkCBInfoSync") public static function PBGetForkCBInfoSync(paramBlock:Dynamic /*FSForkCBInfoParam*/):Int;
  @:native("CFStringTokenizerAdvanceToNextToken") public static function CFStringTokenizerAdvanceToNextToken(tokenizer:Dynamic /*__CFStringTokenizer*/):Dynamic /*CFStringTokenizerTokenType*/;
  @:native("MPProcessors") public static function MPProcessors():Int;
  @:native("CGPDFContentStreamRetain") public static function CGPDFContentStreamRetain(cs:CGPDFContentStream):CGPDFContentStream;
  @:native("CTLineGetStringIndexForPosition") public static function CTLineGetStringIndexForPosition(line:Dynamic, position:CGPoint):Int;
  @:native("FSFlushFork") public static function FSFlushFork(forkRefNum:Int):Int;
  @:native("CreateTextToUnicodeInfoByEncoding") public static function CreateTextToUnicodeInfoByEncoding(iEncoding:Int, oTextToUnicodeInfo:Dynamic /*OpaqueTextToUnicodeInfo*/):Int;
  @:native("AddAtomic") public static function AddAtomic(amount:Int, address:Int):Int;
  @:native("AEGetParamDesc") public static function AEGetParamDesc(theAppleEvent:Dynamic /*Dynamic*/, theAEKeyword:Int, desiredType:Int, result:Dynamic /*AEDesc*/):Int;
  @:native("InvokeGetMissingComponentResourceUPP") public static function InvokeGetMissingComponentResourceUPP(c:Dynamic /*ComponentRecord*/, resType:Int, resID:Int, refCon:Dynamic /*Void*/, resource:Int, userUPP:Dynamic):Int;
  @:native("ConvertFromUnicodeToPString") public static function ConvertFromUnicodeToPString(iUnicodeToTextInfo:Dynamic /*OpaqueUnicodeToTextInfo*/, iUnicodeLen:Int, iUnicodeStr:Dynamic /*Dynamic*/, oPascalStr:Dynamic /*Int*/):Int;
  @:native("IOSurfaceGetSeed") public static function IOSurfaceGetSeed(buffer:Dynamic /*__IOSurface*/):Dynamic /*UInt*/;
  @:native("AEInitializeDesc") public static function AEInitializeDesc(desc:Dynamic /*AEDesc*/):Dynamic /*Void*/;
  @:native("CFBagGetTypeID") public static function CFBagGetTypeID():Int;
  @:native("CFBinaryHeapGetMinimumIfPresent") public static function CFBinaryHeapGetMinimumIfPresent(heap:Dynamic /*__CFBinaryHeap*/, value:Dynamic /*Dynamic*/):Int;
  @:native("CTRunDelegateGetTypeID") public static function CTRunDelegateGetTypeID():Int;
  @:native("CFBinaryHeapCreateCopy") public static function CFBinaryHeapCreateCopy(allocator:Dynamic, capacity:Int, heap:Dynamic /*__CFBinaryHeap*/):Dynamic /*__CFBinaryHeap*/;
  @:native("NSGetSizeAndAlignment") public static function NSGetSizeAndAlignment(typePtr:Dynamic /*Dynamic*/, sizep:Int, alignp:Int):Dynamic /*Dynamic*/;
  @:native("CFNetworkCopyProxiesForURL") public static function CFNetworkCopyProxiesForURL(url:Dynamic, proxySettings:Dynamic):Dynamic;
  @:native("UIAccessibilityIsInvertColorsEnabled") public static function UIAccessibilityIsInvertColorsEnabled():Dynamic /*Bool*/;
  @:native("CFNumberGetType") public static function CFNumberGetType(number:Dynamic):Dynamic /*CFNumberType*/;
  @:native("ICGetPrefHandle") public static function ICGetPrefHandle(inst:Dynamic /*OpaqueICInstance*/, key:Dynamic, attr:Int, prefh:Int):Int;
  @:native("NSSwapLittleFloatToHost") public static function NSSwapLittleFloatToHost(used:Dynamic /*Dynamic*/):Dynamic /*Float*/;
  @:native("NSGetUncaughtExceptionHandler") public static function NSGetUncaughtExceptionHandler():Dynamic;
  @:native("NewOSLMarkUPP") public static function NewOSLMarkUPP(userRoutine:Dynamic):Dynamic;
  @:native("NSStringFromCGRect") public static function NSStringFromCGRect(rect:CGRect):NSString;
  @:native("CGImageSourceCreateWithURL") public static function CGImageSourceCreateWithURL(url:Dynamic, options:Dynamic):CGImageSource;
  @:native("UTTypeConformsTo") public static function UTTypeConformsTo(inUTI:Dynamic, inConformsToUTI:Dynamic):Int;
  @:native("CGImageGetWidth") public static function CGImageGetWidth(image:CGImage):Dynamic /*Int*/;
  @:native("CFURLGetPortNumber") public static function CFURLGetPortNumber(anURL:Dynamic):Int;
  @:native("Enqueue") public static function Enqueue(qElement:Dynamic /*QElem*/, qHeader:Dynamic /*QHdr*/):Dynamic /*Void*/;
  @:native("ATSFontGetFontFamilyResource") public static function ATSFontGetFontFamilyResource(iFont:Int, iBufferSize:Int, ioBuffer:Dynamic /*Void*/, oSize:Int):Int;
  @:native("NSNextHashEnumeratorItem") public static function NSNextHashEnumeratorItem(enumerator:Dynamic /*NSHashEnumerator*/):Dynamic /*Void*/;
  @:native("CVPixelBufferGetExtendedPixels") public static function CVPixelBufferGetExtendedPixels(pixelBuffer:Dynamic /*__CVBuffer*/, extraColumnsOnLeft:Dynamic /*Int*/, extraColumnsOnRight:Dynamic /*Int*/, extraRowsOnTop:Dynamic /*Int*/, extraRowsOnBottom:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("FSPathMoveObjectToTrashSync") public static function FSPathMoveObjectToTrashSync(sourcePath:Dynamic /*Dynamic*/, targetPath:Dynamic /*Dynamic*/, options:Int):Int;
  @:native("CSIdentityGetImageURL") public static function CSIdentityGetImageURL(identity:Dynamic /*__CSIdentity*/):Dynamic;
  @:native("NSCreateZone") public static function NSCreateZone(startSize:Int, granularity:Int, canFree:Dynamic /*Bool*/):Dynamic /*_NSZone*/;
  @:native("SecKeyCreateSignature") public static function SecKeyCreateSignature(key:Dynamic /*__SecKey*/, algorithm:Dynamic, dataToSign:Dynamic, error:Dynamic /*__CFError*/):Dynamic;
  @:native("ICAddProfile") public static function ICAddProfile(inst:Dynamic /*OpaqueICInstance*/, prototypeID:Int, newID:Int):Int;
  @:native("CFDictionaryGetCountOfValue") public static function CFDictionaryGetCountOfValue(theDict:Dynamic, value:Dynamic /*Dynamic*/):Int;
  @:native("CFRunLoopTimerGetNextFireDate") public static function CFRunLoopTimerGetNextFireDate(timer:Dynamic /*__CFRunLoopTimer*/):Float;
  @:native("CGImageMetadataTagGetType") public static function CGImageMetadataTagGetType(tag:CGImageMetadataTag):CGImageMetadataType;
  @:native("AXObserverGetRunLoopSource") public static function AXObserverGetRunLoopSource(observer:Dynamic /*__AXObserver*/):Dynamic /*__CFRunLoopSource*/;
  @:native("CVBufferGetAttachment") public static function CVBufferGetAttachment(buffer:Dynamic /*__CVBuffer*/, key:Dynamic, attachmentMode:Dynamic /*CVAttachmentMode*/):Dynamic;
  @:native("CFSetCreateMutable") public static function CFSetCreateMutable(allocator:Dynamic, capacity:Int, callBacks:Dynamic /*Dynamic*/):Dynamic /*__CFSet*/;
  @:native("InvokeOSLDisposeTokenUPP") public static function InvokeOSLDisposeTokenUPP(unneededToken:Dynamic /*AEDesc*/, userUPP:Dynamic):Int;
  @:native("MDQueryCopyQueryString") public static function MDQueryCopyQueryString(query:Dynamic /*__MDQuery*/):Dynamic;
  @:native("UIAccessibilityPostNotification") public static function UIAccessibilityPostNotification(notification:UInt, argument:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("WideShift") public static function WideShift(target:Dynamic /*Dynamic*/, shift:Int):Dynamic /*Dynamic*/;
  @:native("InvokeIndexToUCStringUPP") public static function InvokeIndexToUCStringUPP(index:Int, listDataPtr:Dynamic /*Void*/, refcon:Dynamic /*Void*/, outString:Dynamic, tsOptions:Int, userUPP:Dynamic):Int;
  @:native("CGImageCreateWithMaskingColors") public static function CGImageCreateWithMaskingColors(image:CGImage, components:Dynamic /*Dynamic*/):CGImage;
  @:native("FSEventStreamShow") public static function FSEventStreamShow(streamRef:Dynamic):Dynamic /*Void*/;
  @:native("CTFontGetPlatformFont") public static function CTFontGetPlatformFont(font:Dynamic, attributes:Dynamic):Int;
  @:native("DetachResource") public static function DetachResource(theResource:Int):Dynamic /*Void*/;
  @:native("CGContextFillPath") public static function CGContextFillPath(c:CGContext):Dynamic /*Void*/;
  @:native("SSLRead") public static function SSLRead(context:Dynamic /*SSLContext*/, data:Dynamic /*Void*/, dataLength:Dynamic /*Int*/, processed:Dynamic /*Int*/):Int;
  @:native("CGContextScaleCTM") public static function CGContextScaleCTM(c:CGContext, sx:Float, sy:Float):Dynamic /*Void*/;
  @:native("CTRunGetGlyphCount") public static function CTRunGetGlyphCount(run:Dynamic):Int;
  @:native("PasteboardCreate") public static function PasteboardCreate(inName:Dynamic, outPasteboard:Dynamic /*OpaquePasteboardRef*/):Int;
  @:native("CSGetManagedIdentityAuthority") public static function CSGetManagedIdentityAuthority():Dynamic /*__CSIdentityAuthority*/;
  @:native("CFBundleCopyInfoDictionaryInDirectory") public static function CFBundleCopyInfoDictionaryInDirectory(bundleURL:Dynamic):Dynamic;
  @:native("CFMessagePortGetContext") public static function CFMessagePortGetContext(ms:Dynamic /*__CFMessagePort*/, context:Dynamic /*CFMessagePortContext*/):Dynamic /*Void*/;
  @:native("AddAbsoluteToAbsolute") public static function AddAbsoluteToAbsolute(absoluteTime1:Dynamic /*UnsignedWide*/, absoluteTime2:Dynamic /*UnsignedWide*/):Dynamic /*UnsignedWide*/;
  @:native("NSCopyHashTableWithZone") public static function NSCopyHashTableWithZone(table:NSHashTable, zone:Dynamic /*_NSZone*/):NSHashTable;
  @:native("CGContextGetPathBoundingBox") public static function CGContextGetPathBoundingBox(c:CGContext):CGRect;
  @:native("AXUIElementIsAttributeSettable") public static function AXUIElementIsAttributeSettable(element:Dynamic, attribute:Dynamic, settable:Int):Dynamic /*AXError*/;
  @:native("SpeechManagerVersion") public static function SpeechManagerVersion():Dynamic /*NumVersion*/;
  @:native("PasteboardSetPromiseKeeper") public static function PasteboardSetPromiseKeeper(inPasteboard:Dynamic /*OpaquePasteboardRef*/, inPromiseKeeper:Dynamic, inContext:Dynamic /*Void*/):Int;
  @:native("FSEventStreamCreate") public static function FSEventStreamCreate(allocator:Dynamic, callback:Dynamic, context:Dynamic /*FSEventStreamContext*/, pathsToWatch:Dynamic, sinceWhen:Dynamic, latency:Float, flags:Int):Dynamic /*__FSEventStream*/;
  @:native("PBFSCopyFileAsync") public static function PBFSCopyFileAsync(paramBlock:Dynamic /*FSRefParam*/):Int;
  @:native("CFAbsoluteTimeGetWeekOfYear") public static function CFAbsoluteTimeGetWeekOfYear(at:Float, tz:Dynamic):Int;
  @:native("CFStringCreateWithBytes") public static function CFStringCreateWithBytes(alloc:Dynamic, bytes:Dynamic /*Dynamic*/, numBytes:Int, encoding:Int, isExternalRepresentation:Int):Dynamic;
  @:native("NSSwapLittleIntToHost") public static function NSSwapLittleIntToHost(used:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("CFStringTokenizerCreate") public static function CFStringTokenizerCreate(alloc:Dynamic, string:Dynamic, range:Dynamic /*CFRange*/, options:Int, locale:Dynamic):Dynamic /*__CFStringTokenizer*/;
  @:native("AECreateRemoteProcessResolver") public static function AECreateRemoteProcessResolver(allocator:Dynamic, url:Dynamic):Dynamic /*AERemoteProcessResolver*/;
  @:native("CGImageGetBitsPerPixel") public static function CGImageGetBitsPerPixel(image:CGImage):Dynamic /*Int*/;
  @:native("CTParagraphStyleCreate") public static function CTParagraphStyleCreate(settings:Dynamic /*Dynamic*/, settingCount:Dynamic /*Int*/):Dynamic;
  @:native("SKIndexCopyDocumentForDocumentID") public static function SKIndexCopyDocumentForDocumentID(inIndex:Dynamic /*__SKIndex*/, inDocumentID:Int):Dynamic;
  @:native("CGPDFStringGetBytePtr") public static function CGPDFStringGetBytePtr(string:CGPDFString):Dynamic /*Dynamic*/;
  @:native("CTFrameGetLineOrigins") public static function CTFrameGetLineOrigins(frame:Dynamic, range:Dynamic /*CFRange*/, origins:CGPoint):Dynamic /*Void*/;
  @:native("CFStringConvertIANACharSetNameToEncoding") public static function CFStringConvertIANACharSetNameToEncoding(theString:Dynamic):Int;
  @:native("MaximumProcessorSpeed") public static function MaximumProcessorSpeed():Dynamic /*Int*/;
  @:native("AEInstallCoercionHandler") public static function AEInstallCoercionHandler(fromType:Int, toType:Int, handler:Dynamic, handlerRefcon:Void, fromTypeIsDesc:Int, isSysHandler:Int):Int;
  @:native("CGGradientRelease") public static function CGGradientRelease(gradient:CGGradient):Dynamic /*Void*/;
  @:native("CGImageGetDecode") public static function CGImageGetDecode(image:CGImage):Dynamic /*Dynamic*/;
  @:native("InvokeSpeechErrorUPP") public static function InvokeSpeechErrorUPP(chan:Dynamic /*SpeechChannelRecord*/, refCon:Void, theError:Int, bytePos:Dynamic /*Int*/, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("LoadResource") public static function LoadResource(theResource:Int):Dynamic /*Void*/;
  @:native("ICSendGURLEvent") public static function ICSendGURLEvent(inst:Dynamic /*OpaqueICInstance*/, theEvent:Dynamic /*AEDesc*/):Int;
  @:native("CFCopyHomeDirectoryURL") public static function CFCopyHomeDirectoryURL():Dynamic;
  @:native("GetIconRefFromComponent") public static function GetIconRefFromComponent(inComponent:Dynamic /*ComponentRecord*/, outIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("KCReleaseItem") public static function KCReleaseItem(item:Dynamic /*KCItemRef*/):Int;
  @:native("LocaleOperationGetIndName") public static function LocaleOperationGetIndName(opClass:Int, nameIndex:Int, maxNameLen:Int, actualNameLen:Int, displayName:Int, displayLocale:Dynamic /*OpaqueLocaleRef*/):Int;
  @:native("SecKeyCopyKeyExchangeResult") public static function SecKeyCopyKeyExchangeResult(privateKey:Dynamic /*__SecKey*/, algorithm:Dynamic, publicKey:Dynamic /*__SecKey*/, parameters:Dynamic, error:Dynamic /*__CFError*/):Dynamic;
  @:native("CTRunGetImageBounds") public static function CTRunGetImageBounds(run:Dynamic, context:CGContext, range:Dynamic /*CFRange*/):CGRect;
  @:native("CFSocketConnectToAddress") public static function CFSocketConnectToAddress(s:Dynamic /*__CFSocket*/, address:Dynamic, timeout:Float):Dynamic /*CFSocketError*/;
  @:native("FindNextComponent") public static function FindNextComponent(aComponent:Dynamic /*ComponentRecord*/, looking:Dynamic /*ComponentDescription*/):Dynamic /*ComponentRecord*/;
  @:native("PBRenameUnicodeSync") public static function PBRenameUnicodeSync(paramBlock:Dynamic /*FSRefParam*/):Int;
  @:native("CFNumberGetTypeID") public static function CFNumberGetTypeID():Int;
  @:native("SSLCopyPeerTrust") public static function SSLCopyPeerTrust(context:Dynamic /*SSLContext*/, trust:Dynamic /*__SecTrust*/):Int;
  @:native("CFBundleCopyBundleLocalizations") public static function CFBundleCopyBundleLocalizations(bundle:Dynamic /*__CFBundle*/):Dynamic;
  @:native("PMCopyLocalizedPPD") public static function PMCopyLocalizedPPD(ppd:Dynamic, localizedPPD:Dynamic):Int;
  @:native("CFBitVectorFlipBitAtIndex") public static function CFBitVectorFlipBitAtIndex(bv:Dynamic /*__CFBitVector*/, idx:Int):Dynamic /*Void*/;
  @:native("PMSessionDefaultPrintSettings") public static function PMSessionDefaultPrintSettings(printSession:Dynamic /*OpaquePMPrintSession*/, printSettings:Dynamic /*OpaquePMPrintSettings*/):Int;
  @:native("PBMoveObjectSync") public static function PBMoveObjectSync(paramBlock:Dynamic /*FSRefParam*/):Int;
  @:native("CFAbsoluteTimeGetDayOfWeek") public static function CFAbsoluteTimeGetDayOfWeek(at:Float, tz:Dynamic):Int;
  @:native("CVPixelBufferGetDataSize") public static function CVPixelBufferGetDataSize(pixelBuffer:Dynamic /*__CVBuffer*/):Dynamic /*Int*/;
  @:native("CFCalendarCreateWithIdentifier") public static function CFCalendarCreateWithIdentifier(allocator:Dynamic, identifier:Dynamic):Dynamic /*__CFCalendar*/;
  @:native("CTFontCollectionCopyFontAttribute") public static function CTFontCollectionCopyFontAttribute(collection:Dynamic, attributeName:Dynamic, options:Dynamic /*CTFontCollectionCopyOptions*/):Dynamic;
  @:native("CGPDFPageGetDictionary") public static function CGPDFPageGetDictionary(page:CGPDFPage):CGPDFDictionary;
  @:native("CFBinaryHeapCreate") public static function CFBinaryHeapCreate(allocator:Dynamic, capacity:Int, callBacks:Dynamic /*Dynamic*/, compareContext:Dynamic /*Dynamic*/):Dynamic /*__CFBinaryHeap*/;
  @:native("CFBundlePreflightExecutable") public static function CFBundlePreflightExecutable(bundle:Dynamic /*__CFBundle*/, error:Dynamic /*__CFError*/):Int;
  @:native("CGImageCreateWithJPEGDataProvider") public static function CGImageCreateWithJPEGDataProvider(source:CGDataProvider, decode:Dynamic /*Dynamic*/, shouldInterpolate:Dynamic /*Bool*/, intent:CGColorRenderingIntent):CGImage;
  @:native("CFBundleCopyExecutableURL") public static function CFBundleCopyExecutableURL(bundle:Dynamic /*__CFBundle*/):Dynamic;
  @:native("FSGetAsyncUnmountStatus") public static function FSGetAsyncUnmountStatus(volumeOp:Dynamic /*OpaqueFSVolumeOperation*/, status:Int, volumeOpStatus:Int, volumeRefNum:Int, dissenter:Dynamic /*Dynamic*/, clientData:Dynamic /*Dynamic*/):Int;
  @:native("InvokeThreadTerminationUPP") public static function InvokeThreadTerminationUPP(threadTerminated:Int, terminationProcParam:Dynamic /*Void*/, userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CFPlugInFindFactoriesForPlugInType") public static function CFPlugInFindFactoriesForPlugInType(typeUUID:Dynamic):Dynamic;
  @:native("CFURLIsFileReferenceURL") public static function CFURLIsFileReferenceURL(url:Dynamic):Int;
  @:native("CFCalendarCopyLocale") public static function CFCalendarCopyLocale(calendar:Dynamic /*__CFCalendar*/):Dynamic;
  @:native("InvokeOSLCompareUPP") public static function InvokeOSLCompareUPP(oper:Int, obj1:Dynamic /*Dynamic*/, obj2:Dynamic /*Dynamic*/, result:Int, userUPP:Dynamic):Int;
  @:native("OSWriteSwapInt64") public static function OSWriteSwapInt64(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CGAffineTransformConcat") public static function CGAffineTransformConcat(t1:CGAffineTransform, t2:CGAffineTransform):CGAffineTransform;
  @:native("CFReadStreamCreateForStreamedHTTPRequest") public static function CFReadStreamCreateForStreamedHTTPRequest(alloc:Dynamic, requestHeaders:Dynamic /*__CFHTTPMessage*/, requestBody:Dynamic /*__CFReadStream*/):Dynamic /*__CFReadStream*/;
  @:native("CFCalendarGetMinimumDaysInFirstWeek") public static function CFCalendarGetMinimumDaysInFirstWeek(calendar:Dynamic /*__CFCalendar*/):Int;
  @:native("CGGradientRetain") public static function CGGradientRetain(gradient:CGGradient):CGGradient;
  @:native("DisposeOSLCountUPP") public static function DisposeOSLCountUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CFStringCreateMutableWithExternalCharactersNoCopy") public static function CFStringCreateMutableWithExternalCharactersNoCopy(alloc:Dynamic, chars:Int, numChars:Int, capacity:Int, externalCharactersAllocator:Dynamic):Dynamic /*__CFString*/;
  @:native("WSMethodInvocationCreate") public static function WSMethodInvocationCreate(url:Dynamic, methodName:Dynamic, protocol:Dynamic):Dynamic /*OpaqueWSMethodInvocationRef*/;
  @:native("SecAddSharedWebCredential") public static function SecAddSharedWebCredential(fqdn:Dynamic, account:Dynamic, password:Dynamic, completionHandler:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("InvokeExceptionHandlerUPP") public static function InvokeExceptionHandlerUPP(theException:Dynamic /*ExceptionInformation*/, userUPP:Dynamic):Int;
  @:native("CTFrameGetStringRange") public static function CTFrameGetStringRange(frame:Dynamic):Dynamic /*CFRange*/;
  @:native("NSDecimalString") public static function NSDecimalString(dcm:Dynamic /*Dynamic*/, locale:Dynamic /*Dynamic*/):NSString;
  @:native("CFStringGetCharacterFromInlineBuffer") public static function CFStringGetCharacterFromInlineBuffer(used:Dynamic /*Dynamic*/, used:Dynamic /*Dynamic*/):Int;
  @:native("CSIdentityGetPosixID") public static function CSIdentityGetPosixID(identity:Dynamic /*__CSIdentity*/):Dynamic /*Dynamic*/;
  @:native("CVMetalTextureCacheCreateTextureFromImage") public static function CVMetalTextureCacheCreateTextureFromImage(allocator:Dynamic, textureCache:Dynamic /*__CVMetalTextureCache*/, sourceImage:Dynamic /*__CVBuffer*/, textureAttributes:Dynamic, pixelFormat:Dynamic /*MTLPixelFormat*/, width:Dynamic /*Int*/, height:Dynamic /*Int*/, planeIndex:Dynamic /*Int*/, textureOut:Dynamic /*__CVBuffer*/):Int;
  @:native("TECGetEncodingList") public static function TECGetEncodingList(encodingConverter:Dynamic /*OpaqueTECObjectRef*/, numEncodings:Int, encodingList:Int):Int;
  @:native("FracSqrt") public static function FracSqrt(x:Int):Int;
  @:native("CGContextDrawPDFPage") public static function CGContextDrawPDFPage(c:CGContext, page:CGPDFPage):Dynamic /*Void*/;
  @:native("IsDataAvailableInIconRef") public static function IsDataAvailableInIconRef(inIconKind:Int, inIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("NXReadNSObjectFromCoder") public static function NXReadNSObjectFromCoder(decoder:NSCoder):NSObject;
  @:native("CFNumberFormatterCreateNumberFromString") public static function CFNumberFormatterCreateNumberFromString(allocator:Dynamic, formatter:Dynamic /*__CFNumberFormatter*/, string:Dynamic, rangep:Dynamic /*CFRange*/, options:Int):Dynamic;
  @:native("CTFontCollectionCreateMatchingFontDescriptorsWithOptions") public static function CTFontCollectionCreateMatchingFontDescriptorsWithOptions(collection:Dynamic, options:Dynamic):Dynamic;
  @:native("CFURLCreatePropertyFromResource") public static function CFURLCreatePropertyFromResource(alloc:Dynamic, url:Dynamic, property:Dynamic, errorCode:Int):Dynamic;
  @:native("CFURLCopyResourcePropertiesForKeys") public static function CFURLCopyResourcePropertiesForKeys(url:Dynamic, keys:Dynamic, error:Dynamic /*__CFError*/):Dynamic;
  @:native("NewCollectionExceptionUPP") public static function NewCollectionExceptionUPP(userRoutine:Dynamic):Dynamic;
  @:native("TECClearConverterContextInfo") public static function TECClearConverterContextInfo(encodingConverter:Dynamic /*OpaqueTECObjectRef*/):Int;
  @:native("CFErrorCopyUserInfo") public static function CFErrorCopyUserInfo(err:Dynamic /*__CFError*/):Dynamic;
  @:native("SecKeyDecrypt") public static function SecKeyDecrypt(key:Dynamic /*__SecKey*/, padding:Dynamic /*SecPadding*/, cipherText:Dynamic /*Dynamic*/, cipherTextLen:Dynamic /*Int*/, plainText:Dynamic /*UInt*/, plainTextLen:Dynamic /*Int*/):Int;
  @:native("RegisterIconRefFromIconFamily") public static function RegisterIconRefFromIconFamily(creator:Int, iconType:Int, iconFamily:Dynamic /*IconFamilyResource*/, theIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("NSShouldRetainWithZone") public static function NSShouldRetainWithZone(anObject:Dynamic /*Dynamic*/, requestedZone:Dynamic /*_NSZone*/):Dynamic /*Bool*/;
  @:native("NSHostByteOrder") public static function NSHostByteOrder():Dynamic /*Int*/;
  @:native("SetDebuggerNotificationProcs") public static function SetDebuggerNotificationProcs(notifyNewThread:Dynamic, notifyDisposeThread:Dynamic, notifyThreadScheduler:Dynamic):Int;
  @:native("KCReleaseKeychain") public static function KCReleaseKeychain(keychain:Dynamic /*KCRef*/):Int;
  @:native("CFRunLoopGetNextTimerFireDate") public static function CFRunLoopGetNextTimerFireDate(rl:Dynamic /*__CFRunLoop*/, mode:Dynamic):Float;
  @:native("MPRemoteCallCFM") public static function MPRemoteCallCFM(remoteProc:Dynamic, parameter:Dynamic /*Void*/, context:Int):Dynamic /*Void*/;
  @:native("ICGetPref") public static function ICGetPref(inst:Dynamic /*OpaqueICInstance*/, key:Dynamic, attr:Int, buf:Dynamic /*Void*/, size:Dynamic /*Int*/):Int;
  @:native("UIImageWriteToSavedPhotosAlbum") public static function UIImageWriteToSavedPhotosAlbum(image:UIImage, completionTarget:Dynamic /*Dynamic*/, completionSelector:Dynamic /*String*/, contextInfo:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("CGContextShowGlyphsAtPositions") public static function CGContextShowGlyphsAtPositions(c:CGContext, glyphs:Dynamic /*Dynamic*/, Lpositions:Dynamic /*Dynamic*/, count:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("CGBitmapContextCreate") public static function CGBitmapContextCreate(data:Dynamic /*Void*/, width:Dynamic /*Int*/, height:Dynamic /*Int*/, bitsPerComponent:Dynamic /*Int*/, bytesPerRow:Dynamic /*Int*/, space:CGColorSpace, bitmapInfo:Dynamic /*UInt*/):CGContext;
  @:native("CFDictionaryGetValueIfPresent") public static function CFDictionaryGetValueIfPresent(theDict:Dynamic, key:Dynamic /*Dynamic*/, value:Dynamic /*Dynamic*/):Int;
  @:native("BitAnd") public static function BitAnd(value1:Dynamic /*Int*/, value2:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("CFStringTokenizerGetCurrentSubTokens") public static function CFStringTokenizerGetCurrentSubTokens(tokenizer:Dynamic /*__CFStringTokenizer*/, ranges:Dynamic /*CFRange*/, maxRangeLength:Int, derivedSubTokens:Dynamic /*__CFArray*/):Int;
  @:native("NewKCCallbackUPP") public static function NewKCCallbackUPP(userRoutine:Dynamic):Dynamic;
  @:native("CFURLCreateWithBytes") public static function CFURLCreateWithBytes(allocator:Dynamic, URLBytes:Dynamic /*Dynamic*/, length:Int, encoding:Int, baseURL:Dynamic):Dynamic;
  @:native("CSIdentityAddAlias") public static function CSIdentityAddAlias(identity:Dynamic /*__CSIdentity*/, alias:Dynamic):Dynamic /*Void*/;
  @:native("ColorSyncProfileCreateDeviceProfile") public static function ColorSyncProfileCreateDeviceProfile(deviceClass:Dynamic, deviceID:Dynamic, profileID:Dynamic):Dynamic;
  @:native("CFMachPortGetPort") public static function CFMachPortGetPort(port:Dynamic /*__CFMachPort*/):Dynamic /*Dynamic*/;
  @:native("CFDictionaryGetValue") public static function CFDictionaryGetValue(theDict:Dynamic, key:Dynamic /*Dynamic*/):Dynamic /*Dynamic*/;
  @:native("CGColorSpaceRetain") public static function CGColorSpaceRetain(space:CGColorSpace):CGColorSpace;
  @:native("CFCalendarGetMinimumRangeOfUnit") public static function CFCalendarGetMinimumRangeOfUnit(calendar:Dynamic /*__CFCalendar*/, unit:Dynamic /*CFCalendarUnit*/):Dynamic /*CFRange*/;
  @:native("GetComponentResource") public static function GetComponentResource(aComponent:Dynamic /*ComponentRecord*/, resType:Int, resID:Int, theResource:Int):Int;
  @:native("CFMessagePortCreateRunLoopSource") public static function CFMessagePortCreateRunLoopSource(allocator:Dynamic, local:Dynamic /*__CFMessagePort*/, order:Int):Dynamic /*__CFRunLoopSource*/;
  @:native("FSEventStreamStart") public static function FSEventStreamStart(streamRef:Dynamic /*__FSEventStream*/):Int;
  @:native("ColorSyncProfileCreateMutable") public static function ColorSyncProfileCreateMutable():Dynamic /*ColorSyncProfile*/;
  @:native("LSCopyDefaultApplicationURLForURL") public static function LSCopyDefaultApplicationURLForURL(inURL:Dynamic, inRoleMask:Dynamic /*LSRolesMask*/, outError:Dynamic /*__CFError*/):Dynamic;
  @:native("LSSharedFileListSetProperty") public static function LSSharedFileListSetProperty(inList:Dynamic /*OpaqueLSSharedFileListRef*/, inPropertyName:Dynamic, inPropertyData:Dynamic):Int;
  @:native("AXValueGetTypeID") public static function AXValueGetTypeID():Int;
  @:native("CFCalendarSetTimeZone") public static function CFCalendarSetTimeZone(calendar:Dynamic /*__CFCalendar*/, tz:Dynamic):Dynamic /*Void*/;
  @:native("PBGetCatalogInfoSync") public static function PBGetCatalogInfoSync(paramBlock:Dynamic /*FSRefParam*/):Int;
  @:native("CGPointMake") public static function CGPointMake(x:Float, y:Float):CGPoint;
  @:native("MDQueryCreate") public static function MDQueryCreate(allocator:Dynamic, queryString:Dynamic, valueListAttrs:Dynamic, sortingAttrs:Dynamic):Dynamic /*__MDQuery*/;
  @:native("CGFontGetUnitsPerEm") public static function CGFontGetUnitsPerEm(font:CGFont):Dynamic /*Int*/;
  @:native("CGImageGetAlphaInfo") public static function CGImageGetAlphaInfo(image:CGImage):CGImageAlphaInfo;
  @:native("KCGetData") public static function KCGetData(item:Dynamic /*KCItemRef*/, maxLength:Int, data:Dynamic /*Void*/, actualLength:Int):Int;
  @:native("CFStringTrim") public static function CFStringTrim(theString:Dynamic /*__CFString*/, trimString:Dynamic):Dynamic /*Void*/;
  @:native("CTFontGetGlyphCount") public static function CTFontGetGlyphCount(font:Dynamic):Int;
  @:native("AEResolve") public static function AEResolve(objectSpecifier:Dynamic /*Dynamic*/, callbackFlags:Dynamic /*Int*/, theToken:Dynamic /*AEDesc*/):Int;
  @:native("GetComponentTypeModSeed") public static function GetComponentTypeModSeed(componentType:Int):Int;
  @:native("MPDeleteSemaphore") public static function MPDeleteSemaphore(semaphore:Dynamic /*OpaqueMPSemaphoreID*/):Int;
  @:native("NSEnumerateMapTable") public static function NSEnumerateMapTable(table:NSMapTable):Dynamic /*NSMapEnumerator*/;
  @:native("SSLAddDistinguishedName") public static function SSLAddDistinguishedName(context:Dynamic /*SSLContext*/, derDN:Dynamic /*Dynamic*/, derDNLen:Dynamic /*Int*/):Int;
  @:native("PasteboardCopyItemFlavors") public static function PasteboardCopyItemFlavors(inPasteboard:Dynamic /*OpaquePasteboardRef*/, inItem:Void, outFlavorTypes:Dynamic):Int;
  @:native("CFFileSecuritySetAccessControlList") public static function CFFileSecuritySetAccessControlList(fileSec:Dynamic /*__CFFileSecurity*/, accessControlList:Dynamic /*Dynamic*/):Int;
  @:native("CTFontGetAdvancesForGlyphs") public static function CTFontGetAdvancesForGlyphs(font:Dynamic, orientation:Dynamic /*CTFontOrientation*/, glyphs:Dynamic /*Dynamic*/, advances:CGSize, count:Int):Dynamic /*Float*/;
  @:native("SSLGetAllowsExpiredCerts") public static function SSLGetAllowsExpiredCerts(context:Dynamic /*SSLContext*/, allowsExpired:Int):Int;
  @:native("FindFolder") public static function FindFolder(vRefNum:Int, folderType:Int, createFolder:Int, foundVRefNum:Int, foundDirID:Int):Int;
  @:native("CFStringFold") public static function CFStringFold(theString:Dynamic /*__CFString*/, theFlags:Dynamic /*CFStringCompareFlags*/, theLocale:Dynamic):Dynamic /*Void*/;
  @:native("CFStringIsSurrogateLowCharacter") public static function CFStringIsSurrogateLowCharacter(used:Dynamic /*Dynamic*/):Int;
  @:native("CTFrameGetFrameAttributes") public static function CTFrameGetFrameAttributes(frame:Dynamic):Dynamic;
  @:native("CFHTTPMessageCreateRequest") public static function CFHTTPMessageCreateRequest(alloc:Dynamic, requestMethod:Dynamic, url:Dynamic, httpVersion:Dynamic):Dynamic /*__CFHTTPMessage*/;
  @:native("CFFileDescriptorDisableCallBacks") public static function CFFileDescriptorDisableCallBacks(f:Dynamic /*__CFFileDescriptor*/, callBackTypes:Int):Dynamic /*Void*/;
  @:native("PBAllocateForkAsync") public static function PBAllocateForkAsync(paramBlock:Dynamic /*FSForkIOParam*/):Dynamic /*Void*/;
  @:native("MDQuerySetSearchScope") public static function MDQuerySetSearchScope(query:Dynamic /*__MDQuery*/, scopeDirectories:Dynamic, scopeOptions:Int):Dynamic /*Void*/;
  @:native("CGColorSpaceCopyICCData") public static function CGColorSpaceCopyICCData(space:CGColorSpace):Dynamic;
  @:native("ATSFontGetName") public static function ATSFontGetName(iFont:Int, iOptions:Int, oName:Dynamic):Int;
  @:native("CFNotificationCenterGetDarwinNotifyCenter") public static function CFNotificationCenterGetDarwinNotifyCenter():Dynamic /*__CFNotificationCenter*/;
  @:native("CFSocketRegisterSocketSignature") public static function CFSocketRegisterSocketSignature(nameServerSignature:Dynamic /*Dynamic*/, timeout:Float, name:Dynamic, signature:Dynamic /*Dynamic*/):Dynamic /*CFSocketError*/;
  @:native("CGContextStrokeEllipseInRect") public static function CGContextStrokeEllipseInRect(c:CGContext, rect:CGRect):Dynamic /*Void*/;
  @:native("GetCurrentProcess") public static function GetCurrentProcess(PSN:Dynamic /*ProcessSerialNumber*/):Int;
  @:native("ATSFontIteratorRelease") public static function ATSFontIteratorRelease(ioIterator:Dynamic /*ATSFontIterator_*/):Int;
  @:native("Dequeue") public static function Dequeue(qElement:Dynamic /*QElem*/, qHeader:Dynamic /*QHdr*/):Int;
  @:native("U64Div") public static function U64Div(dividend:Dynamic, divisor:Dynamic):Dynamic;
  @:native("CSGetDefaultIdentityAuthority") public static function CSGetDefaultIdentityAuthority():Dynamic /*__CSIdentityAuthority*/;
  @:native("SKSearchResultsGetInfoInRange") public static function SKSearchResultsGetInfoInRange(inSearchResults:Dynamic /*__SKSearchResults*/, inRange:Dynamic /*CFRange*/, outDocumentsArray:Dynamic, outIndexesArray:Dynamic /*__SKIndex*/, outScoresArray:Dynamic /*Float*/):Int;
  @:native("InvokeIconActionUPP") public static function InvokeIconActionUPP(theType:Int, theIcon:Int, yourDataPtr:Dynamic /*Void*/, userUPP:Dynamic):Int;
  @:native("ICParseURL") public static function ICParseURL(inst:Dynamic /*OpaqueICInstance*/, hint:Dynamic, data:Dynamic /*Dynamic*/, len:Dynamic /*Int*/, selStart:Dynamic /*Int*/, selEnd:Dynamic /*Int*/, url:Int):Int;
  @:native("S64Div") public static function S64Div(dividend:Dynamic, divisor:Dynamic):Dynamic;
  @:native("CGImageGetBitmapInfo") public static function CGImageGetBitmapInfo(image:CGImage):CGBitmapInfo;
  @:native("PMSessionBeginPageNoDialog") public static function PMSessionBeginPageNoDialog(printSession:Dynamic /*OpaquePMPrintSession*/, pageFormat:Dynamic /*OpaquePMPageFormat*/, pageFrame:Dynamic /*Dynamic*/):Int;
  @:native("CVGetHostClockMinimumTimeDelta") public static function CVGetHostClockMinimumTimeDelta():Dynamic /*UInt*/;
  @:native("CFRunLoopObserverGetTypeID") public static function CFRunLoopObserverGetTypeID():Int;
  @:native("PBCreateFileUnicodeAsync") public static function PBCreateFileUnicodeAsync(paramBlock:Dynamic /*FSRefParam*/):Dynamic /*Void*/;
  @:native("CTFontManagerEnableFontDescriptors") public static function CTFontManagerEnableFontDescriptors(descriptors:Dynamic, enable:Dynamic /*Bool*/):Dynamic /*Void*/;
  @:native("CFBagRemoveAllValues") public static function CFBagRemoveAllValues(theBag:Dynamic /*__CFBag*/):Dynamic /*Void*/;
  @:native("ICEnd") public static function ICEnd(inst:Dynamic /*OpaqueICInstance*/):Int;
  @:native("CFBagSetValue") public static function CFBagSetValue(theBag:Dynamic /*__CFBag*/, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("CVPixelBufferFillExtendedPixels") public static function CVPixelBufferFillExtendedPixels(pixelBuffer:Dynamic /*__CVBuffer*/):Int;
  @:native("FSPathMoveObjectToTrashAsync") public static function FSPathMoveObjectToTrashAsync(fileOp:Dynamic /*__FSFileOperation*/, sourcePath:Dynamic /*Dynamic*/, flags:Int, callback:Dynamic, statusChangeInterval:Float, clientContext:Dynamic /*FSFileOperationClientContext*/):Int;
  @:native("CFStringGetCString") public static function CFStringGetCString(theString:Dynamic, buffer:Dynamic /*Int*/, bufferSize:Int, encoding:Int):Int;
  @:native("DADiskCreateFromBSDName") public static function DADiskCreateFromBSDName(allocator:Dynamic, session:Dynamic /*__DASession*/, name:Dynamic /*Dynamic*/):Dynamic /*__DADisk*/;
  @:native("CFLocaleGetValue") public static function CFLocaleGetValue(locale:Dynamic, key:Dynamic):Dynamic;
  @:native("CGFontGetItalicAngle") public static function CGFontGetItalicAngle(font:CGFont):Float;
  @:native("NSZoneFree") public static function NSZoneFree(zone:Dynamic /*_NSZone*/, ptr:Dynamic /*Void*/):Dynamic /*Void*/;
  @:native("CFHTTPAuthenticationCopyRealm") public static function CFHTTPAuthenticationCopyRealm(auth:Dynamic /*_CFHTTPAuthentication*/):Dynamic;
  @:native("CSIdentityIsCommitting") public static function CSIdentityIsCommitting(identity:Dynamic /*__CSIdentity*/):Int;
  @:native("Frac2X") public static function Frac2X(x:Int):Dynamic /*Float*/;
  @:native("CFURLStopAccessingSecurityScopedResource") public static function CFURLStopAccessingSecurityScopedResource(url:Dynamic):Dynamic /*Void*/;
  @:native("CFPlugInInstanceGetInstanceData") public static function CFPlugInInstanceGetInstanceData(instance:Dynamic /*__CFPlugInInstance*/):Dynamic /*Void*/;
  @:native("AXUIElementCreateApplication") public static function AXUIElementCreateApplication(pid:Dynamic /*Dynamic*/):Dynamic;
  @:native("CFAttributedStringGetLength") public static function CFAttributedStringGetLength(aStr:Dynamic):Int;
  @:native("NewOSLGetMarkTokenUPP") public static function NewOSLGetMarkTokenUPP(userRoutine:Dynamic):Dynamic;
  @:native("CFHostCancelInfoResolution") public static function CFHostCancelInfoResolution(theHost:Dynamic /*__CFHost*/, info:Dynamic /*CFHostInfoType*/):Dynamic /*Void*/;
  @:native("UIGraphicsEndPDFContext") public static function UIGraphicsEndPDFContext():Dynamic /*Void*/;
  @:native("CFSocketSetSocketFlags") public static function CFSocketSetSocketFlags(s:Dynamic /*__CFSocket*/, flags:Int):Dynamic /*Void*/;
  @:native("CFDataGetBytes") public static function CFDataGetBytes(theData:Dynamic, range:Dynamic /*CFRange*/, buffer:Int):Dynamic /*Void*/;
  @:native("CFStringAppend") public static function CFStringAppend(theString:Dynamic /*__CFString*/, appendedString:Dynamic):Dynamic /*Void*/;
  @:native("CTLineGetGlyphCount") public static function CTLineGetGlyphCount(line:Dynamic):Int;
  @:native("CGPDFDictionaryGetArray") public static function CGPDFDictionaryGetArray(dict:CGPDFDictionary, key:Dynamic /*Dynamic*/, value:CGPDFArray):Dynamic /*Bool*/;
  @:native("CTRunGetPositions") public static function CTRunGetPositions(run:Dynamic, range:Dynamic /*CFRange*/, buffer:CGPoint):Dynamic /*Void*/;
  @:native("UIAccessibilityIsSwitchControlRunning") public static function UIAccessibilityIsSwitchControlRunning():Dynamic /*Bool*/;
  @:native("MPProcessorsScheduled") public static function MPProcessorsScheduled():Int;
  @:native("AEPutParamPtr") public static function AEPutParamPtr(theAppleEvent:Dynamic /*AEDesc*/, theAEKeyword:Int, typeCode:Int, dataPtr:Dynamic /*Dynamic*/, dataSize:Int):Int;
  @:native("FSPathMoveObjectSync") public static function FSPathMoveObjectSync(sourcePath:Dynamic /*Dynamic*/, destDirPath:Dynamic /*Dynamic*/, destName:Dynamic, targetPath:Dynamic /*Dynamic*/, options:Int):Int;
  @:native("CGDataProviderCopyData") public static function CGDataProviderCopyData(provider:CGDataProvider):Dynamic;
  @:native("ATSFontNotificationUnsubscribe") public static function ATSFontNotificationUnsubscribe(notificationRef:Dynamic /*ATSFontNotificationRef_*/):Int;
  @:native("CTFontDescriptorGetTypeID") public static function CTFontDescriptorGetTypeID():Int;
  @:native("CTFontDescriptorMatchFontDescriptorsWithProgressHandler") public static function CTFontDescriptorMatchFontDescriptorsWithProgressHandler(descriptors:Dynamic, mandatoryAttributes:Dynamic, progressBlock:Dynamic):Dynamic /*Bool*/;
  @:native("CGImageSourceGetTypeID") public static function CGImageSourceGetTypeID():Int;
  @:native("CSIdentitySetCertificate") public static function CSIdentitySetCertificate(user:Dynamic /*__CSIdentity*/, certificate:Dynamic /*__SecCertificate*/):Dynamic /*Void*/;
  @:native("CGContextGetPathCurrentPoint") public static function CGContextGetPathCurrentPoint(c:CGContext):CGPoint;
  @:native("CTTypesetterCreateLineWithOffset") public static function CTTypesetterCreateLineWithOffset(typesetter:Dynamic, stringRange:Dynamic /*CFRange*/, offset:Dynamic /*Float*/):Dynamic;
  @:native("AXValueGetType") public static function AXValueGetType(value:Dynamic):Dynamic /*AXValueType*/;
  @:native("ATSCreateFontQueryRunLoopSource") public static function ATSCreateFontQueryRunLoopSource(queryOrder:Int, sourceOrder:Int, callout:Dynamic, context:Dynamic /*Dynamic*/):Dynamic /*__CFRunLoopSource*/;
  @:native("CFAllocatorReallocate") public static function CFAllocatorReallocate(allocator:Dynamic, ptr:Dynamic /*Void*/, newsize:Int, hint:Int):Dynamic /*Void*/;
  @:native("CVMetalTextureGetTypeID") public static function CVMetalTextureGetTypeID():Int;
  @:native("MPYield") public static function MPYield():Dynamic /*Void*/;
  @:native("NSDecimalDivide") public static function NSDecimalDivide(result:Dynamic /*NSDecimal*/, leftOperand:Dynamic /*Dynamic*/, rightOperand:Dynamic /*Dynamic*/, roundingMode:NSRoundingMode):NSCalculationError;
  @:native("CSIdentityQueryCreateForCurrentUser") public static function CSIdentityQueryCreateForCurrentUser(allocator:Dynamic):Dynamic /*__CSIdentityQuery*/;
  @:native("CFRunLoopAddTimer") public static function CFRunLoopAddTimer(rl:Dynamic /*__CFRunLoop*/, timer:Dynamic /*__CFRunLoopTimer*/, mode:Dynamic):Dynamic /*Void*/;
  @:native("GetIconRefOwners") public static function GetIconRefOwners(theIconRef:Dynamic /*OpaqueIconRef*/, owners:Int):Int;
  @:native("CGPDFContextCreateWithURL") public static function CGPDFContextCreateWithURL(url:Dynamic, mediaBox:Dynamic /*Dynamic*/, auxiliaryInfo:Dynamic):CGContext;
  @:native("CGPDFDictionaryGetObject") public static function CGPDFDictionaryGetObject(dict:CGPDFDictionary, key:Dynamic /*Dynamic*/, value:CGPDFObject):Dynamic /*Bool*/;
  @:native("CFCharacterSetRemoveCharactersInRange") public static function CFCharacterSetRemoveCharactersInRange(theSet:Dynamic /*__CFCharacterSet*/, theRange:Dynamic /*CFRange*/):Dynamic /*Void*/;
  @:native("PBMoveObjectAsync") public static function PBMoveObjectAsync(paramBlock:Dynamic /*FSRefParam*/):Dynamic /*Void*/;
  @:native("FSCatalogSearch") public static function FSCatalogSearch(iterator:Dynamic /*OpaqueFSIterator*/, searchCriteria:Dynamic /*Dynamic*/, maximumObjects:Int, actualObjects:Int, containerChanged:Int, whichInfo:Int, catalogInfos:Dynamic /*FSCatalogInfo*/, refs:Dynamic /*FSRef*/, specs:Dynamic /*FSSpec*/, names:Dynamic /*HFSUniStr255*/):Int;
  @:native("CGRectGetWidth") public static function CGRectGetWidth(rect:CGRect):Float;
  @:native("CGPDFScannerPopObject") public static function CGPDFScannerPopObject(scanner:CGPDFScanner, value:CGPDFObject):Dynamic /*Bool*/;
  @:native("AEGetSpecialHandler") public static function AEGetSpecialHandler(functionClass:Int, handler:Dynamic, isSysHandler:Int):Int;
  @:native("CFBitVectorSetCount") public static function CFBitVectorSetCount(bv:Dynamic /*__CFBitVector*/, count:Int):Dynamic /*Void*/;
  @:native("CFDateFormatterCreateDateFormatFromTemplate") public static function CFDateFormatterCreateDateFormatFromTemplate(allocator:Dynamic, tmplate:Dynamic, options:Int, locale:Dynamic):Dynamic;
  @:native("IOSurfaceCreateXPCObject") public static function IOSurfaceCreateXPCObject(aSurface:Dynamic /*__IOSurface*/):Dynamic /*Dynamic*/;
  @:native("TempNewHandle") public static function TempNewHandle(logicalSize:Int, resultCode:Int):Int;
  @:native("AECreateAppleEvent") public static function AECreateAppleEvent(theAEEventClass:Int, theAEEventID:Int, target:Dynamic /*Dynamic*/, returnID:Int, transactionID:Int, result:Dynamic /*AEDesc*/):Int;
  @:native("NSCompareMapTables") public static function NSCompareMapTables(table1:NSMapTable, table2:NSMapTable):Dynamic /*Bool*/;
  @:native("CFSetGetCountOfValue") public static function CFSetGetCountOfValue(theSet:Dynamic, value:Dynamic /*Dynamic*/):Int;
  @:native("CFPlugInCreate") public static function CFPlugInCreate(allocator:Dynamic, plugInURL:Dynamic):Dynamic /*__CFBundle*/;
  @:native("AEPutArray") public static function AEPutArray(theAEDescList:Dynamic /*AEDesc*/, arrayType:Dynamic, arrayPtr:Dynamic /*Dynamic*/, itemType:Int, itemSize:Int, itemCount:Dynamic /*Int*/):Int;
  @:native("SKIndexCreateWithMutableData") public static function SKIndexCreateWithMutableData(inData:Dynamic /*__CFData*/, inIndexName:Dynamic, inIndexType:Dynamic /*SKIndexType*/, inAnalysisProperties:Dynamic):Dynamic /*__SKIndex*/;
  @:native("CVPixelBufferGetTypeID") public static function CVPixelBufferGetTypeID():Int;
  @:native("PurgeCollectionTag") public static function PurgeCollectionTag(c:Dynamic /*OpaqueCollection*/, tag:Int):Dynamic /*Void*/;
  @:native("SSLCopyCertificateAuthorities") public static function SSLCopyCertificateAuthorities(context:Dynamic /*SSLContext*/, certificates:Dynamic):Int;
  @:native("NSMapMember") public static function NSMapMember(table:NSMapTable, key:Dynamic /*Dynamic*/, originalKey:Dynamic /*Void*/, value:Dynamic /*Void*/):Dynamic /*Bool*/;
  @:native("CompositeIconRef") public static function CompositeIconRef(backgroundIconRef:Dynamic /*OpaqueIconRef*/, foregroundIconRef:Dynamic /*OpaqueIconRef*/, compositeIconRef:Dynamic /*OpaqueIconRef*/):Int;
  @:native("CFNumberFormatterGetDecimalInfoForCurrencyCode") public static function CFNumberFormatterGetDecimalInfoForCurrencyCode(currencyCode:Dynamic, defaultFractionDigits:Dynamic /*Int*/, roundingIncrement:Dynamic /*Float*/):Int;
  @:native("DisposeOSLCompareUPP") public static function DisposeOSLCompareUPP(userUPP:Dynamic):Dynamic /*Void*/;
  @:native("CGContextStrokeLineSegments") public static function CGContextStrokeLineSegments(c:CGContext, points:Dynamic /*Dynamic*/, count:Dynamic /*Int*/):Dynamic /*Void*/;
  @:native("TECGetInfo") public static function TECGetInfo(tecInfo:Dynamic /*TECInfo*/):Int;
  @:native("CFHTTPMessageGetResponseStatusCode") public static function CFHTTPMessageGetResponseStatusCode(response:Dynamic /*__CFHTTPMessage*/):Int;
  @:native("CFPlugInInstanceGetTypeID") public static function CFPlugInInstanceGetTypeID():Int;
  @:native("PMCopyPPDData") public static function PMCopyPPDData(ppd:Dynamic, data:Dynamic):Int;
  @:native("CFSocketCopyRegisteredSocketSignature") public static function CFSocketCopyRegisteredSocketSignature(nameServerSignature:Dynamic /*Dynamic*/, timeout:Float, name:Dynamic, signature:Dynamic /*CFSocketSignature*/, nameServerAddress:Dynamic):Dynamic /*CFSocketError*/;
  @:native("AXUIElementCopyActionDescription") public static function AXUIElementCopyActionDescription(element:Dynamic, action:Dynamic, description:Dynamic):Dynamic /*AXError*/;
  @:native("CGPDFScannerPopInteger") public static function CGPDFScannerPopInteger(scanner:CGPDFScanner, value:Int):Dynamic /*Bool*/;
  @:native("CFDateFormatterCreateDateFromString") public static function CFDateFormatterCreateDateFromString(allocator:Dynamic, formatter:Dynamic /*__CFDateFormatter*/, string:Dynamic, rangep:Dynamic /*CFRange*/):Dynamic;
  @:native("SSLGetMaxDatagramRecordSize") public static function SSLGetMaxDatagramRecordSize(dtlsContext:Dynamic /*SSLContext*/, maxSize:Dynamic /*Int*/):Int;
  @:native("CGContextDrawTiledImage") public static function CGContextDrawTiledImage(c:CGContext, rect:CGRect, image:CGImage):Dynamic /*Void*/;
  @:native("CGPDFStringGetLength") public static function CGPDFStringGetLength(string:CGPDFString):Dynamic /*Int*/;
  @:native("CGImageGetDataProvider") public static function CGImageGetDataProvider(image:CGImage):CGDataProvider;
  @:native("FSFileSecurityCopyAccessControlList") public static function FSFileSecurityCopyAccessControlList(fileSec:Dynamic /*__FSFileSecurity*/, accessControlList:Dynamic /*Dynamic*/):Int;
  @:native("CFCopyDescription") public static function CFCopyDescription(cf:Dynamic):Dynamic;
  @:native("AXUIElementCopyParameterizedAttributeValue") public static function AXUIElementCopyParameterizedAttributeValue(element:Dynamic, parameterizedAttribute:Dynamic, parameter:Dynamic, result:Dynamic):Dynamic /*AXError*/;
  @:native("CFAbsoluteTimeGetGregorianDate") public static function CFAbsoluteTimeGetGregorianDate(at:Float, tz:Dynamic):Dynamic /*CFGregorianDate*/;
  @:native("LSSetDefaultHandlerForURLScheme") public static function LSSetDefaultHandlerForURLScheme(inURLScheme:Dynamic, inHandlerBundleID:Dynamic):Int;
  @:native("LSSetExtensionHiddenForRef") public static function LSSetExtensionHiddenForRef(inRef:Dynamic /*Dynamic*/, inHide:Int):Int;
  @:native("HIShapeIsRectangular") public static function HIShapeIsRectangular(inShape:Dynamic):Int;
  @:native("CFRunLoopGetCurrent") public static function CFRunLoopGetCurrent():Dynamic /*__CFRunLoop*/;
  @:native("CFBundleCopyAuxiliaryExecutableURL") public static function CFBundleCopyAuxiliaryExecutableURL(bundle:Dynamic /*__CFBundle*/, executableName:Dynamic):Dynamic;
  @:native("MakeVoiceSpec") public static function MakeVoiceSpec(creator:Int, id:Int, voice:Dynamic /*VoiceSpec*/):Int;
  @:native("NSHashRemove") public static function NSHashRemove(table:NSHashTable, pointer:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("UCTypeSelectCreateSelector") public static function UCTypeSelectCreateSelector(locale:Dynamic /*OpaqueLocaleRef*/, opVariant:Int, options:Int, newSelector:Dynamic /*OpaqueUCTypeSelectRef*/):Int;
  @:native("CTFontCopyPostScriptName") public static function CTFontCopyPostScriptName(font:Dynamic):Dynamic;
  @:native("SetSpeechPitch") public static function SetSpeechPitch(chan:Dynamic /*SpeechChannelRecord*/, pitch:Int):Int;
  @:native("CFURLCopyPathExtension") public static function CFURLCopyPathExtension(url:Dynamic):Dynamic;
  @:native("CGFunctionCreate") public static function CGFunctionCreate(info:Dynamic /*Void*/, domainDimension:Dynamic /*Int*/, domain:Dynamic /*Dynamic*/, rangeDimension:Dynamic /*Int*/, range:Dynamic /*Dynamic*/, callbacks:Dynamic /*Dynamic*/):CGFunction;
  @:native("CFBagCreateMutable") public static function CFBagCreateMutable(allocator:Dynamic, capacity:Int, callBacks:Dynamic /*Dynamic*/):Dynamic /*__CFBag*/;
  @:native("CGAffineTransformScale") public static function CGAffineTransformScale(t:CGAffineTransform, sx:Float, sy:Float):CGAffineTransform;
  @:native("InvokeCollectionFlattenUPP") public static function InvokeCollectionFlattenUPP(size:Int, data:Dynamic /*Void*/, refCon:Dynamic /*Void*/, userUPP:Dynamic):Int;
  @:native("CFBinaryHeapAddValue") public static function CFBinaryHeapAddValue(heap:Dynamic /*__CFBinaryHeap*/, value:Dynamic /*Dynamic*/):Dynamic /*Void*/;
  @:native("AbsoluteDeltaToDuration") public static function AbsoluteDeltaToDuration(leftAbsoluteTime:Dynamic /*UnsignedWide*/, rightAbsoluteTime:Dynamic /*UnsignedWide*/):Int;
  @:native("CFTreeAppendChild") public static function CFTreeAppendChild(tree:Dynamic /*__CFTree*/, newChild:Dynamic /*__CFTree*/):Dynamic /*Void*/;
  @:native("SubDurationFromAbsolute") public static function SubDurationFromAbsolute(duration:Int, absoluteTime:Dynamic /*UnsignedWide*/):Dynamic /*UnsignedWide*/;
  @:native("KCLock") public static function KCLock(keychain:Dynamic /*KCRef*/):Int;
  @:native("GetSpeechPitch") public static function GetSpeechPitch(chan:Dynamic /*SpeechChannelRecord*/, pitch:Int):Int;
  @:native("CFStringInsert") public static function CFStringInsert(str:Dynamic /*__CFString*/, idx:Int, insertedStr:Dynamic):Dynamic /*Void*/;
  @:native("CGContextSetShouldSubpixelPositionFonts") public static function CGContextSetShouldSubpixelPositionFonts(c:CGContext, shouldSubpixelPositionFonts:Dynamic /*Bool*/):Dynamic /*Void*/;
  @:native("SSLSetAllowsExpiredCerts") public static function SSLSetAllowsExpiredCerts(context:Dynamic /*SSLContext*/, allowsExpired:Int):Int;
  @:native("CGRectGetMinY") public static function CGRectGetMinY(rect:CGRect):Float;
  @:native("UncaptureComponent") public static function UncaptureComponent(aComponent:Dynamic /*ComponentRecord*/):Int;
  @:native("CGPDFDocumentGetRotationAngle") public static function CGPDFDocumentGetRotationAngle(document:CGPDFDocument, page:Dynamic /*Int*/):Dynamic /*Int*/;
  @:native("ThreadBeginCritical") public static function ThreadBeginCritical():Int;
  @:native("InsXTime") public static function InsXTime(tmTaskPtr:Dynamic /*QElem*/):Dynamic /*Void*/;
  @:native("CGPDFDictionaryGetCount") public static function CGPDFDictionaryGetCount(dict:CGPDFDictionary):Dynamic /*Int*/;
  @:native("CFBundleGetPlugIn") public static function CFBundleGetPlugIn(bundle:Dynamic /*__CFBundle*/):Dynamic /*__CFBundle*/;
  @:native("CFNetDiagnosticSetName") public static function CFNetDiagnosticSetName(details:Dynamic /*__CFNetDiagnostic*/, name:Dynamic):Dynamic /*Void*/;
}
